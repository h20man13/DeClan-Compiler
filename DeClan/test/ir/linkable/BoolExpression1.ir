SYMBOL SECTION
 ENTRY b CONST INTERNAL a
 ENTRY d CONST INTERNAL b
 ENTRY f EXTERNAL PARAM RNeg 0
 ENTRY g EXTERNAL RETURN RNeg
 ENTRY i CONST INTERNAL c
 ENTRY k CONST INTERNAL d
 ENTRY l INTERNAL result
 ENTRY m EXTERNAL PARAM IntToReal 0
 ENTRY n EXTERNAL RETURN IntToReal
 ENTRY p EXTERNAL PARAM RMul 0
 ENTRY q EXTERNAL PARAM RMul 1
 ENTRY r EXTERNAL RETURN RMul
 ENTRY u EXTERNAL PARAM RDivide 0
 ENTRY v EXTERNAL PARAM RDivide 1
 ENTRY w EXTERNAL RETURN RDivide
 ENTRY y EXTERNAL PARAM RNotEqualTo 0
 ENTRY z EXTERNAL PARAM RNotEqualTo 1
 ENTRY A EXTERNAL RETURN RNotEqualTo
 ENTRY C EXTERNAL PARAM WriteBool 0
DATA SECTION
 DEF a := 0 [INT]
 DEF GLOBAL b := a [INT]
 DEF c := 1.2 [REAL]
 DEF GLOBAL d := c [REAL]
 DEF e := 3.14 [REAL]
 CALL RNeg((e -> f)[REAL])
 DEF h := (RETURN g) [REAL]
 DEF GLOBAL i := h [REAL]
 DEF j := 42 [INT]
 DEF GLOBAL k := j [INT]
BSS SECTION
 DEF GLOBAL l := FALSE [BOOL]
CODE SECTION
 CALL IntToReal(((GLOBAL b) -> m)[INT])
 DEF o := (RETURN n) [REAL]
 CALL RMul((o -> p)[REAL], ((GLOBAL d) -> q)[REAL])
 DEF s := (RETURN r) [REAL]
 CALL IntToReal(((GLOBAL k) -> m)[INT])
 DEF t := (RETURN n) [REAL]
 CALL RDivide(((GLOBAL i) -> u)[REAL], (t -> v)[REAL])
 DEF x := (RETURN w) [REAL]
 CALL RNotEqualTo((s -> y)[REAL], (x -> z)[REAL])
 DEF B := (RETURN A) [BOOL]
 l := B [BOOL]
 CALL WriteBool(((GLOBAL l) -> C)[BOOL])
END
PROC SECTION
