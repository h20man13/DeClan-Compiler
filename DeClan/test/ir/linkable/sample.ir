SYMBOL SECTION
 ENTRY b CONST INTERNAL six
 ENTRY d CONST INTERNAL seven
 ENTRY e INTERNAL answer
 ENTRY m EXTERNAL PARAM IntToReal 0
 ENTRY n EXTERNAL RETURN IntToReal
 ENTRY p EXTERNAL PARAM RMul 0
 ENTRY q EXTERNAL PARAM RMul 1
 ENTRY r EXTERNAL RETURN RMul
 ENTRY t EXTERNAL PARAM WriteReal 0
 ENTRY gcd INTERNAL PARAM f 0
 ENTRY gcd INTERNAL PARAM g 1
 ENTRY gcd INTERNAL RETURN h
DATA SECTION
 DEF a := 6 [INT]
 DEF GLOBAL b := a [INT]
 DEF c := 7 [INT]
 DEF GLOBAL d := c [INT]
BSS SECTION
 DEF GLOBAL e := 0 [INT]
CODE SECTION
 CALL gcd(((GLOBAL b) -> f)[INT], ((GLOBAL d) -> g)[INT])
 DEF i := (RETURN h) [INT]
 e := i [INT]
 DEF j := (GLOBAL b) IMUL (GLOBAL d) [INT]
 DEF k := j IMUL (GLOBAL e) [INT]
 e := k [INT]
 DEF l := 1.0 [REAL]
 CALL IntToReal(((GLOBAL e) -> m)[INT])
 DEF o := (RETURN n) [REAL]
 CALL RMul((o -> p)[REAL], (l -> q)[REAL])
 DEF s := (RETURN r) [REAL]
 CALL WriteReal((s -> t)[REAL])
 CALL WriteLn()
END
PROC SECTION
 PROC LABEL gcd
  DEF u := (PARAM f) NE (PARAM g) [BOOL]
  DEF v := TRUE [BOOL]
  IF u EQ v
  THEN WHILESTAT_0_SEQ_0_LEVEL_0
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0
  IF u EQ v
  THEN WHILESTAT_0_SEQ_0_LEVEL_0
  ELSE WHILEEND_0_LEVEL_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0
  DEF w := (PARAM f) GT (PARAM g) [BOOL]
  DEF x := TRUE [BOOL]
  IF w EQ x
  THEN IFSTAT_0_SEQ_0_LEVEL_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0
  DEF y := (PARAM f) ISUB (PARAM g) [INT]
  f := y [INT]
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0
  DEF z := (PARAM g) ISUB (PARAM f) [INT]
  g := z [INT]
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0
  LABEL IFEND_0_LEVEL_0
  DEF A := (PARAM f) NE (PARAM g) [BOOL]
  u := A [BOOL]
  GOTO WHILECOND_0_SEQ_0_LEVEL_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0
  LABEL WHILEEND_0_LEVEL_0
  DEF RETURN h := (PARAM f) [INT]
 RETURN
