SYMBOL SECTION
 b CONST INTERNAL six
 d CONST INTERNAL seven
 e INTERNAL answer
 m EXTERNAL PARAM IntToReal 0
 n EXTERNAL RETURN IntToReal
 p EXTERNAL PARAM RMul 0
 q EXTERNAL PARAM RMul 1
 r EXTERNAL RETURN RMul
 t EXTERNAL PARAM WriteReal 0
 f INTERNAL PARAM gcd 0
 g INTERNAL PARAM gcd 1
 h INTERNAL RETURN gcd
DATA SECTION
 a := 6 [INT]
 GLOBAL b := a [INT]
 c := 7 [INT]
 GLOBAL d := c [INT]
 GLOBAL e := 0 [INT]
CODE SECTION
 CALL gcd((b -> f)[INT], (d -> g)[INT])
 EXTERNAL RETURN i := h [INT]
 e := i [INT]
 j := b IMUL d [INT]
 k := j IMUL e [INT]
 e := k [INT]
 l := 1.0 [REAL]
 CALL IntToReal((e -> m)[INT])
 EXTERNAL RETURN o := n [REAL]
 CALL RMul((o -> p)[REAL], (l -> q)[REAL])
 EXTERNAL RETURN s := r [REAL]
 CALL WriteReal((s -> t)[REAL])
 CALL WriteLn()
END
PROC SECTION
 PROC LABEL gcd
  PARAM u := f [INT]
  PARAM v := g [INT]
  w := u NE v [BOOL]
  IF w EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0 ELSE WHILENEXT_0_SEQ_0_LEVEL_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0
  IF w EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0 ELSE WHILEEND_0_LEVEL_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0
  x := u GT v [BOOL]
  IF x EQ TRUE THEN IFSTAT_0_SEQ_0_LEVEL_0 ELSE IFNEXT_0_SEQ_0_LEVEL_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0
  y := u ISUB v [INT]
  u := y [INT]
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0
  z := v ISUB u [INT]
  v := z [INT]
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0
  LABEL IFEND_0_LEVEL_0
  A := u NE v [BOOL]
  w := A [BOOL]
  GOTO WHILECOND_0_SEQ_0_LEVEL_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0
  LABEL WHILEEND_0_LEVEL_0
  INTERNAL RETURN h := u [INT]
 RETURN
