SYMBOL SECTION
 a INTERNAL i
DATA SECTION
 GLOBAL a := 0 [INT]
CODE SECTION
 b := 1 [INT]
 a := b [INT]
 c := 10 [INT]
 LABEL FORBEG_0_LEVEL_0
 IF a LT c THEN FORLOOP_0_LEVEL_0 ELSE FOREND_0_LEVEL_0
 LABEL FORLOOP_0_LEVEL_0
 CALL WriteInt((a -> d)[INT])
 e := 1 [INT]
 f := a IADD e [INT]
 a := f [INT]
 GOTO FORBEG_0_LEVEL_0
 LABEL FOREND_0_LEVEL_0
 CALL WriteLn()
 g := 1 [INT]
 a := g [INT]
 h := 10 [INT]
 LABEL FORBEG_1_LEVEL_0
 IF a LT h THEN FORLOOP_1_LEVEL_0 ELSE FOREND_1_LEVEL_0
 LABEL FORLOOP_1_LEVEL_0
 CALL WriteInt((a -> i)[INT])
 j := 2 [INT]
 k := a IADD j [INT]
 a := k [INT]
 GOTO FORBEG_1_LEVEL_0
 LABEL FOREND_1_LEVEL_0
 CALL WriteLn()
 l := 10 [INT]
 a := l [INT]
 m := 1 [INT]
 LABEL FORBEG_2_LEVEL_0
 IF a GT m THEN FORLOOP_2_LEVEL_0 ELSE FOREND_2_LEVEL_0
 LABEL FORLOOP_2_LEVEL_0
 CALL WriteInt((a -> n)[INT])
 o := 2 [INT]
 CALL INeg((o -> p)[INT])
 EXTERNAL RETURN r := q [INT]
 s := a IADD r [INT]
 a := s [INT]
 GOTO FORBEG_2_LEVEL_0
 LABEL FOREND_2_LEVEL_0
 CALL WriteLn()
 t := 10 [INT]
 a := t [INT]
 u := 1 [INT]
 LABEL FORBEG_3_LEVEL_0
 IF a GT u THEN FORLOOP_3_LEVEL_0 ELSE FOREND_3_LEVEL_0
 LABEL FORLOOP_3_LEVEL_0
 CALL WriteInt((a -> v)[INT])
 w := 1 [INT]
 CALL INeg((w -> x)[INT])
 EXTERNAL RETURN z := y [INT]
 A := a IADD z [INT]
 a := A [INT]
 GOTO FORBEG_3_LEVEL_0
 LABEL FOREND_3_LEVEL_0
 CALL WriteLn()
 B := 1 [INT]
 a := B [INT]
 C := 10 [INT]
 D := a LE C [BOOL]
 IF D EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0 ELSE WHILENEXT_0_SEQ_0_LEVEL_0
 LABEL WHILECOND_0_SEQ_0_LEVEL_0
 IF D EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0 ELSE WHILEEND_0_LEVEL_0
 LABEL WHILESTAT_0_SEQ_0_LEVEL_0
 CALL WriteInt((a -> E)[INT])
 F := 1 [INT]
 G := a IADD F [INT]
 a := G [INT]
 H := 10 [INT]
 I := a LE H [BOOL]
 D := I [BOOL]
 GOTO WHILECOND_0_SEQ_0_LEVEL_0
 LABEL WHILENEXT_0_SEQ_0_LEVEL_0
 LABEL WHILEEND_0_LEVEL_0
 CALL WriteLn()
 J := 1 [INT]
 a := J [INT]
 K := 10 [INT]
 L := a LE K [BOOL]
 M := 2 [INT]
 CALL Mod((a -> N)[INT], (M -> O)[INT])
 EXTERNAL RETURN Q := P [INT]
 R := 1 [INT]
 S := Q EQ R [BOOL]
 T := L LAND S [BOOL]
 IF T EQ TRUE THEN WHILESTAT_2_SEQ_0_LEVEL_0 ELSE WHILENEXT_2_SEQ_0_LEVEL_0
 LABEL WHILECOND_2_SEQ_0_LEVEL_0
 IF T EQ TRUE THEN WHILESTAT_2_SEQ_0_LEVEL_0 ELSE WHILEEND_2_LEVEL_0
 LABEL WHILESTAT_2_SEQ_0_LEVEL_0
 CALL WriteInt((a -> U)[INT])
 V := 1 [INT]
 W := a IADD V [INT]
 a := W [INT]
 X := 10 [INT]
 Y := a LE X [BOOL]
 Z := 2 [INT]
 CALL Mod((a -> a0)[INT], (Z -> a1)[INT])
 EXTERNAL RETURN a3 := a2 [INT]
 a4 := 1 [INT]
 a5 := a3 EQ a4 [BOOL]
 a6 := Y LAND a5 [BOOL]
 T := a6 [BOOL]
 GOTO WHILECOND_2_SEQ_0_LEVEL_0
 LABEL WHILENEXT_2_SEQ_0_LEVEL_0
 a7 := 10 [INT]
 a8 := a LE a7 [BOOL]
 IF a8 EQ TRUE THEN WHILESTAT_2_SEQ_1_LEVEL_0 ELSE WHILENEXT_2_SEQ_1_LEVEL_0
 LABEL WHILECOND_2_SEQ_1_LEVEL_0
 IF a8 EQ TRUE THEN WHILESTAT_2_SEQ_1_LEVEL_0 ELSE WHILEEND_2_LEVEL_0
 LABEL WHILESTAT_2_SEQ_1_LEVEL_0
 a9 := 1 [INT]
 b0 := a IADD a9 [INT]
 a := b0 [INT]
 b1 := 10 [INT]
 b2 := a LE b1 [BOOL]
 a8 := b2 [BOOL]
 GOTO WHILECOND_2_SEQ_1_LEVEL_0
 LABEL WHILENEXT_2_SEQ_1_LEVEL_0
 LABEL WHILEEND_2_LEVEL_0
 CALL WriteLn()
 b3 := 10 [INT]
 a := b3 [INT]
 b4 := 1 [INT]
 b5 := a LT b4 [BOOL]
 LABEL REPEATBEG_0_LEVEL_0
 IF b5 EQ TRUE THEN REPEATEND_0_LEVEL_0 ELSE REPEATLOOP_0_LEVEL_0
 LABEL REPEATLOOP_0_LEVEL_0
 CALL WriteInt((a -> b6)[INT])
 b7 := 2 [INT]
 b8 := a ISUB b7 [INT]
 a := b8 [INT]
 b9 := 1 [INT]
 c0 := a LT b9 [BOOL]
 b5 := c0 [BOOL]
 GOTO REPEATBEG_0_LEVEL_0
 LABEL REPEATEND_0_LEVEL_0
 CALL WriteLn()
 c1 := 10 [INT]
 a := c1 [INT]
 c2 := 1 [INT]
 c3 := a GE c2 [BOOL]
 LABEL REPEATBEG_1_LEVEL_0
 IF c3 EQ TRUE THEN REPEATEND_1_LEVEL_0 ELSE REPEATLOOP_1_LEVEL_0
 LABEL REPEATLOOP_1_LEVEL_0
 CALL WriteInt((a -> c4)[INT])
 c5 := 1 [INT]
 c6 := a IADD c5 [INT]
 a := c6 [INT]
 c7 := 1 [INT]
 c8 := a GE c7 [BOOL]
 c3 := c8 [BOOL]
 GOTO REPEATBEG_1_LEVEL_0
 LABEL REPEATEND_1_LEVEL_0
 CALL WriteLn()
END
PROC SECTION
