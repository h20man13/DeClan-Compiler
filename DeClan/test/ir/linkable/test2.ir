SYMBOL SECTION
 e CONST INTERNAL answer
 f INTERNAL n
 g INTERNAL PARAM Display 0
DATA SECTION
 a := 42 [INT]
 CALL INeg((a -> b)[INT])
 EXTERNAL RETURN d := c [INT]
 GLOBAL e := d [INT]
 GLOBAL f := 0 [INT]
CODE SECTION
 f := e [INT]
 i := 0 [INT]
 j := f LT i [BOOL]
 IF j EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0 ELSE WHILENEXT_0_SEQ_0_LEVEL_0
 LABEL WHILECOND_0_SEQ_0_LEVEL_0
 IF j EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0 ELSE WHILEEND_0_LEVEL_0
 LABEL WHILESTAT_0_SEQ_0_LEVEL_0
 CALL INeg((f -> k)[INT])
 EXTERNAL RETURN m := l [INT]
 f := m [INT]
 n := 0 [INT]
 o := f LT n [BOOL]
 j := o [BOOL]
 GOTO WHILECOND_0_SEQ_0_LEVEL_0
 LABEL WHILENEXT_0_SEQ_0_LEVEL_0
 p := 0 [INT]
 q := f GT p [BOOL]
 IF q EQ TRUE THEN WHILESTAT_0_SEQ_1_LEVEL_0 ELSE WHILENEXT_0_SEQ_1_LEVEL_0
 LABEL WHILECOND_0_SEQ_1_LEVEL_0
 IF q EQ TRUE THEN WHILESTAT_0_SEQ_1_LEVEL_0 ELSE WHILEEND_0_LEVEL_0
 LABEL WHILESTAT_0_SEQ_1_LEVEL_0
 CALL Display((f -> g)[INT])
 r := 0 [INT]
 s := f GT r [BOOL]
 q := s [BOOL]
 GOTO WHILECOND_0_SEQ_1_LEVEL_0
 LABEL WHILENEXT_0_SEQ_1_LEVEL_0
 LABEL WHILEEND_0_LEVEL_0
 t := 10 [INT]
 f := t [INT]
 u := 2 [INT]
 LABEL FORBEG_0_LEVEL_0
 IF f GT u THEN FORLOOP_0_LEVEL_0 ELSE FOREND_0_LEVEL_0
 LABEL FORLOOP_0_LEVEL_0
 CALL WriteInt((f -> v)[INT])
 w := 1 [INT]
 CALL INeg((w -> x)[INT])
 EXTERNAL RETURN z := y [INT]
 A := f IADD z [INT]
 f := A [INT]
 GOTO FORBEG_0_LEVEL_0
 LABEL FOREND_0_LEVEL_0
 B := TRUE [BOOL]
 LABEL REPEATBEG_0_LEVEL_0
 IF B EQ TRUE THEN REPEATEND_0_LEVEL_0 ELSE REPEATLOOP_0_LEVEL_0
 LABEL REPEATLOOP_0_LEVEL_0
 CALL Display((f -> g)[INT])
 C := TRUE [BOOL]
 B := C [BOOL]
 GOTO REPEATBEG_0_LEVEL_0
 LABEL REPEATEND_0_LEVEL_0
END
PROC SECTION
 PROC LABEL Display
  PARAM E := g [INT]
  D := FALSE [BOOL]
  F := 2 [INT]
  CALL Mod((E -> G)[INT], (F -> H)[INT])
  EXTERNAL RETURN J := I [INT]
  K := 0 [INT]
  L := J NE K [BOOL]
  D := L [BOOL]
  IF D EQ TRUE THEN IFSTAT_0_SEQ_0_LEVEL_0 ELSE IFNEXT_0_SEQ_0_LEVEL_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0
  M := 1 [INT]
  CALL WriteInt((M -> N)[INT])
  O := 1 [INT]
  P := E ISUB O [INT]
  Q := 2 [INT]
  CALL Div((P -> R)[INT], (Q -> S)[INT])
  EXTERNAL RETURN U := T [INT]
  E := U [INT]
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0
  V := 0 [INT]
  W := E EQ V [BOOL]
  IF W EQ TRUE THEN IFSTAT_0_SEQ_1_LEVEL_0 ELSE IFNEXT_0_SEQ_1_LEVEL_0
  LABEL IFSTAT_0_SEQ_1_LEVEL_0
  X := 1 [INT]
  CALL INeg((X -> Y)[INT])
  EXTERNAL RETURN a0 := Z [INT]
  CALL WriteInt((a0 -> a1)[INT])
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0
  a2 := 0 [INT]
  CALL WriteInt((a2 -> a3)[INT])
  a4 := 2 [INT]
  CALL Div((E -> a5)[INT], (a4 -> a6)[INT])
  EXTERNAL RETURN a8 := a7 [INT]
  E := a8 [INT]
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_2_LEVEL_0
  LABEL IFEND_0_LEVEL_0
 RETURN
