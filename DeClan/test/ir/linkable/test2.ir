SYMBOL SECTION
 ENTRY b EXTERNAL PARAM INeg 0
 ENTRY c EXTERNAL RETURN INeg
 ENTRY e CONST INTERNAL answer
 ENTRY f INTERNAL n
 ENTRY g INTERNAL PARAM Display 0
 ENTRY g INTERNAL arg Display
 ENTRY r EXTERNAL PARAM Display 0
 ENTRY w EXTERNAL PARAM WriteInt 0
 ENTRY C INTERNAL answer Display
 ENTRY E EXTERNAL PARAM Mod 0
 ENTRY F EXTERNAL PARAM Mod 1
 ENTRY G EXTERNAL RETURN Mod
 ENTRY P EXTERNAL PARAM Div 0
 ENTRY Q EXTERNAL PARAM Div 1
 ENTRY R EXTERNAL RETURN Div
DATA SECTION
 DEF a := 42 <INT>
 CALL INeg([a -> b]<INT>)
 DEF d := (RETURN c) <INT>
 DEF GLOBAL e := d <INT>
BSS SECTION
 DEF GLOBAL f := 0 <INT>
CODE SECTION
 GLOBAL f := (GLOBAL e) <INT>
 DEF i := 0 <INT>
 DEF j := (GLOBAL f) LT i <BOOL>
 DEF k := TRUE <BOOL>
 IF j EQ k
 THEN WHILESTAT_0_SEQ_0_LEVEL_0
 ELSE WHILENEXT_0_SEQ_0_LEVEL_0
 LABEL WHILECOND_0_SEQ_0_LEVEL_0
 IF j EQ k
 THEN WHILESTAT_0_SEQ_0_LEVEL_0
 ELSE WHILEEND_0_LEVEL_0
 LABEL WHILESTAT_0_SEQ_0_LEVEL_0
 CALL INeg([(GLOBAL f) -> b]<INT>)
 DEF l := (RETURN c) <INT>
 GLOBAL f := l <INT>
 DEF m := 0 <INT>
 DEF n := (GLOBAL f) LT m <BOOL>
 j := n <BOOL>
 GOTO WHILECOND_0_SEQ_0_LEVEL_0
 LABEL WHILENEXT_0_SEQ_0_LEVEL_0
 DEF o := 0 <INT>
 DEF p := (GLOBAL f) GT o <BOOL>
 DEF q := TRUE <BOOL>
 IF p EQ q
 THEN WHILESTAT_0_SEQ_1_LEVEL_0
 ELSE WHILENEXT_0_SEQ_1_LEVEL_0
 LABEL WHILECOND_0_SEQ_1_LEVEL_0
 IF p EQ q
 THEN WHILESTAT_0_SEQ_1_LEVEL_0
 ELSE WHILEEND_0_LEVEL_0
 LABEL WHILESTAT_0_SEQ_1_LEVEL_0
 CALL Display([(GLOBAL f) -> r]<INT>)
 DEF s := 0 <INT>
 DEF t := (GLOBAL f) GT s <BOOL>
 p := t <BOOL>
 GOTO WHILECOND_0_SEQ_1_LEVEL_0
 LABEL WHILENEXT_0_SEQ_1_LEVEL_0
 LABEL WHILEEND_0_LEVEL_0
 DEF u := 10 <INT>
 GLOBAL f := u <INT>
 DEF v := 2 <INT>
 LABEL FORBEG_0_LEVEL_0
 IF (GLOBAL f) GT v
 THEN FORLOOP_0_LEVEL_0
 ELSE FOREND_0_LEVEL_0
 LABEL FORLOOP_0_LEVEL_0
 CALL WriteInt([(GLOBAL f) -> w]<INT>)
 DEF x := 1 <INT>
 CALL INeg([x -> b]<INT>)
 DEF y := (RETURN c) <INT>
 GLOBAL f := (GLOBAL f) IADD y <INT>
 GOTO FORBEG_0_LEVEL_0
 LABEL FOREND_0_LEVEL_0
 DEF z := TRUE <BOOL>
 DEF A := TRUE <BOOL>
 LABEL REPEATBEG_0_LEVEL_0
 IF z EQ A
 THEN REPEATEND_0_LEVEL_0
 ELSE REPEATLOOP_0_LEVEL_0
 LABEL REPEATLOOP_0_LEVEL_0
 CALL Display([(GLOBAL f) -> r]<INT>)
 DEF B := TRUE <BOOL>
 z := B <BOOL>
 GOTO REPEATBEG_0_LEVEL_0
 LABEL REPEATEND_0_LEVEL_0
END
PROC SECTION
 PROC LABEL Display
  DEF C := FALSE <BOOL>
  DEF D := 2 <INT>
  CALL Mod([(PARAM g) -> E]<INT>, [D -> F]<INT>)
  DEF H := (RETURN G) <INT>
  DEF I := 0 <INT>
  DEF J := H NE I <BOOL>
  GLOBAL e := J <BOOL>
  DEF K := TRUE <BOOL>
  IF (GLOBAL e) EQ K
  THEN IFSTAT_0_SEQ_0_LEVEL_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0
  DEF L := 1 <INT>
  CALL WriteInt([L -> w]<INT>)
  DEF M := 1 <INT>
  DEF N := (PARAM g) ISUB M <INT>
  DEF O := 2 <INT>
  CALL Div([N -> P]<INT>, [O -> Q]<INT>)
  DEF S := (RETURN R) <INT>
  PARAM g := S <INT>
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0
  DEF T := 0 <INT>
  DEF U := (PARAM g) EQ T <BOOL>
  DEF V := TRUE <BOOL>
  IF U EQ V
  THEN IFSTAT_0_SEQ_1_LEVEL_0
  ELSE IFNEXT_0_SEQ_1_LEVEL_0
  LABEL IFSTAT_0_SEQ_1_LEVEL_0
  DEF W := 1 <INT>
  CALL INeg([W -> b]<INT>)
  DEF X := (RETURN c) <INT>
  CALL WriteInt([X -> w]<INT>)
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0
  DEF Y := 0 <INT>
  CALL WriteInt([Y -> w]<INT>)
  DEF Z := 2 <INT>
  CALL Div([(PARAM g) -> P]<INT>, [Z -> Q]<INT>)
  DEF a0 := (RETURN R) <INT>
  PARAM g := a0 <INT>
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_2_LEVEL_0
  LABEL IFEND_0_LEVEL_0
 RETURN
