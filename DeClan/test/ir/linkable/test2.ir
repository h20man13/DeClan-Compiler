SYMBOL SECTION
 ENTRY b EXTERNAL PARAM INeg 0
 ENTRY c EXTERNAL RETURN INeg
 ENTRY e CONST INTERNAL answer
 ENTRY f INTERNAL n
 ENTRY w EXTERNAL PARAM WriteInt 0
 ENTRY g INTERNAL PARAM Display 0
 ENTRY N EXTERNAL PARAM Div 0
 ENTRY O EXTERNAL PARAM Div 1
 ENTRY P EXTERNAL RETURN Div
DATA SECTION
 DEF a := 42 <INT>
 CALL INeg([a -> b]<INT>)
 DEF d := (RETURN c) <INT>
 DEF GLOBAL e := d <INT>
BSS SECTION
 DEF GLOBAL f := 0 <INT>
CODE SECTION
 GLOBAL f := (GLOBAL e) <INT>
 DEF i := 0 <INT>
 DEF j := (GLOBAL f) LT i <BOOL>
 DEF k := TRUE <BOOL>
 IF j EQ k
 THEN WHILESTAT_0_SEQ_0_LEVEL_0
 ELSE WHILENEXT_0_SEQ_0_LEVEL_0
 LABEL WHILECOND_0_SEQ_0_LEVEL_0
 IF j EQ k
 THEN WHILESTAT_0_SEQ_0_LEVEL_0
 ELSE WHILEEND_0_LEVEL_0
 LABEL WHILESTAT_0_SEQ_0_LEVEL_0
 CALL INeg([(GLOBAL f) -> b]<INT>)
 DEF l := (RETURN c) <INT>
 GLOBAL f := l <INT>
 DEF m := 0 <INT>
 DEF n := (GLOBAL f) LT m <BOOL>
 j := n <BOOL>
 GOTO WHILECOND_0_SEQ_0_LEVEL_0
 LABEL WHILENEXT_0_SEQ_0_LEVEL_0
 DEF o := 0 <INT>
 DEF p := (GLOBAL f) GT o <BOOL>
 DEF q := TRUE <BOOL>
 IF p EQ q
 THEN WHILESTAT_0_SEQ_1_LEVEL_0
 ELSE WHILENEXT_0_SEQ_1_LEVEL_0
 LABEL WHILECOND_0_SEQ_1_LEVEL_0
 IF p EQ q
 THEN WHILESTAT_0_SEQ_1_LEVEL_0
 ELSE WHILEEND_0_LEVEL_0
 LABEL WHILESTAT_0_SEQ_1_LEVEL_0
 CALL Display([(GLOBAL f) -> g]<INT>)
 DEF r := 0 <INT>
 DEF s := (GLOBAL f) GT r <BOOL>
 p := s <BOOL>
 GOTO WHILECOND_0_SEQ_1_LEVEL_0
 LABEL WHILENEXT_0_SEQ_1_LEVEL_0
 LABEL WHILEEND_0_LEVEL_0
 DEF t := 0 <INT>
 DEF u := 10 <INT>
 GLOBAL f := u <INT>
 DEF v := 8 <INT>
 LABEL FORBEG_0_LEVEL_0
 IF t LT v
 THEN FORLOOP_0_LEVEL_0
 ELSE FOREND_0_LEVEL_0
 LABEL FORLOOP_0_LEVEL_0
 CALL WriteInt([(GLOBAL f) -> w]<INT>)
 DEF x := 1 <INT>
 t := t IADD x <INT>
 DEF y := 1 <INT>
 CALL INeg([y -> b]<INT>)
 DEF z := (RETURN c) <INT>
 GLOBAL f := (GLOBAL f) IADD z <INT>
 GOTO FORBEG_0_LEVEL_0
 LABEL FOREND_0_LEVEL_0
 DEF A := TRUE <BOOL>
 DEF B := TRUE <BOOL>
 LABEL REPEATBEG_0_LEVEL_0
 IF A EQ B
 THEN REPEATEND_0_LEVEL_0
 ELSE REPEATLOOP_0_LEVEL_0
 LABEL REPEATLOOP_0_LEVEL_0
 CALL Display([(GLOBAL f) -> g]<INT>)
 DEF C := TRUE <BOOL>
 A := C <BOOL>
 GOTO REPEATBEG_0_LEVEL_0
 LABEL REPEATEND_0_LEVEL_0
END
PROC SECTION
 PROC LABEL Display
  DEF D := FALSE <BOOL>
  DEF E := 2 <INT>
  DEF F := (PARAM g) IMOD E <INT>
  DEF G := 0 <INT>
  DEF H := F NE G <BOOL>
  D := H <BOOL>
  DEF I := TRUE <BOOL>
  IF D EQ I
  THEN IFSTAT_0_SEQ_0_LEVEL_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0
  DEF J := 1 <INT>
  CALL WriteInt([J -> w]<INT>)
  DEF K := 1 <INT>
  DEF L := (PARAM g) ISUB K <INT>
  DEF M := 2 <INT>
  CALL Div([L -> N]<INT>, [M -> O]<INT>)
  DEF Q := (RETURN P) <INT>
  PARAM g := Q <INT>
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0
  DEF R := 0 <INT>
  DEF S := (PARAM g) EQ R <BOOL>
  DEF T := TRUE <BOOL>
  IF S EQ T
  THEN IFSTAT_0_SEQ_1_LEVEL_0
  ELSE IFNEXT_0_SEQ_1_LEVEL_0
  LABEL IFSTAT_0_SEQ_1_LEVEL_0
  DEF U := 1 <INT>
  CALL INeg([U -> b]<INT>)
  DEF V := (RETURN c) <INT>
  CALL WriteInt([V -> w]<INT>)
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0
  DEF W := 0 <INT>
  CALL WriteInt([W -> w]<INT>)
  DEF X := 2 <INT>
  CALL Div([(PARAM g) -> N]<INT>, [X -> O]<INT>)
  DEF Y := (RETURN P) <INT>
  PARAM g := Y <INT>
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_2_LEVEL_0
  LABEL IFEND_0_LEVEL_0
 RETURN
