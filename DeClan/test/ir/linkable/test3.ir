SYMBOL SECTION
 b CONST INTERNAL a
 d CONST INTERNAL b
 e INTERNAL c
 f INTERNAL d
 g INTERNAL e
 h INTERNAL f
 i INTERNAL g
 v CONST INTERNAL h
 z CONST INTERNAL i
 A INTERNAL j
 K INTERNAL k
DATA SECTION
 a := 42 [INT]
 GLOBAL b := a [INT]
 c := 42.0 [REAL]
 GLOBAL d := c [REAL]
 GLOBAL e := 0 [INT]
 GLOBAL f := 0 [INT]
 GLOBAL g := 0.0 [REAL]
 GLOBAL h := 0.0 [REAL]
 GLOBAL i := FALSE [BOOL]
CODE SECTION
 o := EXTERNAL CALL IntToReal((b, [INT])) [REAL]
 p := EXTERNAL CALL RMul((o, [REAL]), (h, [REAL])) [REAL]
 CALL Foo((e -> j)[INT], (g -> k)[REAL], (p -> l)[REAL])
 EXTERNAL RETURN q := m [BOOL]
 i := q [BOOL]
 IF i EQ TRUE THEN IFSTAT_0_SEQ_0_LEVEL_0 ELSE IFNEXT_0_SEQ_0_LEVEL_0
 LABEL IFSTAT_0_SEQ_0_LEVEL_0
 EXTERNAL CALL WriteInt((e, [INT]))
 GOTO IFEND_0_LEVEL_0
 LABEL IFNEXT_0_SEQ_0_LEVEL_0
 r := EXTERNAL CALL IntToReal((b, [INT])) [REAL]
 s := EXTERNAL CALL RSub((d, [REAL]), (r, [REAL])) [REAL]
 EXTERNAL CALL WriteReal((s, [REAL]))
 GOTO IFEND_0_LEVEL_0
 LABEL IFNEXT_0_SEQ_1_LEVEL_0
 LABEL IFEND_0_LEVEL_0
END
PROC SECTION
 PROC LABEL Foo
  PARAM B := j [INT]
  t := EXTERNAL CALL IntToReal((b, [INT])) [REAL]
  u := EXTERNAL CALL REqualTo((t, [REAL]), (d, [REAL])) [BOOL]
  v := u [BOOL]
  w := 355 [INT]
  x := 113 [INT]
  y := EXTERNAL CALL Divide((w, [INT]), (x, [INT])) [REAL]
  z := y [REAL]
  A := 0 [INT]
  A := b [INT]
  LABEL FORBEG_0_LEVEL_0
  IF A GT B THEN FORLOOP_0_LEVEL_0 ELSE FOREND_0_LEVEL_0
  LABEL FORLOOP_0_LEVEL_0
  CALL Bar()
  C := 20 [INT]
  D := EXTERNAL CALL INeg((C, [INT])) [INT]
  E := A IADD D [INT]
  A := E [INT]
  GOTO FORBEG_0_LEVEL_0
  LABEL FOREND_0_LEVEL_0
  F := "H is " [STRING]
  EXTERNAL CALL WriteString((F, [STRING]))
  EXTERNAL CALL WriteInt((v, [BOOL]))
  EXTERNAL CALL WriteLn()
  G := "I is " [STRING]
  EXTERNAL CALL WriteString((G, [STRING]))
  EXTERNAL CALL WriteReal((z, [REAL]))
  EXTERNAL CALL WriteLn()
  H := 3.1415927 [REAL]
  I := EXTERNAL CALL RGreaterThan((z, [REAL]), (H, [REAL])) [BOOL]
  J := v LAND I [BOOL]
  INTERNAL RETURN m := J [BOOL]
 RETURN
 PROC LABEL Bar
  K := FALSE [BOOL]
  L := 1 [INT]
  M := e IADD L [INT]
  e := M [INT]
  N := BNOT i [BOOL]
  IF N EQ TRUE THEN IFSTAT_1_SEQ_0_LEVEL_0 ELSE IFNEXT_1_SEQ_0_LEVEL_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0
  O := TRUE [BOOL]
  i := O [BOOL]
  P := 0 [INT]
  Q := 0 [INT]
  CALL Foo((f -> j)[INT], (P -> k)[INT], (Q -> l)[INT])
  EXTERNAL RETURN R := m [BOOL]
  K := R [BOOL]
  GOTO IFEND_1_LEVEL_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0
  LABEL IFEND_1_LEVEL_0
 RETURN
