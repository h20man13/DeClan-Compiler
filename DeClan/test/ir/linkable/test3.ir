SYMBOL SECTION
 b CONST INTERNAL a
 d CONST INTERNAL b
 e INTERNAL c
 f INTERNAL d
 g INTERNAL e
 h INTERNAL f
 i INTERNAL g
 o EXTERNAL PARAM IntToReal 0
 p EXTERNAL RETURN IntToReal
 r EXTERNAL PARAM RMul 0
 s EXTERNAL PARAM RMul 1
 t EXTERNAL RETURN RMul
 w EXTERNAL PARAM WriteInt 0
 y EXTERNAL PARAM RSub 0
 z EXTERNAL PARAM RSub 1
 A EXTERNAL RETURN RSub
 C EXTERNAL PARAM WriteReal 0
 E EXTERNAL PARAM REqualTo 0
 F EXTERNAL PARAM REqualTo 1
 G EXTERNAL RETURN REqualTo
 L EXTERNAL PARAM Divide 0
 M EXTERNAL PARAM Divide 1
 N EXTERNAL RETURN Divide
 j INTERNAL PARAM Foo 0
 T EXTERNAL PARAM INeg 0
 U EXTERNAL RETURN INeg
 Y EXTERNAL PARAM WriteString 0
 a1 EXTERNAL PARAM RGreaterThan 0
 a2 EXTERNAL PARAM RGreaterThan 1
 a3 EXTERNAL RETURN RGreaterThan
 m INTERNAL RETURN Foo
DATA SECTION
 a := 42 [INT]
 GLOBAL b := a [INT]
 c := 42.0 [REAL]
 GLOBAL d := c [REAL]
 GLOBAL e := 0 [INT]
 GLOBAL f := 0 [INT]
 GLOBAL g := 0.0 [REAL]
 GLOBAL h := 0.0 [REAL]
 GLOBAL i := FALSE [BOOL]
CODE SECTION
 CALL IntToReal((b -> o)[INT])
 EXTERNAL RETURN q := p [REAL]
 CALL RMul((q -> r)[REAL], (h -> s)[REAL])
 EXTERNAL RETURN u := t [REAL]
 CALL Foo((e -> j)[INT], (g -> k)[REAL], (u -> l)[REAL])
 EXTERNAL RETURN v := m [BOOL]
 i := v [BOOL]
 IF i EQ TRUE THEN IFSTAT_0_SEQ_0_LEVEL_0 ELSE IFNEXT_0_SEQ_0_LEVEL_0
 LABEL IFSTAT_0_SEQ_0_LEVEL_0
 CALL WriteInt((e -> w)[INT])
 GOTO IFEND_0_LEVEL_0
 LABEL IFNEXT_0_SEQ_0_LEVEL_0
 CALL IntToReal((b -> o)[INT])
 EXTERNAL RETURN x := p [REAL]
 CALL RSub((d -> y)[REAL], (x -> z)[REAL])
 EXTERNAL RETURN B := A [REAL]
 CALL WriteReal((B -> C)[REAL])
 GOTO IFEND_0_LEVEL_0
 LABEL IFNEXT_0_SEQ_1_LEVEL_0
 LABEL IFEND_0_LEVEL_0
END
PROC SECTION
 PROC LABEL Foo
  PARAM R := j [INT]
  CALL IntToReal((b -> o)[INT])
  EXTERNAL RETURN D := p [REAL]
  CALL REqualTo((D -> E)[REAL], (d -> F)[REAL])
  EXTERNAL RETURN H := G [BOOL]
  I := H [BOOL]
  J := 355 [INT]
  K := 113 [INT]
  CALL Divide((J -> L)[INT], (K -> M)[INT])
  EXTERNAL RETURN O := N [REAL]
  P := O [REAL]
  Q := 0 [INT]
  Q := b [INT]
  LABEL FORBEG_0_LEVEL_0
  IF Q GT R THEN FORLOOP_0_LEVEL_0 ELSE FOREND_0_LEVEL_0
  LABEL FORLOOP_0_LEVEL_0
  CALL Bar()
  S := 20 [INT]
  CALL INeg((S -> T)[INT])
  EXTERNAL RETURN V := U [INT]
  W := Q IADD V [INT]
  Q := W [INT]
  GOTO FORBEG_0_LEVEL_0
  LABEL FOREND_0_LEVEL_0
  X := "H is " [STRING]
  CALL WriteString((X -> Y)[STRING])
  CALL WriteInt((I -> w)[BOOL])
  CALL WriteLn()
  Z := "I is " [STRING]
  CALL WriteString((Z -> Y)[STRING])
  CALL WriteReal((P -> C)[REAL])
  CALL WriteLn()
  a0 := 3.1415927 [REAL]
  CALL RGreaterThan((P -> a1)[REAL], (a0 -> a2)[REAL])
  EXTERNAL RETURN a4 := a3 [BOOL]
  a5 := I LAND a4 [BOOL]
  INTERNAL RETURN m := a5 [BOOL]
 RETURN
 PROC LABEL Bar
  a6 := FALSE [BOOL]
  a7 := 1 [INT]
  a8 := e IADD a7 [INT]
  e := a8 [INT]
  a9 := BNOT i [BOOL]
  IF a9 EQ TRUE THEN IFSTAT_1_SEQ_0_LEVEL_0 ELSE IFNEXT_1_SEQ_0_LEVEL_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0
  b0 := TRUE [BOOL]
  i := b0 [BOOL]
  b1 := 0 [INT]
  b2 := 0 [INT]
  CALL Foo((f -> j)[INT], (b1 -> k)[INT], (b2 -> l)[INT])
  EXTERNAL RETURN b3 := m [BOOL]
  a6 := b3 [BOOL]
  GOTO IFEND_1_LEVEL_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0
  LABEL IFEND_1_LEVEL_0
 RETURN
