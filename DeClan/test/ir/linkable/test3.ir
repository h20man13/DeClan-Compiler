SYMBOL SECTION
 ENTRY b CONST INTERNAL GLOBAL a 
 ENTRY d CONST INTERNAL GLOBAL b 
 ENTRY e INTERNAL GLOBAL c 
 ENTRY f INTERNAL GLOBAL d 
 ENTRY g INTERNAL GLOBAL e 
 ENTRY h INTERNAL GLOBAL f 
 ENTRY i INTERNAL GLOBAL g 
 ENTRY j INTERNAL PARAM arg1 Foo 0
 ENTRY k INTERNAL PARAM arg2 Foo 1
 ENTRY l INTERNAL PARAM arg3 Foo 2
 ENTRY m INTERNAL RETURN Foo
 ENTRY n EXTERNAL PARAM IntToReal 0
 ENTRY o EXTERNAL RETURN IntToReal
 ENTRY q EXTERNAL PARAM RMul 0
 ENTRY r EXTERNAL PARAM RMul 1
 ENTRY s EXTERNAL RETURN RMul
 ENTRY w EXTERNAL PARAM WriteInt 0
 ENTRY y EXTERNAL PARAM RSub 0
 ENTRY z EXTERNAL PARAM RSub 1
 ENTRY A EXTERNAL RETURN RSub
 ENTRY C EXTERNAL PARAM WriteReal 0
 ENTRY E EXTERNAL PARAM REqualTo 0
 ENTRY F EXTERNAL PARAM REqualTo 1
 ENTRY G EXTERNAL RETURN REqualTo
 ENTRY I CONST INTERNAL h Foo
 ENTRY L EXTERNAL PARAM Divide 0
 ENTRY M EXTERNAL PARAM Divide 1
 ENTRY N EXTERNAL RETURN Divide
 ENTRY P CONST INTERNAL i Foo
 ENTRY Q INTERNAL j Foo
 ENTRY S EXTERNAL PARAM INeg 0
 ENTRY T EXTERNAL RETURN INeg
 ENTRY W EXTERNAL PARAM RGreaterThan 0
 ENTRY X EXTERNAL PARAM RGreaterThan 1
 ENTRY Y EXTERNAL RETURN RGreaterThan
 ENTRY a1 INTERNAL k Bar
 ENTRY a8 EXTERNAL PARAM WriteString 0
DATA SECTION
 DEF a := 42 <INT>
 DEF GLOBAL b := a <INT>
 DEF c := 42.0 <REAL>
 DEF GLOBAL d := c <REAL>
BSS SECTION
 DEF GLOBAL e := 0 <INT>
 DEF GLOBAL f := 0 <INT>
 DEF GLOBAL g := 0.0 <REAL>
 DEF GLOBAL h := 0.0 <REAL>
 DEF GLOBAL i := FALSE <BOOL>
CODE SECTION
 CALL IntToReal([(GLOBAL b) -> n]<INT>)
 DEF p := (RETURN o) <REAL>
 CALL RMul([p -> q]<REAL>, [(GLOBAL h) -> r]<REAL>)
 DEF t := (RETURN s) <REAL>
 CALL Foo([(GLOBAL e) -> j]<INT>, [(GLOBAL g) -> k]<REAL>, [t -> l]<REAL>)
 CALL Foo([(GLOBAL e) -> j]<INT>, [(GLOBAL g) -> k]<REAL>, [t -> l]<REAL>)
 DEF u := (RETURN m) <BOOL>
 GLOBAL i := u <BOOL>
 DEF v := TRUE <BOOL>
 IF (GLOBAL i) EQ v
 THEN IFSTAT_0_SEQ_0_LEVEL_0
 ELSE IFNEXT_0_SEQ_0_LEVEL_0
 LABEL IFSTAT_0_SEQ_0_LEVEL_0
 CALL WriteInt([(GLOBAL e) -> w]<INT>)
 GOTO IFEND_0_LEVEL_0
 LABEL IFNEXT_0_SEQ_0_LEVEL_0
 CALL IntToReal([(GLOBAL b) -> n]<INT>)
 DEF x := (RETURN o) <REAL>
 CALL RSub([(GLOBAL d) -> y]<REAL>, [x -> z]<REAL>)
 DEF B := (RETURN A) <REAL>
 CALL WriteReal([B -> C]<REAL>)
 GOTO IFEND_0_LEVEL_0
 LABEL IFNEXT_0_SEQ_1_LEVEL_0
 LABEL IFEND_0_LEVEL_0
END
PROC SECTION
 PROC LABEL Foo
  CALL IntToReal([(GLOBAL b) -> n]<INT>)
  DEF D := (RETURN o) <REAL>
  CALL REqualTo([D -> E]<REAL>, [(GLOBAL d) -> F]<REAL>)
  DEF H := (RETURN G) <BOOL>
  DEF I := H <BOOL>
  DEF J := 355 <INT>
  DEF K := 113 <INT>
  CALL Divide([J -> L]<INT>, [K -> M]<INT>)
  DEF O := (RETURN N) <REAL>
  DEF P := O <REAL>
  DEF Q := 0 <INT>
  Q := (GLOBAL b) <INT>
  LABEL FORBEG_0_LEVEL_0
  IF Q GT (PARAM j)
  THEN FORLOOP_0_LEVEL_0
  ELSE FOREND_0_LEVEL_0
  LABEL FORLOOP_0_LEVEL_0
  CALL Bar()
  DEF R := 20 <INT>
  CALL INeg([R -> S]<INT>)
  DEF U := (RETURN T) <INT>
  Q := Q IADD U <INT>
  GOTO FORBEG_0_LEVEL_0
  LABEL FOREND_0_LEVEL_0
  DEF V := 3.1415927 <REAL>
  CALL RGreaterThan([P -> W]<REAL>, [V -> X]<REAL>)
  DEF Z := (RETURN Y) <BOOL>
  DEF a0 := I LAND Z <BOOL>
  DEF RETURN m := a0 <BOOL>
 RETURN
 PROC LABEL Bar
  DEF a1 := FALSE <BOOL>
  DEF a2 := 1 <INT>
  DEF a3 := (GLOBAL e) IADD a2 <INT>
  GLOBAL e := a3 <INT>
  DEF a4 := BNOT (GLOBAL i) <BOOL>
  DEF a5 := TRUE <BOOL>
  IF a4 EQ a5
  THEN IFSTAT_1_SEQ_0_LEVEL_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0
  DEF a6 := TRUE <BOOL>
  GLOBAL i := a6 <BOOL>
  DEF a7 := "Doing foo with arg1=" <STRING>
  CALL WriteString([a7 -> a8]<STRING>)
  CALL WriteInt([(GLOBAL f) -> w]<INT>)
  CALL WriteLn()
  DEF a9 := 0 <INT>
  DEF b0 := 0 <INT>
  CALL Foo([(GLOBAL f) -> j]<INT>, [a9 -> k]<INT>, [b0 -> l]<INT>)
  CALL Foo([(GLOBAL f) -> j]<INT>, [a9 -> k]<INT>, [b0 -> l]<INT>)
  DEF b1 := (RETURN m) <BOOL>
  a1 := b1 <BOOL>
  GOTO IFEND_1_LEVEL_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0
  LABEL IFEND_1_LEVEL_0
 RETURN
