SYMBOL SECTION
 ENTRY b EXTERNAL PARAM INeg 0
 ENTRY c EXTERNAL RETURN INeg
 ENTRY e CONST INTERNAL GLOBAL answer 
 ENTRY f INTERNAL GLOBAL n 
 ENTRY g INTERNAL PARAM arg Display 0
 ENTRY o EXTERNAL PARAM Display 0
 ENTRY p INTERNAL answer Display
 ENTRY r EXTERNAL PARAM Mod 0
 ENTRY s EXTERNAL PARAM Mod 1
 ENTRY t EXTERNAL RETURN Mod
 ENTRY z EXTERNAL PARAM WriteInt 0
 ENTRY D EXTERNAL PARAM Div 0
 ENTRY E EXTERNAL PARAM Div 1
 ENTRY F EXTERNAL RETURN Div
DATA SECTION
 DEF a := 42 <INT>
 CALL INeg([a -> b]<INT>)
 DEF d := (RETURN c) <INT>
 DEF GLOBAL e := d <INT>
BSS SECTION
 DEF GLOBAL f := 0 <INT>
CODE SECTION
 GLOBAL f := (GLOBAL e) <INT>
 DEF h := 0 <INT>
 DEF i := (GLOBAL f) LT h <BOOL>
 DEF j := TRUE <BOOL>
 IF i EQ j
 THEN IFSTAT_0_SEQ_0_LEVEL_0
 ELSE IFNEXT_0_SEQ_0_LEVEL_0
 LABEL IFSTAT_0_SEQ_0_LEVEL_0
 CALL INeg([(GLOBAL f) -> b]<INT>)
 DEF k := (RETURN c) <INT>
 GLOBAL f := k <INT>
 GOTO IFEND_0_LEVEL_0
 LABEL IFNEXT_0_SEQ_0_LEVEL_0
 DEF l := 0 <INT>
 DEF m := (GLOBAL f) GT l <BOOL>
 DEF n := TRUE <BOOL>
 IF m EQ n
 THEN IFSTAT_0_SEQ_1_LEVEL_0
 ELSE IFNEXT_0_SEQ_1_LEVEL_0
 LABEL IFSTAT_0_SEQ_1_LEVEL_0
 CALL Display([(GLOBAL f) -> o]<INT>)
 GOTO IFEND_0_LEVEL_0
 LABEL IFNEXT_0_SEQ_1_LEVEL_0
 LABEL IFEND_0_LEVEL_0
END
PROC SECTION
 PROC LABEL Display
  DEF p := FALSE <BOOL>
  DEF q := 2 <INT>
  CALL Mod([(PARAM g) -> r]<INT>, [q -> s]<INT>)
  DEF u := (RETURN t) <INT>
  DEF v := 0 <INT>
  DEF w := u NE v <BOOL>
  GLOBAL e := w <BOOL>
  DEF x := TRUE <BOOL>
  IF (GLOBAL e) EQ x
  THEN IFSTAT_1_SEQ_0_LEVEL_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0
  DEF y := 1 <INT>
  CALL WriteInt([y -> z]<INT>)
  DEF A := 1 <INT>
  DEF B := (PARAM g) ISUB A <INT>
  DEF C := 2 <INT>
  CALL Div([B -> D]<INT>, [C -> E]<INT>)
  DEF G := (RETURN F) <INT>
  PARAM g := G <INT>
  GOTO IFEND_1_LEVEL_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0
  DEF H := 0 <INT>
  DEF I := (PARAM g) EQ H <BOOL>
  DEF J := TRUE <BOOL>
  IF I EQ J
  THEN IFSTAT_1_SEQ_1_LEVEL_0
  ELSE IFNEXT_1_SEQ_1_LEVEL_0
  LABEL IFSTAT_1_SEQ_1_LEVEL_0
  DEF K := 1 <INT>
  CALL INeg([K -> b]<INT>)
  DEF L := (RETURN c) <INT>
  CALL WriteInt([L -> z]<INT>)
  GOTO IFEND_1_LEVEL_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0
  DEF M := 0 <INT>
  CALL WriteInt([M -> z]<INT>)
  DEF N := 2 <INT>
  CALL Div([(PARAM g) -> D]<INT>, [N -> E]<INT>)
  DEF O := (RETURN F) <INT>
  PARAM g := O <INT>
  GOTO IFEND_1_LEVEL_0
  LABEL IFNEXT_1_SEQ_2_LEVEL_0
  LABEL IFEND_1_LEVEL_0
 RETURN
