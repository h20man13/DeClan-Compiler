SYMBOL SECTION
 e CONST INTERNAL answer
 f INTERNAL n
 g INTERNAL PARAM Display 0
DATA SECTION
 a := 42 [INT]
 CALL INeg((a -> b)[INT])
 EXTERNAL RETURN d := c [INT]
 GLOBAL e := d [INT]
 GLOBAL f := 0 [INT]
CODE SECTION
 f := e [INT]
 i := 0 [INT]
 j := f LT i [BOOL]
 IF j EQ TRUE THEN IFSTAT_0_SEQ_0_LEVEL_0 ELSE IFNEXT_0_SEQ_0_LEVEL_0
 LABEL IFSTAT_0_SEQ_0_LEVEL_0
 CALL INeg((f -> k)[INT])
 EXTERNAL RETURN m := l [INT]
 f := m [INT]
 GOTO IFEND_0_LEVEL_0
 LABEL IFNEXT_0_SEQ_0_LEVEL_0
 n := 0 [INT]
 o := f GT n [BOOL]
 IF o EQ TRUE THEN IFSTAT_0_SEQ_1_LEVEL_0 ELSE IFNEXT_0_SEQ_1_LEVEL_0
 LABEL IFSTAT_0_SEQ_1_LEVEL_0
 CALL Display((f -> g)[INT])
 GOTO IFEND_0_LEVEL_0
 LABEL IFNEXT_0_SEQ_1_LEVEL_0
 LABEL IFEND_0_LEVEL_0
END
PROC SECTION
 PROC LABEL Display
  PARAM q := g [INT]
  p := FALSE [BOOL]
  r := 2 [INT]
  CALL Mod((q -> s)[INT], (r -> t)[INT])
  EXTERNAL RETURN v := u [INT]
  w := 0 [INT]
  x := v NE w [BOOL]
  p := x [BOOL]
  IF p EQ TRUE THEN IFSTAT_1_SEQ_0_LEVEL_0 ELSE IFNEXT_1_SEQ_0_LEVEL_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0
  y := 1 [INT]
  CALL WriteInt((y -> z)[INT])
  A := 1 [INT]
  B := q ISUB A [INT]
  C := 2 [INT]
  CALL Div((B -> D)[INT], (C -> E)[INT])
  EXTERNAL RETURN G := F [INT]
  q := G [INT]
  GOTO IFEND_1_LEVEL_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0
  H := 0 [INT]
  I := q EQ H [BOOL]
  IF I EQ TRUE THEN IFSTAT_1_SEQ_1_LEVEL_0 ELSE IFNEXT_1_SEQ_1_LEVEL_0
  LABEL IFSTAT_1_SEQ_1_LEVEL_0
  J := 1 [INT]
  CALL INeg((J -> K)[INT])
  EXTERNAL RETURN M := L [INT]
  CALL WriteInt((M -> N)[INT])
  GOTO IFEND_1_LEVEL_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0
  O := 0 [INT]
  CALL WriteInt((O -> P)[INT])
  Q := 2 [INT]
  CALL Div((q -> R)[INT], (Q -> S)[INT])
  EXTERNAL RETURN U := T [INT]
  q := U [INT]
  GOTO IFEND_1_LEVEL_0
  LABEL IFNEXT_1_SEQ_2_LEVEL_0
  LABEL IFEND_1_LEVEL_0
 RETURN
