SYMBOL SECTION
 ENTRY a INTERNAL n
 ENTRY b INTERNAL i
 ENTRY c INTERNAL result
 ENTRY j EXTERNAL RETURN ReadInt
 ENTRY n EXTERNAL PARAM WriteInt 0
 ENTRY d INTERNAL PARAM M 0
 ENTRY e INTERNAL RETURN M
 ENTRY f INTERNAL PARAM F 0
 ENTRY g INTERNAL RETURN F
 ENTRY h INTERNAL PARAM Fact 0
 ENTRY i INTERNAL RETURN Fact
DATA SECTION
BSS SECTION
 DEF GLOBAL a := 0 <INT>
 DEF GLOBAL b := 0 <INT>
 DEF GLOBAL c := 0 <INT>
CODE SECTION
 CALL ReadInt()
 DEF k := (RETURN j) <INT>
 GLOBAL a := k <INT>
 DEF l := 0 <INT>
 GLOBAL b := l <INT>
 LABEL FORBEG_0_LEVEL_0
 IF (GLOBAL b) LT (GLOBAL a)
 THEN FORLOOP_0_LEVEL_0
 ELSE FOREND_0_LEVEL_0
 LABEL FORLOOP_0_LEVEL_0
 CALL F([(GLOBAL b) -> f]<INT>)
 DEF m := (RETURN g) <INT>
 GLOBAL c := m <INT>
 CALL WriteInt([(GLOBAL c) -> n]<INT>)
 CALL Fact([(GLOBAL b) -> h]<INT>)
 DEF o := (RETURN i) <INT>
 GLOBAL c := o <INT>
 CALL WriteInt([(GLOBAL c) -> n]<INT>)
 CALL WriteLn()
 DEF p := 1 <INT>
 GLOBAL b := (GLOBAL b) IADD p <INT>
 GOTO FORBEG_0_LEVEL_0
 LABEL FOREND_0_LEVEL_0
END
PROC SECTION
 PROC LABEL M
  DEF q := 0 <INT>
  DEF r := 0 <INT>
  DEF s := 0 <INT>
  DEF t := (PARAM d) EQ s <BOOL>
  DEF u := TRUE <BOOL>
  IF t EQ u
  THEN IFSTAT_0_SEQ_0_LEVEL_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0
  DEF v := 0 <INT>
  r := v <INT>
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0
  DEF w := 1 <INT>
  DEF x := (PARAM d) ISUB w <INT>
  CALL M([x -> d]<INT>)
  DEF y := (RETURN e) <INT>
  q := y <INT>
  CALL F([q -> f]<INT>)
  DEF z := (RETURN g) <INT>
  r := z <INT>
  DEF A := (PARAM d) ISUB r <INT>
  r := A <INT>
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0
  LABEL IFEND_0_LEVEL_0
  DEF RETURN e := r <INT>
 RETURN
 PROC LABEL F
  DEF B := 0 <INT>
  DEF C := 0 <INT>
  DEF D := 0 <INT>
  DEF E := (PARAM f) EQ D <BOOL>
  DEF F := TRUE <BOOL>
  IF E EQ F
  THEN IFSTAT_1_SEQ_0_LEVEL_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0
  DEF G := 1 <INT>
  C := G <INT>
  GOTO IFEND_1_LEVEL_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0
  DEF H := 1 <INT>
  DEF I := (PARAM f) ISUB H <INT>
  CALL F([I -> f]<INT>)
  DEF J := (RETURN g) <INT>
  B := J <INT>
  CALL M([B -> d]<INT>)
  DEF K := (RETURN e) <INT>
  C := K <INT>
  DEF L := (PARAM f) ISUB C <INT>
  C := L <INT>
  GOTO IFEND_1_LEVEL_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0
  LABEL IFEND_1_LEVEL_0
  DEF RETURN g := C <INT>
 RETURN
 PROC LABEL Fact
  DEF M := 0 <INT>
  DEF N := 0 <INT>
  DEF O := 0 <INT>
  DEF P := (PARAM h) EQ O <BOOL>
  DEF Q := TRUE <BOOL>
  IF P EQ Q
  THEN IFSTAT_2_SEQ_0_LEVEL_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_0
  DEF R := 1 <INT>
  N := R <INT>
  GOTO IFEND_2_LEVEL_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_0
  DEF S := 1 <INT>
  DEF T := (PARAM h) ISUB S <INT>
  CALL Fact([T -> h]<INT>)
  DEF U := (RETURN i) <INT>
  M := U <INT>
  DEF V := (PARAM h) IMUL M <INT>
  N := V <INT>
  GOTO IFEND_2_LEVEL_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_0
  LABEL IFEND_2_LEVEL_0
  DEF RETURN i := N <INT>
 RETURN
