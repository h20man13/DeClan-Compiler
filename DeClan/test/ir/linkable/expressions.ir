SYMBOL SECTION
 b CONST INTERNAL a
 d CONST INTERNAL b
 p CONST INTERNAL c
 v CONST INTERNAL d
 O CONST INTERNAL e
 P INTERNAL x
 Q INTERNAL y
 R INTERNAL z
 S INTERNAL l
 T INTERNAL m
 U INTERNAL n
 V INTERNAL p
 W INTERNAL q
 X INTERNAL r
DATA SECTION
 a := 0 [INT]
 GLOBAL b := a [INT]
 c := 1.2 [REAL]
 GLOBAL d := c [REAL]
 e := 3.14 [REAL]
 CALL RNeg((e -> f)[REAL])
 EXTERNAL RETURN h := g [REAL]
 CALL IntToReal((b -> i)[INT])
 EXTERNAL RETURN k := j [REAL]
 CALL RAdd((h -> l)[REAL], (k -> m)[REAL])
 EXTERNAL RETURN o := n [REAL]
 GLOBAL p := o [REAL]
 q := 6 [INT]
 r := 6 [INT]
 s := 1 [INT]
 t := r IADD s [INT]
 u := q IMUL t [INT]
 GLOBAL v := u [INT]
 CALL IntToReal((b -> w)[INT])
 EXTERNAL RETURN y := x [REAL]
 CALL RMul((y -> z)[REAL], (d -> A)[REAL])
 EXTERNAL RETURN C := B [REAL]
 CALL IntToReal((v -> D)[INT])
 EXTERNAL RETURN F := E [REAL]
 CALL RDivide((p -> G)[REAL], (F -> H)[REAL])
 EXTERNAL RETURN J := I [REAL]
 CALL RNotEqualTo((C -> K)[REAL], (J -> L)[REAL])
 EXTERNAL RETURN N := M [BOOL]
 GLOBAL O := N [BOOL]
 GLOBAL P := 0.0 [REAL]
 GLOBAL Q := 0.0 [REAL]
 GLOBAL R := 0.0 [REAL]
 GLOBAL S := 0 [INT]
 GLOBAL T := 0 [INT]
 GLOBAL U := 0 [INT]
 GLOBAL V := FALSE [BOOL]
 GLOBAL W := FALSE [BOOL]
 GLOBAL X := FALSE [BOOL]
CODE SECTION
 CALL RDivide((d -> Y)[REAL], (d -> Z)[REAL])
 EXTERNAL RETURN a1 := a0 [REAL]
 P := a1 [REAL]
 a2 := 10 [INT]
 CALL Mod((v -> a3)[INT], (a2 -> a4)[INT])
 EXTERNAL RETURN a6 := a5 [INT]
 S := a6 [INT]
 CALL RNeg((p -> a7)[REAL])
 EXTERNAL RETURN a9 := a8 [REAL]
 CALL IntToReal((b -> b0)[INT])
 EXTERNAL RETURN b2 := b1 [REAL]
 CALL RMul((d -> b3)[REAL], (b2 -> b4)[REAL])
 EXTERNAL RETURN b6 := b5 [REAL]
 CALL RSub((a9 -> b7)[REAL], (b6 -> b8)[REAL])
 EXTERNAL RETURN c0 := b9 [REAL]
 Q := c0 [REAL]
 CALL WriteInt((b -> c1)[INT])
 CALL WriteReal((P -> c2)[REAL])
 CALL WriteReal((P -> c3)[REAL])
 CALL WriteReal((Q -> c4)[REAL])
 CALL WriteLn()
 CALL Div((v -> c5)[INT], (S -> c6)[INT])
 EXTERNAL RETURN c8 := c7 [INT]
 T := c8 [INT]
 CALL Divide((v -> c9)[INT], (S -> d0)[INT])
 EXTERNAL RETURN d2 := d1 [REAL]
 R := d2 [REAL]
 CALL WriteInt((T -> d3)[INT])
 CALL WriteReal((R -> d4)[REAL])
 CALL WriteLn()
 CALL Round((p -> d5)[REAL])
 EXTERNAL RETURN d7 := d6 [INT]
 CALL IntToReal((d7 -> d8)[INT])
 EXTERNAL RETURN e0 := d9 [REAL]
 R := e0 [REAL]
 CALL WriteReal((R -> e1)[REAL])
 IF O EQ TRUE THEN IFSTAT_0_SEQ_0_LEVEL_0 ELSE IFNEXT_0_SEQ_0_LEVEL_0
 LABEL IFSTAT_0_SEQ_0_LEVEL_0
 e2 := 2 [INT]
 e3 := 2 [INT]
 e4 := e2 IMUL e3 [INT]
 CALL WriteInt((e4 -> e5)[INT])
 GOTO IFEND_0_LEVEL_0
 LABEL IFNEXT_0_SEQ_0_LEVEL_0
 e6 := 10 [INT]
 CALL Divide((v -> e7)[INT], (e6 -> e8)[INT])
 EXTERNAL RETURN f0 := e9 [REAL]
 CALL WriteReal((f0 -> f1)[REAL])
 GOTO IFEND_0_LEVEL_0
 LABEL IFNEXT_0_SEQ_1_LEVEL_0
 LABEL IFEND_0_LEVEL_0
 CALL WriteLn()
 f2 := BNOT O [BOOL]
 CALL IntToReal((b -> f3)[INT])
 EXTERNAL RETURN f5 := f4 [REAL]
 CALL RGreaterThan((P -> f6)[REAL], (f5 -> f7)[REAL])
 EXTERNAL RETURN f9 := f8 [BOOL]
 g0 := f2 LAND f9 [BOOL]
 V := g0 [BOOL]
 g1 := BNOT O [BOOL]
 CALL IntToReal((b -> g2)[INT])
 EXTERNAL RETURN g4 := g3 [REAL]
 CALL RGreaterThanOrEqualTo((P -> g5)[REAL], (g4 -> g6)[REAL])
 EXTERNAL RETURN g8 := g7 [BOOL]
 g9 := g1 LOR g8 [BOOL]
 W := g9 [BOOL]
 h0 := V EQ W [BOOL]
 X := h0 [BOOL]
 IF V EQ TRUE THEN IFSTAT_1_SEQ_0_LEVEL_0 ELSE IFNEXT_1_SEQ_0_LEVEL_0
 LABEL IFSTAT_1_SEQ_0_LEVEL_0
 h1 := 4 [INT]
 CALL WriteInt((h1 -> h2)[INT])
 GOTO IFEND_1_LEVEL_0
 LABEL IFNEXT_1_SEQ_0_LEVEL_0
 IF W EQ TRUE THEN IFSTAT_1_SEQ_1_LEVEL_0 ELSE IFNEXT_1_SEQ_1_LEVEL_0
 LABEL IFSTAT_1_SEQ_1_LEVEL_0
 h3 := 5 [INT]
 CALL WriteInt((h3 -> h4)[INT])
 GOTO IFEND_1_LEVEL_0
 LABEL IFNEXT_1_SEQ_1_LEVEL_0
 LABEL IFEND_1_LEVEL_0
 IF X EQ TRUE THEN IFSTAT_2_SEQ_0_LEVEL_0 ELSE IFNEXT_2_SEQ_0_LEVEL_0
 LABEL IFSTAT_2_SEQ_0_LEVEL_0
 h5 := 5 [INT]
 CALL WriteInt((h5 -> h6)[INT])
 GOTO IFEND_2_LEVEL_0
 LABEL IFNEXT_2_SEQ_0_LEVEL_0
 h7 := 6 [INT]
 CALL WriteInt((h7 -> h8)[INT])
 GOTO IFEND_2_LEVEL_0
 LABEL IFNEXT_2_SEQ_1_LEVEL_0
 LABEL IFEND_2_LEVEL_0
 CALL WriteLn()
END
PROC SECTION
