SYMBOL SECTION
DATA SECTION
 d68 := 6.5 [REAL]
 GLOBAL d69 := d68 [REAL]
 GLOBAL d70 := 0 [INT]
 d96 := 127 [INT]
 GLOBAL d98 := d96 [INT]
CODE SECTION
 CALL RealToInt((d69 -> d71)[REAL])
 EXTERNAL RETURN e59 := d74 [INT]
 d70 := e59 [INT]
 CALL WriteInt((d70 -> e60)[INT])
END
PROC SECTION
 PROC LABEL RealToInt
  PARAM d72 := d71 [REAL]
  d73 := 0 [INT]
  d75 := 0 [INT]
  d76 := 0 [INT]
  d77 := 0 [INT]
  d78 := 0 [INT]
  CALL RealExponent((d72 -> d79)[REAL])
  EXTERNAL RETURN d99 := d82 [INT]
  d75 := d99 [INT]
  CALL RealMantissa((d72 -> e10)[REAL])
  EXTERNAL RETURN e34 := e13 [INT]
  d76 := e34 [INT]
  CALL RealSign((d72 -> e35)[REAL])
  EXTERNAL RETURN e45 := e38 [INT]
  d77 := e45 [INT]
  e46 := 0 [INT]
  e47 := d75 GT e46 [BOOL]
  IF e47 EQ TRUE THEN IFSTAT_5_SEQ_0_LEVEL_0_0 ELSE IFNEXT_5_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_5_SEQ_0_LEVEL_0_0
  e48 := d76 ILSHIFT d75 [INT]
  d78 := e48 [INT]
  GOTO IFEND_5_LEVEL_0_0
  LABEL IFNEXT_5_SEQ_0_LEVEL_0_0
  e49 := 0 [INT]
  e50 := d75 LT e49 [BOOL]
  IF e50 EQ TRUE THEN IFSTAT_5_SEQ_1_LEVEL_0 ELSE IFNEXT_5_SEQ_1_LEVEL_0_0
  LABEL IFSTAT_5_SEQ_1_LEVEL_0
  e51 := d76 IRSHIFT d75 [INT]
  d78 := e51 [INT]
  GOTO IFEND_5_LEVEL_0_0
  LABEL IFNEXT_5_SEQ_1_LEVEL_0_0
  d78 := d76 [INT]
  GOTO IFEND_5_LEVEL_0_0
  LABEL IFNEXT_5_SEQ_2_LEVEL_0
  LABEL IFEND_5_LEVEL_0_0
  e52 := 23 [INT]
  e53 := d78 IRSHIFT e52 [INT]
  d73 := e53 [INT]
  e54 := 1 [INT]
  e55 := d77 EQ e54 [BOOL]
  IF e55 EQ TRUE THEN IFSTAT_6_SEQ_0_LEVEL_0 ELSE IFNEXT_6_SEQ_0_LEVEL_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0
  e56 := INOT d73 [INT]
  d73 := e56 [INT]
  e57 := 1 [INT]
  e58 := d73 IADD e57 [INT]
  d73 := e58 [INT]
  GOTO IFEND_6_LEVEL_0
  LABEL IFNEXT_6_SEQ_0_LEVEL_0
  LABEL IFEND_6_LEVEL_0
  INTERNAL RETURN d74 := d73 [INT]
 RETURN
 PROC LABEL RealExponent
  PARAM d80 := d79 [REAL]
  d81 := 0 [INT]
  d83 := 0 [INT]
  d84 := 0 [INT]
  CALL RealBinaryAsInt((d80 -> d85)[REAL])
  EXTERNAL RETURN d90 := d88 [INT]
  d83 := d90 [INT]
  d91 := 23 [INT]
  d92 := d83 IRSHIFT d91 [INT]
  d93 := 255 [INT]
  d94 := d92 IAND d93 [INT]
  d84 := d94 [INT]
  d95 := d84 ISUB d98 [INT]
  d81 := d95 [INT]
  INTERNAL RETURN d82 := d81 [INT]
 RETURN
 PROC LABEL RealBinaryAsInt
  PARAM d86 := d85 [REAL]
  d87 := 0 [INT]
  d89 := 0.0 [REAL]
  IPARAM d89
  IPARAM d86
  IASM "LDR %r, %a"
  IPARAM d89
  IPARAM d87
  IASM "STR %r, %a"
  INTERNAL RETURN d88 := d87 [INT]
 RETURN
 PROC LABEL RealMantissa
  PARAM e11 := e10 [REAL]
  e12 := 0 [INT]
  e14 := 0 [INT]
  e15 := 0 [INT]
  e16 := 0 [INT]
  CALL RealBinaryAsInt((e11 -> d85)[REAL])
  EXTERNAL RETURN e17 := d88 [INT]
  e14 := e17 [INT]
  e18 := 8388607 [INT]
  e19 := e14 IAND e18 [INT]
  e15 := e19 [INT]
  CALL RealIsZero((e11 -> e20)[REAL])
  EXTERNAL RETURN e31 := e23 [BOOL]
  IF e31 EQ TRUE THEN IFSTAT_6_SEQ_0_LEVEL_0_0 ELSE IFNEXT_6_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0_0
  e12 := e15 [INT]
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_0_LEVEL_0_0
  e32 := 8388608 [INT]
  e33 := e15 IOR e32 [INT]
  e12 := e33 [INT]
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_1_LEVEL_0
  LABEL IFEND_6_LEVEL_0_0
  INTERNAL RETURN e13 := e12 [INT]
 RETURN
 PROC LABEL RealIsZero
  PARAM e21 := e20 [REAL]
  e22 := FALSE [BOOL]
  e24 := 0 [INT]
  e25 := 0 [INT]
  CALL RealBinaryAsInt((e21 -> d85)[REAL])
  EXTERNAL RETURN e26 := d88 [INT]
  e24 := e26 [INT]
  e27 := 0 [INT]
  e28 := e24 EQ e27 [BOOL]
  IF e28 EQ TRUE THEN IFSTAT_0_SEQ_0_LEVEL_0_0 ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  e29 := TRUE [BOOL]
  e22 := e29 [BOOL]
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  e30 := FALSE [BOOL]
  e22 := e30 [BOOL]
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  INTERNAL RETURN e23 := e22 [BOOL]
 RETURN
 PROC LABEL RealSign
  PARAM e36 := e35 [REAL]
  e37 := 0 [INT]
  e39 := 0 [INT]
  CALL RealBinaryAsInt((e36 -> d85)[REAL])
  EXTERNAL RETURN e40 := d88 [INT]
  e39 := e40 [INT]
  e41 := 31 [INT]
  e42 := e39 IRSHIFT e41 [INT]
  e43 := 1 [INT]
  e44 := e42 IAND e43 [INT]
  e37 := e44 [INT]
  INTERNAL RETURN e38 := e37 [INT]
 RETURN
 PROC LABEL WriteInt
  PARAM e61 := e60 [INT]
  e62 := 0 [INT]
  IPARAM e62
  IASM "MOV %r, R0"
  IPARAM e61
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM e62
  IASM "MOV R0, %r"
 RETURN
