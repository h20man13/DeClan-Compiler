SYMBOL SECTION
DATA SECTION
 d62 := 6.5 [REAL]
 GLOBAL d63 := d62 [REAL]
 GLOBAL d64 := 0 [INT]
 d90 := 127 [INT]
 GLOBAL d92 := d90 [INT]
CODE SECTION
 CALL RealToInt((d63 -> d65)[REAL])
 EXTERNAL RETURN e53 := d68 [INT]
 d64 := e53 [INT]
 CALL WriteInt((d64 -> e54)[INT])
END
PROC SECTION
 PROC LABEL RealToInt
  PARAM d66 := d65 [REAL]
  d67 := 0 [INT]
  d69 := 0 [INT]
  d70 := 0 [INT]
  d71 := 0 [INT]
  d72 := 0 [INT]
  CALL RealExponent((d66 -> d73)[REAL])
  EXTERNAL RETURN d93 := d76 [INT]
  d69 := d93 [INT]
  CALL RealMantissa((d66 -> d94)[REAL])
  EXTERNAL RETURN e28 := d97 [INT]
  d70 := e28 [INT]
  CALL RealSign((d66 -> e29)[REAL])
  EXTERNAL RETURN e39 := e32 [INT]
  d71 := e39 [INT]
  e40 := 0 [INT]
  e41 := d69 GT e40 [BOOL]
  IF e41 EQ TRUE THEN IFSTAT_5_SEQ_0_LEVEL_0_0 ELSE IFNEXT_5_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_5_SEQ_0_LEVEL_0_0
  e42 := d70 ILSHIFT d69 [INT]
  d72 := e42 [INT]
  GOTO IFEND_5_LEVEL_0_0
  LABEL IFNEXT_5_SEQ_0_LEVEL_0_0
  e43 := 0 [INT]
  e44 := d69 LT e43 [BOOL]
  IF e44 EQ TRUE THEN IFSTAT_5_SEQ_1_LEVEL_0 ELSE IFNEXT_5_SEQ_1_LEVEL_0_0
  LABEL IFSTAT_5_SEQ_1_LEVEL_0
  e45 := d70 IRSHIFT d69 [INT]
  d72 := e45 [INT]
  GOTO IFEND_5_LEVEL_0_0
  LABEL IFNEXT_5_SEQ_1_LEVEL_0_0
  d72 := d70 [INT]
  GOTO IFEND_5_LEVEL_0_0
  LABEL IFNEXT_5_SEQ_2_LEVEL_0
  LABEL IFEND_5_LEVEL_0_0
  e46 := 23 [INT]
  e47 := d72 IRSHIFT e46 [INT]
  d67 := e47 [INT]
  e48 := 1 [INT]
  e49 := d71 EQ e48 [BOOL]
  IF e49 EQ TRUE THEN IFSTAT_6_SEQ_0_LEVEL_0 ELSE IFNEXT_6_SEQ_0_LEVEL_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0
  e50 := INOT d67 [INT]
  d67 := e50 [INT]
  e51 := 1 [INT]
  e52 := d67 IADD e51 [INT]
  d67 := e52 [INT]
  GOTO IFEND_6_LEVEL_0
  LABEL IFNEXT_6_SEQ_0_LEVEL_0
  LABEL IFEND_6_LEVEL_0
  INTERNAL RETURN d68 := d67 [INT]
 RETURN
 PROC LABEL RealExponent
  PARAM d74 := d73 [REAL]
  d75 := 0 [INT]
  d77 := 0 [INT]
  d78 := 0 [INT]
  CALL RealBinaryAsInt((d74 -> d79)[REAL])
  EXTERNAL RETURN d84 := d82 [INT]
  d77 := d84 [INT]
  d85 := 23 [INT]
  d86 := d77 IRSHIFT d85 [INT]
  d87 := 255 [INT]
  d88 := d86 IAND d87 [INT]
  d78 := d88 [INT]
  d89 := d78 ISUB d92 [INT]
  d75 := d89 [INT]
  INTERNAL RETURN d76 := d75 [INT]
 RETURN
 PROC LABEL RealBinaryAsInt
  PARAM d80 := d79 [REAL]
  d81 := 0 [INT]
  d83 := 0.0 [REAL]
  IPARAM d83
  IPARAM d80
  IASM "LDR %r, %a"
  IPARAM d83
  IPARAM d81
  IASM "STR %r, %a"
  INTERNAL RETURN d82 := d81 [INT]
 RETURN
 PROC LABEL RealMantissa
  PARAM d95 := d94 [REAL]
  d96 := 0 [INT]
  d98 := 0 [INT]
  d99 := 0 [INT]
  e10 := 0 [INT]
  CALL RealBinaryAsInt((d95 -> d79)[REAL])
  EXTERNAL RETURN e11 := d82 [INT]
  d98 := e11 [INT]
  e12 := 8388607 [INT]
  e13 := d98 IAND e12 [INT]
  d99 := e13 [INT]
  CALL RealIsZero((d95 -> e14)[REAL])
  EXTERNAL RETURN e25 := e17 [BOOL]
  IF e25 EQ TRUE THEN IFSTAT_6_SEQ_0_LEVEL_0_0 ELSE IFNEXT_6_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0_0
  d96 := d99 [INT]
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_0_LEVEL_0_0
  e26 := 8388608 [INT]
  e27 := d99 IOR e26 [INT]
  d96 := e27 [INT]
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_1_LEVEL_0
  LABEL IFEND_6_LEVEL_0_0
  INTERNAL RETURN d97 := d96 [INT]
 RETURN
 PROC LABEL RealIsZero
  PARAM e15 := e14 [REAL]
  e16 := FALSE [BOOL]
  e18 := 0 [INT]
  e19 := 0 [INT]
  CALL RealBinaryAsInt((e15 -> d79)[REAL])
  EXTERNAL RETURN e20 := d82 [INT]
  e18 := e20 [INT]
  e21 := 0 [INT]
  e22 := e18 EQ e21 [BOOL]
  IF e22 EQ TRUE THEN IFSTAT_0_SEQ_0_LEVEL_0_0 ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  e23 := TRUE [BOOL]
  e16 := e23 [BOOL]
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  e24 := FALSE [BOOL]
  e16 := e24 [BOOL]
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  INTERNAL RETURN e17 := e16 [BOOL]
 RETURN
 PROC LABEL RealSign
  PARAM e30 := e29 [REAL]
  e31 := 0 [INT]
  e33 := 0 [INT]
  CALL RealBinaryAsInt((e30 -> d79)[REAL])
  EXTERNAL RETURN e34 := d82 [INT]
  e33 := e34 [INT]
  e35 := 31 [INT]
  e36 := e33 IRSHIFT e35 [INT]
  e37 := 1 [INT]
  e38 := e36 IAND e37 [INT]
  e31 := e38 [INT]
  INTERNAL RETURN e32 := e31 [INT]
 RETURN
 PROC LABEL WriteInt
  PARAM e55 := e54 [INT]
  e56 := 0 [INT]
  IPARAM e56
  IASM "MOV %r, R0"
  IPARAM e55
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM e56
  IASM "MOV R0, %r"
 RETURN
