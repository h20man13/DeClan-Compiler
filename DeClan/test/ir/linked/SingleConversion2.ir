SYMBOL SECTION
DATA SECTION
 e15 := 6.5 [REAL]
 GLOBAL e16 := e15 [REAL]
 GLOBAL e17 := 0 [INT]
 e43 := 127 [INT]
 GLOBAL e45 := e43 [INT]
CODE SECTION
 CALL RealToInt((e16 -> e18)[REAL])
 EXTERNAL RETURN e98 := e21 [INT]
 e17 := e98 [INT]
 CALL WriteInt((e17 -> e99)[INT])
END
PROC SECTION
 PROC LABEL RealToInt
  PARAM e19 := e18 [REAL]
  e20 := 0 [INT]
  e22 := 0 [INT]
  e23 := 0 [INT]
  e24 := 0 [INT]
  e25 := 0 [INT]
  CALL RealExponent((e19 -> e26)[REAL])
  EXTERNAL RETURN e46 := e29 [INT]
  e22 := e46 [INT]
  CALL RealMantissa((e19 -> e47)[REAL])
  EXTERNAL RETURN e73 := e50 [INT]
  e23 := e73 [INT]
  CALL RealSign((e19 -> e74)[REAL])
  EXTERNAL RETURN e84 := e77 [INT]
  e24 := e84 [INT]
  e85 := 0 [INT]
  e86 := e22 GT e85 [BOOL]
  IF e86 EQ TRUE THEN IFSTAT_5_SEQ_0_LEVEL_0_0 ELSE IFNEXT_5_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_5_SEQ_0_LEVEL_0_0
  e87 := e23 ILSHIFT e22 [INT]
  e25 := e87 [INT]
  GOTO IFEND_5_LEVEL_0_0
  LABEL IFNEXT_5_SEQ_0_LEVEL_0_0
  e88 := 0 [INT]
  e89 := e22 LT e88 [BOOL]
  IF e89 EQ TRUE THEN IFSTAT_5_SEQ_1_LEVEL_0 ELSE IFNEXT_5_SEQ_1_LEVEL_0_0
  LABEL IFSTAT_5_SEQ_1_LEVEL_0
  e90 := e23 IRSHIFT e22 [INT]
  e25 := e90 [INT]
  GOTO IFEND_5_LEVEL_0_0
  LABEL IFNEXT_5_SEQ_1_LEVEL_0_0
  e25 := e23 [INT]
  GOTO IFEND_5_LEVEL_0_0
  LABEL IFNEXT_5_SEQ_2_LEVEL_0
  LABEL IFEND_5_LEVEL_0_0
  e91 := 23 [INT]
  e92 := e25 IRSHIFT e91 [INT]
  e20 := e92 [INT]
  e93 := 1 [INT]
  e94 := e24 EQ e93 [BOOL]
  IF e94 EQ TRUE THEN IFSTAT_6_SEQ_0_LEVEL_0 ELSE IFNEXT_6_SEQ_0_LEVEL_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0
  e95 := INOT e20 [INT]
  e20 := e95 [INT]
  e96 := 1 [INT]
  e97 := e20 IADD e96 [INT]
  e20 := e97 [INT]
  GOTO IFEND_6_LEVEL_0
  LABEL IFNEXT_6_SEQ_0_LEVEL_0
  LABEL IFEND_6_LEVEL_0
  INTERNAL RETURN e21 := e20 [INT]
 RETURN
 PROC LABEL RealExponent
  PARAM e27 := e26 [REAL]
  e28 := 0 [INT]
  e30 := 0 [INT]
  e31 := 0 [INT]
  CALL RealBinaryAsInt((e27 -> e32)[REAL])
  EXTERNAL RETURN e37 := e35 [INT]
  e30 := e37 [INT]
  e38 := 23 [INT]
  e39 := e30 IRSHIFT e38 [INT]
  e40 := 255 [INT]
  e41 := e39 IAND e40 [INT]
  e31 := e41 [INT]
  e42 := e31 ISUB e45 [INT]
  e28 := e42 [INT]
  INTERNAL RETURN e29 := e28 [INT]
 RETURN
 PROC LABEL RealBinaryAsInt
  PARAM e33 := e32 [REAL]
  e34 := 0 [INT]
  e36 := 0.0 [REAL]
  IPARAM e36
  IPARAM e33
  IASM "LDR %r, %a"
  IPARAM e36
  IPARAM e34
  IASM "STR %r, %a"
  INTERNAL RETURN e35 := e34 [INT]
 RETURN
 PROC LABEL RealMantissa
  PARAM e48 := e47 [REAL]
  e49 := 0 [INT]
  e51 := 0 [INT]
  e52 := 0 [INT]
  e53 := 0 [INT]
  CALL RealBinaryAsInt((e48 -> e32)[REAL])
  EXTERNAL RETURN e54 := e35 [INT]
  e51 := e54 [INT]
  e55 := 8388607 [INT]
  e56 := e51 IAND e55 [INT]
  e52 := e56 [INT]
  CALL RealIsZero((e48 -> e57)[REAL])
  EXTERNAL RETURN e70 := e60 [BOOL]
  IF e70 EQ TRUE THEN IFSTAT_6_SEQ_0_LEVEL_0_0 ELSE IFNEXT_6_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0_0
  e49 := e52 [INT]
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_0_LEVEL_0_0
  e71 := 8388608 [INT]
  e72 := e52 IOR e71 [INT]
  e49 := e72 [INT]
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_1_LEVEL_0
  LABEL IFEND_6_LEVEL_0_0
  INTERNAL RETURN e50 := e49 [INT]
 RETURN
 PROC LABEL RealIsZero
  PARAM e58 := e57 [REAL]
  e59 := FALSE [BOOL]
  e61 := 0 [INT]
  e62 := 0 [INT]
  CALL RealBinaryAsInt((e58 -> e32)[REAL])
  EXTERNAL RETURN e63 := e35 [INT]
  e62 := e63 [INT]
  e64 := 2147483647 [INT]
  e65 := e62 IAND e64 [INT]
  e61 := e65 [INT]
  e66 := 0 [INT]
  e67 := e61 EQ e66 [BOOL]
  IF e67 EQ TRUE THEN IFSTAT_0_SEQ_0_LEVEL_0_0 ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  e68 := TRUE [BOOL]
  e59 := e68 [BOOL]
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  e69 := FALSE [BOOL]
  e59 := e69 [BOOL]
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  INTERNAL RETURN e60 := e59 [BOOL]
 RETURN
 PROC LABEL RealSign
  PARAM e75 := e74 [REAL]
  e76 := 0 [INT]
  e78 := 0 [INT]
  CALL RealBinaryAsInt((e75 -> e32)[REAL])
  EXTERNAL RETURN e79 := e35 [INT]
  e78 := e79 [INT]
  e80 := 31 [INT]
  e81 := e78 IRSHIFT e80 [INT]
  e82 := 1 [INT]
  e83 := e81 IAND e82 [INT]
  e76 := e83 [INT]
  INTERNAL RETURN e77 := e76 [INT]
 RETURN
 PROC LABEL WriteInt
  PARAM f10 := e99 [INT]
  f11 := 0 [INT]
  IPARAM f11
  IASM "MOV %r, R0"
  IPARAM f10
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM f11
  IASM "MOV R0, %r"
 RETURN
