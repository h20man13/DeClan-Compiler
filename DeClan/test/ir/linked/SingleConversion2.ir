SYMBOL SECTION
DATA SECTION
 a := 6.5 [REAL]
 GLOBAL b := a [REAL]
 GLOBAL c := 0 [INT]
 d69 := 127 [INT]
 GLOBAL d70 := d69 [INT]
CODE SECTION
 CALL RealToInt((b -> d43)[REAL])
 EXTERNAL RETURN d42 := d46 [INT]
 c := d42 [INT]
 CALL WriteInt((c -> e30)[INT])
END
PROC SECTION
 PROC LABEL RealToInt
  PARAM d44 := d43 [REAL]
  d45 := 0 [INT]
  d47 := 0 [INT]
  d48 := 0 [INT]
  d49 := 0 [INT]
  d50 := 0 [INT]
  CALL RealExponent((d44 -> d52)[REAL])
  EXTERNAL RETURN d51 := d55 [INT]
  d47 := d51 [INT]
  CALL RealMantissa((d44 -> d72)[REAL])
  EXTERNAL RETURN d71 := d75 [INT]
  d48 := d71 [INT]
  CALL RealSign((d44 -> d97)[REAL])
  EXTERNAL RETURN d96 := e10 [INT]
  d49 := d96 [INT]
  e17 := 0 [INT]
  e18 := d47 GT e17 [BOOL]
  IF e18 EQ TRUE THEN IFSTAT_5_SEQ_0_LEVEL_0_0 ELSE IFNEXT_5_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_5_SEQ_0_LEVEL_0_0
  e19 := d48 ILSHIFT d47 [INT]
  d50 := e19 [INT]
  GOTO IFEND_5_LEVEL_0_0
  LABEL IFNEXT_5_SEQ_0_LEVEL_0_0
  e20 := 0 [INT]
  e21 := d47 LT e20 [BOOL]
  IF e21 EQ TRUE THEN IFSTAT_5_SEQ_1_LEVEL_0 ELSE IFNEXT_5_SEQ_1_LEVEL_0_0
  LABEL IFSTAT_5_SEQ_1_LEVEL_0
  e22 := d48 IRSHIFT d47 [INT]
  d50 := e22 [INT]
  GOTO IFEND_5_LEVEL_0_0
  LABEL IFNEXT_5_SEQ_1_LEVEL_0_0
  d50 := d48 [INT]
  GOTO IFEND_5_LEVEL_0_0
  LABEL IFNEXT_5_SEQ_2_LEVEL_0
  LABEL IFEND_5_LEVEL_0_0
  e23 := 23 [INT]
  e24 := d50 IRSHIFT e23 [INT]
  d45 := e24 [INT]
  e25 := 1 [INT]
  e26 := d49 EQ e25 [BOOL]
  IF e26 EQ TRUE THEN IFSTAT_6_SEQ_0_LEVEL_0 ELSE IFNEXT_6_SEQ_0_LEVEL_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0
  e27 := INOT d45 [INT]
  d45 := e27 [INT]
  e28 := 1 [INT]
  e29 := d45 IADD e28 [INT]
  d45 := e29 [INT]
  GOTO IFEND_6_LEVEL_0
  LABEL IFNEXT_6_SEQ_0_LEVEL_0
  LABEL IFEND_6_LEVEL_0
  INTERNAL RETURN d46 := d45 [INT]
 RETURN
 PROC LABEL RealExponent
  PARAM d53 := d52 [REAL]
  d54 := 0 [INT]
  d56 := 0 [INT]
  d57 := 0 [INT]
  CALL RealBinaryAsInt((d53 -> d59)[REAL])
  EXTERNAL RETURN d58 := d62 [INT]
  d56 := d58 [INT]
  d64 := 23 [INT]
  d65 := d56 IRSHIFT d64 [INT]
  d66 := 255 [INT]
  d67 := d65 IAND d66 [INT]
  d57 := d67 [INT]
  d68 := d57 ISUB d70 [INT]
  d54 := d68 [INT]
  INTERNAL RETURN d55 := d54 [INT]
 RETURN
 PROC LABEL RealBinaryAsInt
  PARAM d60 := d59 [REAL]
  d61 := 0 [INT]
  d63 := 0.0 [REAL]
  IPARAM d63
  IPARAM d60
  IASM "LDR %r, %a"
  IPARAM d63
  IPARAM d61
  IASM "STR %r, %a"
  INTERNAL RETURN d62 := d61 [INT]
 RETURN
 PROC LABEL RealMantissa
  PARAM d73 := d72 [REAL]
  d74 := 0 [INT]
  d76 := 0 [INT]
  d77 := 0 [INT]
  d78 := 0 [INT]
  CALL RealBinaryAsInt((d73 -> d59)[REAL])
  EXTERNAL RETURN d79 := d62 [INT]
  d76 := d79 [INT]
  d80 := 8388607 [INT]
  d81 := d76 IAND d80 [INT]
  d77 := d81 [INT]
  CALL RealIsZero((d73 -> d82)[REAL])
  EXTERNAL RETURN d93 := d85 [BOOL]
  IF d93 EQ TRUE THEN IFSTAT_6_SEQ_0_LEVEL_0_0 ELSE IFNEXT_6_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0_0
  d74 := d77 [INT]
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_0_LEVEL_0_0
  d94 := 8388608 [INT]
  d95 := d77 IOR d94 [INT]
  d74 := d95 [INT]
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_1_LEVEL_0
  LABEL IFEND_6_LEVEL_0_0
  INTERNAL RETURN d75 := d74 [INT]
 RETURN
 PROC LABEL RealIsZero
  PARAM d83 := d82 [REAL]
  d84 := FALSE [BOOL]
  d86 := 0 [INT]
  d87 := 0 [INT]
  CALL RealBinaryAsInt((d83 -> d59)[REAL])
  EXTERNAL RETURN d88 := d62 [INT]
  d86 := d88 [INT]
  d89 := 0 [INT]
  d90 := d86 EQ d89 [BOOL]
  IF d90 EQ TRUE THEN IFSTAT_0_SEQ_0_LEVEL_0_0 ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  d91 := TRUE [BOOL]
  d84 := d91 [BOOL]
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  d92 := FALSE [BOOL]
  d84 := d92 [BOOL]
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  INTERNAL RETURN d85 := d84 [BOOL]
 RETURN
 PROC LABEL RealSign
  PARAM d98 := d97 [REAL]
  d99 := 0 [INT]
  e11 := 0 [INT]
  CALL RealBinaryAsInt((d98 -> d59)[REAL])
  EXTERNAL RETURN e12 := d62 [INT]
  e11 := e12 [INT]
  e13 := 31 [INT]
  e14 := e11 IRSHIFT e13 [INT]
  e15 := 1 [INT]
  e16 := e14 IAND e15 [INT]
  d99 := e16 [INT]
  INTERNAL RETURN e10 := d99 [INT]
 RETURN
 PROC LABEL WriteInt
  PARAM e31 := e30 [INT]
  IPARAM e31
  IASM "LDR R0, %a"
  IASM "SWI 1"
 RETURN
