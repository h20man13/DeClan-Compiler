SYMBOL SECTION
 ENTRY f25 CONST INTERNAL GLOBAL a 
 ENTRY f27 CONST INTERNAL GLOBAL e 
 ENTRY f29 CONST INTERNAL GLOBAL x 
 ENTRY f38 INTERNAL RETURN StringAsAddress
 ENTRY f46 INTERNAL PARAM n IntIsZero 0
 ENTRY f51 INTERNAL RETURN IntIsZero
 ENTRY f78 INTERNAL PARAM n Abs 0
 ENTRY f82 INTERNAL PARAM n INeg 0
 ENTRY f85 INTERNAL RETURN INeg
 ENTRY f87 INTERNAL RETURN Abs
 ENTRY g11 INTERNAL RETURN IntIsNegative
 ENTRY h45 CONST INTERNAL GLOBAL realBias 
 ENTRY g59 INTERNAL RETURN IntBinaryAsReal
 ENTRY g62 INTERNAL RETURN IntToReal
 ENTRY g69 INTERNAL RETURN RealBinaryAsInt
 ENTRY g79 INTERNAL RETURN RealIsZero
 ENTRY g92 INTERNAL RETURN RealSign
 ENTRY h16 INTERNAL RETURN RealIsNegative
 ENTRY h32 INTERNAL RETURN RealIsPositive
 ENTRY h46 INTERNAL RETURN RealExponent
 ENTRY h61 INTERNAL RETURN RealMantissa
 ENTRY h63 INTERNAL RETURN RGreaterThanOrEqualTo
DATA SECTION
 DEF f24 := 0 <INT>
 DEF GLOBAL f25 := f24 <INT>
 DEF f26 := TRUE <BOOL>
 DEF GLOBAL f27 := f26 <BOOL>
 DEF f28 := 1.0 <REAL>
 DEF GLOBAL f29 := f28 <REAL>
 DEF g44 := 127 <INT>
 DEF GLOBAL h45 := g44 <INT>
BSS SECTION
 DEF GLOBAL f30 := FALSE <BOOL>
CODE SECTION
 DEF f31 := "e is " <STRING>
 CALL WriteString([f31 -> f59]<STRING>)
 CALL WriteBool([(GLOBAL f27) -> f61]<BOOL>)
 CALL WriteLn()
 DEF f62 := BNOT (GLOBAL f27) <BOOL>
 CALL IntToReal([(GLOBAL f25) -> g63]<INT>)
 DEF g64 := (RETURN g62) <REAL>
 CALL RGreaterThanOrEqualTo([(GLOBAL f29) -> h64]<REAL>, [g64 -> h65]<REAL>)
 DEF h66 := (RETURN h63) <BOOL>
 DEF h67 := f62 LOR h66 <BOOL>
 GLOBAL f30 := h67 <BOOL>
 CALL WriteBool([(GLOBAL f30) -> f61]<BOOL>)
END
PROC SECTION
 PROC LABEL WriteString
  DEF f32 := 0 <INT>
  DEF f33 := 0 <INT>
  DEF f34 := 0 <INT>
  DEF f35 := 0 <INT>
  CALL StringAsAddress([(PARAM f59) -> f40]<STRING>)
  DEF f41 := (RETURN f38) <INT>
  f32 := f41 <INT>
  DEF f42 := 0 <INT>
  f33 := f42 <INT>
  IPARAM f34
  IPARAM f32
  IPARAM f33
  IASM "LDRB %r, [%r, +%r]"
  IPARAM f34
  IPARAM f34
  IASM "STR %r, %a"
  CALL IntIsZero([f34 -> f46]<INT>)
  DEF f52 := (RETURN f51) <BOOL>
  DEF f53 := BNOT f52 <BOOL>
  DEF f54 := TRUE <BOOL>
  IF f53 EQ f54
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF f53 EQ f54
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  IPARAM f35
  IASM "MOV %r, R0"
  IPARAM f34
  IASM "MOV R0, %r"
  IASM "SWI 6"
  DEF f55 := 1 <INT>
  DEF f56 := f33 IADD f55 <INT>
  f33 := f56 <INT>
  IPARAM f34
  IPARAM f32
  IPARAM f33
  IASM "LDRB %r, [%r, +%r]"
  IPARAM f34
  IPARAM f34
  IASM "STR %r, %a"
  IPARAM f35
  IASM "MOV R0, %r"
  CALL IntIsZero([f34 -> f46]<INT>)
  CALL IntIsZero([f34 -> f46]<INT>)
  DEF f57 := (RETURN f51) <BOOL>
  DEF f58 := BNOT f57 <BOOL>
  f53 := f58 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
 RETURN
 PROC LABEL StringAsAddress
  DEF f36 := 0 <INT>
  DEF f37 := 0 <INT>
  IPARAM g68
  IPARAM (PARAM f40)
  IASM "LDR %r, %a"
  IPARAM g68
  IPARAM f39
  IASM "STR %r, %a"
  DEF RETURN f38 := f39 <INT>
 RETURN
 PROC LABEL IntIsZero
  DEF f43 := FALSE <BOOL>
  DEF f44 := 0 <INT>
  DEF f45 := (PARAM f46) EQ f44 <BOOL>
  DEF f47 := TRUE <BOOL>
  IF f45 EQ f47
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF f48 := TRUE <BOOL>
  f49 := f48 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF f50 := FALSE <BOOL>
  f49 := f50 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN f51 := f49 <BOOL>
 RETURN
 PROC LABEL WriteBool
  DEF f60 := 0 <INT>
  IPARAM y
  IASM "MOV %r, R0"
  IPARAM (PARAM f61)
  IASM "LDRB R0, %a"
  IASM "SWI 6"
  IPARAM y
  IASM "MOV R0, %r"
 RETURN
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN
 PROC LABEL IntToReal
  DEF f39 := 0.0 <REAL>
  DEF f63 := 0 <INT>
  DEF f64 := FALSE <BOOL>
  DEF f65 := 0 <INT>
  DEF f66 := 0 <INT>
  DEF f67 := 0 <INT>
  DEF f68 := 0 <INT>
  DEF f69 := 0 <INT>
  DEF f70 := 0 <INT>
  DEF f71 := 0 <INT>
  DEF f72 := 0 <INT>
  DEF f73 := 0 <INT>
  DEF f74 := 0 <INT>
  CALL Abs([(PARAM g63) -> f78]<INT>)
  DEF f88 := (RETURN f87) <INT>
  f63 := f88 <INT>
  f68 := f63 <INT>
  DEF f89 := 0 <INT>
  f67 := f89 <INT>
  CALL IntIsNegative([(PARAM g63) -> g12]<INT>)
  DEF g13 := (RETURN g11) <BOOL>
  f64 := g13 <BOOL>
  CALL IntIsZero([f68 -> f46]<INT>)
  DEF g14 := (RETURN f51) <BOOL>
  DEF g15 := TRUE <BOOL>
  IF g14 EQ g15
  THEN IFSTAT_0_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  DEF g16 := 0 <INT>
  f65 := g16 <INT>
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  CALL IntIsZero([f68 -> f46]<INT>)
  CALL IntIsZero([f68 -> f46]<INT>)
  DEF g17 := (RETURN f51) <BOOL>
  DEF g18 := BNOT g17 <BOOL>
  DEF g19 := TRUE <BOOL>
  IF g18 EQ g19
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_1
  IF g18 EQ g19
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILEEND_0_LEVEL_0_1
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_1
  DEF g20 := 1 <INT>
  DEF g21 := f68 IAND g20 <INT>
  f69 := g21 <INT>
  DEF g22 := 1 <INT>
  DEF g23 := f69 EQ g22 <BOOL>
  DEF g24 := TRUE <BOOL>
  IF g23 EQ g24
  THEN IFSTAT_1_SEQ_0_LEVEL_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_1
  f66 := f67 <INT>
  GOTO IFEND_1_LEVEL_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFEND_1_LEVEL_1
  DEF g25 := 1 <INT>
  DEF g26 := f67 IADD g25 <INT>
  f67 := g26 <INT>
  DEF g27 := 1 <INT>
  DEF g28 := f68 IRSHIFT g27 <INT>
  f68 := g28 <INT>
  CALL IntIsZero([f68 -> f46]<INT>)
  CALL IntIsZero([f68 -> f46]<INT>)
  DEF g29 := (RETURN f51) <BOOL>
  DEF g30 := BNOT g29 <BOOL>
  g18 := g30 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_1
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILEEND_0_LEVEL_0_1
  DEF g31 := 23 <INT>
  DEF g32 := f66 GT g31 <BOOL>
  DEF g33 := TRUE <BOOL>
  IF g32 EQ g33
  THEN IFSTAT_2_SEQ_0_LEVEL_1_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_1_0
  DEF g34 := 23 <INT>
  DEF g35 := f66 ISUB g34 <INT>
  DEF g36 := f63 IRSHIFT g35 <INT>
  f63 := g36 <INT>
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_1_0
  DEF g37 := 23 <INT>
  DEF g38 := f66 LT g37 <BOOL>
  DEF g39 := TRUE <BOOL>
  IF g38 EQ g39
  THEN IFSTAT_2_SEQ_1_LEVEL_1_0
  ELSE IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_1_LEVEL_1_0
  DEF g40 := 23 <INT>
  DEF g41 := g40 ISUB f66 <INT>
  DEF g42 := f63 ILSHIFT g41 <INT>
  f63 := g42 <INT>
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFEND_2_LEVEL_1_0
  DEF g43 := f66 IADD (GLOBAL h45) <INT>
  f71 := g43 <INT>
  DEF g47 := 8388607 <INT>
  f73 := g47 <INT>
  DEF g48 := f63 IAND f73 <INT>
  f72 := g48 <INT>
  f65 := f72 <INT>
  DEF g49 := 23 <INT>
  DEF g50 := f71 ILSHIFT g49 <INT>
  DEF g51 := f65 IOR g50 <INT>
  f65 := g51 <INT>
  DEF g52 := TRUE <BOOL>
  IF f64 EQ g52
  THEN IFSTAT_3_SEQ_0_LEVEL_1
  ELSE IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFSTAT_3_SEQ_0_LEVEL_1
  DEF g53 := 1 <INT>
  DEF g54 := 31 <INT>
  DEF g55 := g53 ILSHIFT g54 <INT>
  DEF g56 := f65 IOR g55 <INT>
  f65 := g56 <INT>
  GOTO IFEND_3_LEVEL_1
  LABEL IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFEND_3_LEVEL_1
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_1
  LABEL IFEND_0_LEVEL_0_1
  CALL IntBinaryAsReal([f65 -> g60]<INT>)
  CALL IntBinaryAsReal([f65 -> g60]<INT>)
  DEF g61 := (RETURN g59) <REAL>
  f39 := g61 <REAL>
  DEF RETURN g62 := f39 <REAL>
 RETURN
 PROC LABEL Abs
  DEF f75 := 0 <INT>
  DEF f76 := 0 <INT>
  DEF f77 := (PARAM f78) GE f76 <BOOL>
  DEF f79 := TRUE <BOOL>
  IF f77 EQ f79
  THEN IFSTAT_0_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  f75 := (PARAM f78) <INT>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  CALL INeg([(PARAM f78) -> f82]<INT>)
  DEF f86 := (RETURN f85) <INT>
  f75 := f86 <INT>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  DEF RETURN f87 := f75 <INT>
 RETURN
 PROC LABEL INeg
  DEF f80 := 0 <INT>
  DEF f81 := INOT (PARAM f82) <INT>
  DEF f83 := 1 <INT>
  DEF f84 := f81 IADD f83 <INT>
  f80 := f84 <INT>
  DEF RETURN f85 := f80 <INT>
 RETURN
 PROC LABEL IntIsNegative
  DEF f90 := FALSE <BOOL>
  DEF f91 := 0 <INT>
  DEF f92 := 31 <INT>
  DEF f93 := (PARAM f46) IRSHIFT f92 <INT>
  DEF f94 := 1 <INT>
  DEF f95 := f93 IAND f94 <INT>
  f91 := f95 <INT>
  DEF f96 := 0 <INT>
  DEF f97 := f91 EQ f96 <BOOL>
  DEF f98 := TRUE <BOOL>
  IF f97 EQ f98
  THEN IFSTAT_2_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_0_0
  DEF f99 := FALSE <BOOL>
  f49 := f99 <BOOL>
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_0_0
  DEF g10 := TRUE <BOOL>
  f49 := g10 <BOOL>
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_0_0
  LABEL IFEND_2_LEVEL_0_0
  DEF RETURN g11 := f49 <BOOL>
 RETURN
 PROC LABEL IntBinaryAsReal
  DEF g57 := 0.0 <REAL>
  DEF g58 := 0 <INT>
  IPARAM g68
  IPARAM (PARAM g63)
  IASM "LDR %r, %a"
  IPARAM g68
  IPARAM f39
  IASM "STR %r, %a"
  DEF RETURN g59 := f39 <REAL>
 RETURN
 PROC LABEL RGreaterThanOrEqualTo
  DEF d96 := FALSE <BOOL>
  DEF d97 := FALSE <BOOL>
  DEF d98 := FALSE <BOOL>
  DEF d99 := FALSE <BOOL>
  DEF e10 := FALSE <BOOL>
  DEF e11 := FALSE <BOOL>
  DEF e12 := FALSE <BOOL>
  DEF e13 := 0 <INT>
  DEF e14 := 0 <INT>
  DEF e15 := 0 <INT>
  DEF e16 := 0 <INT>
  CALL RealIsZero([(PARAM a) -> g80]<REAL>)
  CALL RealIsZero([(PARAM a) -> g80]<REAL>)
  DEF e17 := (RETURN g79) <BOOL>
  b61 := e17 <BOOL>
  CALL RealIsZero([(PARAM b) -> g80]<REAL>)
  CALL RealIsZero([(PARAM b) -> g80]<REAL>)
  DEF e18 := (RETURN g79) <BOOL>
  b62 := e18 <BOOL>
  CALL RealIsNegative([(PARAM a) -> h17]<REAL>)
  CALL RealIsNegative([(PARAM a) -> h17]<REAL>)
  DEF e19 := (RETURN h16) <BOOL>
  b63 := e19 <BOOL>
  CALL RealIsNegative([(PARAM b) -> h17]<REAL>)
  CALL RealIsNegative([(PARAM b) -> h17]<REAL>)
  DEF e20 := (RETURN h16) <BOOL>
  b64 := e20 <BOOL>
  CALL RealIsPositive([(PARAM a) -> h33]<REAL>)
  CALL RealIsPositive([(PARAM a) -> h33]<REAL>)
  DEF e21 := (RETURN h32) <BOOL>
  b65 := e21 <BOOL>
  CALL RealIsPositive([(PARAM b) -> h33]<REAL>)
  CALL RealIsPositive([(PARAM b) -> h33]<REAL>)
  DEF e22 := (RETURN h32) <BOOL>
  b66 := e22 <BOOL>
  DEF e23 := b61 LAND b62 <BOOL>
  DEF e24 := TRUE <BOOL>
  IF e23 EQ e24
  THEN IFSTAT_73_SEQ_0_LEVEL_0
  ELSE IFNEXT_73_SEQ_0_LEVEL_0
  LABEL IFSTAT_73_SEQ_0_LEVEL_0
  DEF e25 := TRUE <BOOL>
  h34 := e25 <BOOL>
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_0_LEVEL_0
  DEF e26 := b63 LAND b62 <BOOL>
  DEF e27 := TRUE <BOOL>
  IF e26 EQ e27
  THEN IFSTAT_73_SEQ_1_LEVEL_0
  ELSE IFNEXT_73_SEQ_1_LEVEL_0
  LABEL IFSTAT_73_SEQ_1_LEVEL_0
  DEF e28 := FALSE <BOOL>
  h34 := e28 <BOOL>
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_1_LEVEL_0
  DEF e29 := b63 LAND b66 <BOOL>
  DEF e30 := TRUE <BOOL>
  IF e29 EQ e30
  THEN IFSTAT_73_SEQ_2_LEVEL_0
  ELSE IFNEXT_73_SEQ_2_LEVEL_0
  LABEL IFSTAT_73_SEQ_2_LEVEL_0
  DEF e31 := FALSE <BOOL>
  h34 := e31 <BOOL>
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_2_LEVEL_0
  DEF e32 := b65 LAND b62 <BOOL>
  DEF e33 := TRUE <BOOL>
  IF e32 EQ e33
  THEN IFSTAT_73_SEQ_3_LEVEL_0
  ELSE IFNEXT_73_SEQ_3_LEVEL_0
  LABEL IFSTAT_73_SEQ_3_LEVEL_0
  DEF e34 := TRUE <BOOL>
  h34 := e34 <BOOL>
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_3_LEVEL_0
  DEF e35 := b65 LAND b64 <BOOL>
  DEF e36 := TRUE <BOOL>
  IF e35 EQ e36
  THEN IFSTAT_73_SEQ_4_LEVEL_0
  ELSE IFNEXT_73_SEQ_4_LEVEL_0
  LABEL IFSTAT_73_SEQ_4_LEVEL_0
  DEF e37 := TRUE <BOOL>
  h34 := e37 <BOOL>
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_4_LEVEL_0
  DEF e38 := b61 LAND b66 <BOOL>
  DEF e39 := TRUE <BOOL>
  IF e38 EQ e39
  THEN IFSTAT_73_SEQ_5_LEVEL_0
  ELSE IFNEXT_73_SEQ_5_LEVEL_0
  LABEL IFSTAT_73_SEQ_5_LEVEL_0
  DEF e40 := FALSE <BOOL>
  h34 := e40 <BOOL>
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_5_LEVEL_0
  DEF e41 := b61 LAND b64 <BOOL>
  DEF e42 := TRUE <BOOL>
  IF e41 EQ e42
  THEN IFSTAT_73_SEQ_6_LEVEL_0
  ELSE IFNEXT_73_SEQ_6_LEVEL_0
  LABEL IFSTAT_73_SEQ_6_LEVEL_0
  DEF e43 := TRUE <BOOL>
  h34 := e43 <BOOL>
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_6_LEVEL_0
  DEF e44 := b63 LAND b64 <BOOL>
  DEF e45 := TRUE <BOOL>
  IF e44 EQ e45
  THEN IFSTAT_73_SEQ_7_LEVEL_0
  ELSE IFNEXT_73_SEQ_7_LEVEL_0
  LABEL IFSTAT_73_SEQ_7_LEVEL_0
  CALL RealExponent([(PARAM a) -> h47]<REAL>)
  CALL RealExponent([(PARAM a) -> h47]<REAL>)
  DEF e46 := (RETURN h46) <INT>
  h48 := e46 <INT>
  CALL RealExponent([(PARAM b) -> h47]<REAL>)
  CALL RealExponent([(PARAM b) -> h47]<REAL>)
  DEF e47 := (RETURN h46) <INT>
  h49 := e47 <INT>
  DEF e48 := h48 LT h49 <BOOL>
  DEF e49 := TRUE <BOOL>
  IF e48 EQ e49
  THEN IFSTAT_74_SEQ_0_LEVEL_1
  ELSE IFNEXT_74_SEQ_0_LEVEL_1
  LABEL IFSTAT_74_SEQ_0_LEVEL_1
  DEF e50 := TRUE <BOOL>
  h34 := e50 <BOOL>
  GOTO IFEND_74_LEVEL_1
  LABEL IFNEXT_74_SEQ_0_LEVEL_1
  DEF e51 := h48 EQ h49 <BOOL>
  DEF e52 := TRUE <BOOL>
  IF e51 EQ e52
  THEN IFSTAT_74_SEQ_1_LEVEL_1
  ELSE IFNEXT_74_SEQ_1_LEVEL_1
  LABEL IFSTAT_74_SEQ_1_LEVEL_1
  CALL RealMantissa([(PARAM a) -> h62]<REAL>)
  CALL RealMantissa([(PARAM a) -> h62]<REAL>)
  DEF e53 := (RETURN h61) <INT>
  b69 := e53 <INT>
  CALL RealMantissa([(PARAM b) -> h62]<REAL>)
  CALL RealMantissa([(PARAM b) -> h62]<REAL>)
  DEF e54 := (RETURN h61) <INT>
  b70 := e54 <INT>
  DEF e55 := b69 LE b70 <BOOL>
  DEF e56 := TRUE <BOOL>
  IF e55 EQ e56
  THEN IFSTAT_75_SEQ_0_LEVEL_2
  ELSE IFNEXT_75_SEQ_0_LEVEL_2
  LABEL IFSTAT_75_SEQ_0_LEVEL_2
  DEF e57 := TRUE <BOOL>
  h34 := e57 <BOOL>
  GOTO IFEND_75_LEVEL_2
  LABEL IFNEXT_75_SEQ_0_LEVEL_2
  DEF e58 := FALSE <BOOL>
  h34 := e58 <BOOL>
  GOTO IFEND_75_LEVEL_2
  LABEL IFNEXT_75_SEQ_1_LEVEL_2
  LABEL IFEND_75_LEVEL_2
  GOTO IFEND_74_LEVEL_1
  LABEL IFNEXT_74_SEQ_1_LEVEL_1
  DEF e59 := FALSE <BOOL>
  h34 := e59 <BOOL>
  GOTO IFEND_74_LEVEL_1
  LABEL IFNEXT_74_SEQ_2_LEVEL_1
  LABEL IFEND_74_LEVEL_1
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_7_LEVEL_0
  DEF e60 := b65 LAND b66 <BOOL>
  DEF e61 := TRUE <BOOL>
  IF e60 EQ e61
  THEN IFSTAT_73_SEQ_8_LEVEL_0
  ELSE IFNEXT_73_SEQ_8_LEVEL_0
  LABEL IFSTAT_73_SEQ_8_LEVEL_0
  CALL RealExponent([(PARAM a) -> h47]<REAL>)
  CALL RealExponent([(PARAM a) -> h47]<REAL>)
  DEF e62 := (RETURN h46) <INT>
  h48 := e62 <INT>
  CALL RealExponent([(PARAM b) -> h47]<REAL>)
  CALL RealExponent([(PARAM b) -> h47]<REAL>)
  DEF e63 := (RETURN h46) <INT>
  h48 := e63 <INT>
  DEF e64 := h48 GT h49 <BOOL>
  DEF e65 := TRUE <BOOL>
  IF e64 EQ e65
  THEN IFSTAT_79_SEQ_0_LEVEL_1
  ELSE IFNEXT_79_SEQ_0_LEVEL_1
  LABEL IFSTAT_79_SEQ_0_LEVEL_1
  DEF e66 := TRUE <BOOL>
  h34 := e66 <BOOL>
  GOTO IFEND_79_LEVEL_1
  LABEL IFNEXT_79_SEQ_0_LEVEL_1
  DEF e67 := h48 EQ h49 <BOOL>
  DEF e68 := TRUE <BOOL>
  IF e67 EQ e68
  THEN IFSTAT_79_SEQ_1_LEVEL_1
  ELSE IFNEXT_79_SEQ_1_LEVEL_1
  LABEL IFSTAT_79_SEQ_1_LEVEL_1
  CALL RealMantissa([(PARAM a) -> h62]<REAL>)
  CALL RealMantissa([(PARAM a) -> h62]<REAL>)
  DEF e69 := (RETURN h61) <INT>
  b69 := e69 <INT>
  CALL RealMantissa([(PARAM b) -> h62]<REAL>)
  CALL RealMantissa([(PARAM b) -> h62]<REAL>)
  DEF e70 := (RETURN h61) <INT>
  b70 := e70 <INT>
  DEF e71 := b69 GE b70 <BOOL>
  DEF e72 := TRUE <BOOL>
  IF e71 EQ e72
  THEN IFSTAT_80_SEQ_0_LEVEL_2
  ELSE IFNEXT_80_SEQ_0_LEVEL_2
  LABEL IFSTAT_80_SEQ_0_LEVEL_2
  DEF e73 := TRUE <BOOL>
  h34 := e73 <BOOL>
  GOTO IFEND_80_LEVEL_2
  LABEL IFNEXT_80_SEQ_0_LEVEL_2
  DEF e74 := FALSE <BOOL>
  h34 := e74 <BOOL>
  GOTO IFEND_80_LEVEL_2
  LABEL IFNEXT_80_SEQ_1_LEVEL_2
  LABEL IFEND_80_LEVEL_2
  GOTO IFEND_79_LEVEL_1
  LABEL IFNEXT_79_SEQ_1_LEVEL_1
  DEF e75 := FALSE <BOOL>
  h34 := e75 <BOOL>
  GOTO IFEND_79_LEVEL_1
  LABEL IFNEXT_79_SEQ_2_LEVEL_1
  LABEL IFEND_79_LEVEL_1
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_8_LEVEL_0
  LABEL IFEND_73_LEVEL_0
  DEF RETURN h63 := h34 <BOOL>
 RETURN
 PROC LABEL RealIsZero
  DEF f49 := FALSE <BOOL>
  DEF g65 := 0 <INT>
  DEF g66 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g80) -> g70]<REAL>)
  DEF g71 := (RETURN g69) <INT>
  g66 := g71 <INT>
  DEF g72 := 2147483647 <INT>
  DEF g73 := g66 IAND g72 <INT>
  g65 := g73 <INT>
  DEF g74 := 0 <INT>
  DEF g75 := g65 EQ g74 <BOOL>
  DEF g76 := TRUE <BOOL>
  IF g75 EQ g76
  THEN IFSTAT_0_SEQ_0_LEVEL_0_2
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_2
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_2
  DEF g77 := TRUE <BOOL>
  f49 := g77 <BOOL>
  GOTO IFEND_0_LEVEL_0_2
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_2
  DEF g78 := FALSE <BOOL>
  f49 := g78 <BOOL>
  GOTO IFEND_0_LEVEL_0_2
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_2
  LABEL IFEND_0_LEVEL_0_2
  DEF RETURN g79 := f49 <BOOL>
 RETURN
 PROC LABEL RealBinaryAsInt
  DEF g67 := 0 <INT>
  DEF g68 := 0.0 <REAL>
  IPARAM g68
  IPARAM (PARAM k)
  IASM "LDR %r, %a"
  IPARAM g68
  IPARAM f39
  IASM "STR %r, %a"
  DEF RETURN g69 := f39 <INT>
 RETURN
 PROC LABEL RealIsNegative
  DEF g81 := FALSE <BOOL>
  DEF g82 := 0 <INT>
  DEF g83 := 0 <INT>
  CALL RealSign([(PARAM g80) -> g93]<REAL>)
  CALL RealSign([(PARAM g80) -> g93]<REAL>)
  DEF g94 := (RETURN g92) <INT>
  f91 := g94 <INT>
  CALL RealBinaryAsInt([(PARAM g80) -> g70]<REAL>)
  CALL RealBinaryAsInt([(PARAM g80) -> g70]<REAL>)
  DEF g95 := (RETURN g69) <INT>
  DEF g96 := 2147483647 <INT>
  DEF g97 := g95 IAND g96 <INT>
  g82 := g97 <INT>
  DEF g98 := 1 <INT>
  DEF g99 := f91 EQ g98 <BOOL>
  CALL IntIsZero([g82 -> f46]<INT>)
  CALL IntIsZero([g82 -> f46]<INT>)
  DEF h10 := (RETURN f51) <BOOL>
  DEF h11 := BNOT h10 <BOOL>
  DEF h12 := g99 LAND h11 <BOOL>
  DEF h13 := TRUE <BOOL>
  IF h12 EQ h13
  THEN IFSTAT_3_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_3_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_3_SEQ_0_LEVEL_0_0
  DEF h14 := TRUE <BOOL>
  f49 := h14 <BOOL>
  GOTO IFEND_3_LEVEL_0_0
  LABEL IFNEXT_3_SEQ_0_LEVEL_0_0
  DEF h15 := FALSE <BOOL>
  f49 := h15 <BOOL>
  GOTO IFEND_3_LEVEL_0_0
  LABEL IFNEXT_3_SEQ_1_LEVEL_0_0
  LABEL IFEND_3_LEVEL_0_0
  DEF RETURN h16 := f49 <BOOL>
 RETURN
 PROC LABEL RealSign
  DEF g84 := 0 <INT>
  DEF g85 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g80) -> g70]<REAL>)
  CALL RealBinaryAsInt([(PARAM g80) -> g70]<REAL>)
  DEF g86 := (RETURN g69) <INT>
  g87 := g86 <INT>
  DEF g88 := 31 <INT>
  DEF g89 := g87 IRSHIFT g88 <INT>
  DEF g90 := 1 <INT>
  DEF g91 := g89 IAND g90 <INT>
  f49 := g91 <INT>
  DEF RETURN g92 := f49 <INT>
 RETURN
 PROC LABEL RealIsPositive
  DEF h18 := FALSE <BOOL>
  DEF g87 := 0 <INT>
  DEF h19 := 0 <INT>
  CALL RealSign([(PARAM g80) -> g93]<REAL>)
  CALL RealSign([(PARAM g80) -> g93]<REAL>)
  DEF h20 := (RETURN g92) <INT>
  f91 := h20 <INT>
  CALL RealBinaryAsInt([(PARAM g80) -> g70]<REAL>)
  CALL RealBinaryAsInt([(PARAM g80) -> g70]<REAL>)
  DEF h21 := (RETURN g69) <INT>
  DEF h22 := 2147483647 <INT>
  DEF h23 := h21 IAND h22 <INT>
  g87 := h23 <INT>
  DEF h24 := 0 <INT>
  DEF h25 := f91 EQ h24 <BOOL>
  CALL IntIsZero([g87 -> f46]<INT>)
  CALL IntIsZero([g87 -> f46]<INT>)
  DEF h26 := (RETURN f51) <BOOL>
  DEF h27 := BNOT h26 <BOOL>
  DEF h28 := h25 LAND h27 <BOOL>
  DEF h29 := TRUE <BOOL>
  IF h28 EQ h29
  THEN IFSTAT_5_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_5_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_5_SEQ_0_LEVEL_0_0
  DEF h30 := TRUE <BOOL>
  f49 := h30 <BOOL>
  GOTO IFEND_5_LEVEL_0_0
  LABEL IFNEXT_5_SEQ_0_LEVEL_0_0
  DEF h31 := FALSE <BOOL>
  f49 := h31 <BOOL>
  GOTO IFEND_5_LEVEL_0_0
  LABEL IFNEXT_5_SEQ_1_LEVEL_0_0
  LABEL IFEND_5_LEVEL_0_0
  DEF RETURN h32 := f49 <BOOL>
 RETURN
 PROC LABEL RealExponent
  DEF h35 := 0 <INT>
  DEF h36 := 0 <INT>
  DEF h37 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g80) -> g70]<REAL>)
  CALL RealBinaryAsInt([(PARAM g80) -> g70]<REAL>)
  DEF h38 := (RETURN g69) <INT>
  g87 := h38 <INT>
  DEF h39 := 23 <INT>
  DEF h40 := g87 IRSHIFT h39 <INT>
  DEF h41 := 255 <INT>
  DEF h42 := h40 IAND h41 <INT>
  h37 := h42 <INT>
  DEF h43 := h37 ISUB (GLOBAL h45) <INT>
  f49 := h43 <INT>
  DEF RETURN h46 := f49 <INT>
 RETURN
 PROC LABEL RealMantissa
  DEF h50 := 0 <INT>
  DEF h51 := 0 <INT>
  DEF h52 := 0 <INT>
  DEF h53 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g80) -> g70]<REAL>)
  CALL RealBinaryAsInt([(PARAM g80) -> g70]<REAL>)
  DEF h54 := (RETURN g69) <INT>
  h51 := h54 <INT>
  DEF h55 := 8388607 <INT>
  DEF h56 := h51 IAND h55 <INT>
  h52 := h56 <INT>
  CALL RealIsZero([(PARAM g80) -> g80]<REAL>)
  CALL RealIsZero([(PARAM g80) -> g80]<REAL>)
  DEF h57 := (RETURN g79) <BOOL>
  DEF h58 := TRUE <BOOL>
  IF h57 EQ h58
  THEN IFSTAT_6_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_6_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0_0
  f49 := h52 <INT>
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_0_LEVEL_0_0
  DEF h59 := 8388608 <INT>
  DEF h60 := h52 IOR h59 <INT>
  f49 := h60 <INT>
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_1_LEVEL_0
  LABEL IFEND_6_LEVEL_0_0
  DEF RETURN h61 := f49 <INT>
 RETURN
