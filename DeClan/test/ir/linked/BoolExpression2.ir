SYMBOL SECTION
 ENTRY f25 CONST INTERNAL a
 ENTRY f27 CONST INTERNAL e
 ENTRY f29 CONST INTERNAL x
 ENTRY f38 INTERNAL RETURN StringAsAddress
 ENTRY f45 INTERNAL PARAM IntIsZero 0
 ENTRY f49 INTERNAL RETURN IntIsZero
 ENTRY f77 INTERNAL PARAM Abs 0
 ENTRY f81 INTERNAL PARAM INeg 0
 ENTRY f84 INTERNAL RETURN INeg
 ENTRY f86 INTERNAL RETURN Abs
 ENTRY f93 INTERNAL PARAM IntIsNegative 0
 ENTRY g11 INTERNAL RETURN IntIsNegative
 ENTRY h44 CONST INTERNAL realBias
 ENTRY g58 INTERNAL RETURN IntBinaryAsReal
 ENTRY g61 INTERNAL RETURN IntToReal
 ENTRY g69 INTERNAL RETURN RealBinaryAsInt
 ENTRY g79 INTERNAL RETURN RealIsZero
 ENTRY g91 INTERNAL RETURN RealSign
 ENTRY h15 INTERNAL RETURN RealIsNegative
 ENTRY h32 INTERNAL RETURN RealIsPositive
 ENTRY h45 INTERNAL RETURN RealExponent
 ENTRY h58 INTERNAL RETURN RealMantissa
 ENTRY h60 INTERNAL RETURN RGreaterThanOrEqualTo
DATA SECTION
 DEF f24 := 0 [INT]
 DEF GLOBAL f25 := f24 [INT]
 DEF f26 := TRUE [BOOL]
 DEF GLOBAL f27 := f26 [BOOL]
 DEF f28 := 1.0 [REAL]
 DEF GLOBAL f29 := f28 [REAL]
 DEF g43 := 127 [INT]
 DEF GLOBAL h44 := g43 [INT]
BSS SECTION
 DEF GLOBAL f30 := FALSE [BOOL]
CODE SECTION
 DEF f31 := "e is " [STRING]
 CALL WriteString((f31 -> f57)[STRING])
 CALL WriteBool(((GLOBAL f27) -> f59)[BOOL])
 CALL WriteLn()
 DEF f60 := BNOT (GLOBAL f27) [BOOL]
 CALL IntToReal(((GLOBAL f25) -> g62)[INT])
 DEF g63 := (RETURN g61) [REAL]
 CALL RGreaterThanOrEqualTo(((GLOBAL f29) -> h61)[REAL], (g63 -> h62)[REAL])
 DEF h63 := (RETURN h60) [BOOL]
 DEF h64 := f60 LOR h63 [BOOL]
 f30 := h64 [BOOL]
 CALL WriteBool(((GLOBAL f30) -> f59)[BOOL])
END
PROC SECTION
 PROC LABEL WriteString
  DEF f32 := 0 [INT]
  DEF f33 := 0 [INT]
  DEF f34 := 0 [INT]
  DEF f35 := 0 [INT]
  CALL StringAsAddress(((PARAM f57) -> f39)[STRING])
  DEF f40 := (RETURN f38) [INT]
  f32 := f40 [INT]
  DEF f41 := 0 [INT]
  f33 := f41 [INT]
  IPARAM f34
  IPARAM f32
  IPARAM f33
  IASM "LDRB %r, [%r, +%r]"
  IPARAM f34
  IPARAM f34
  IASM "STR %r, %a"
  CALL IntIsZero((f34 -> f45)[INT])
  DEF f50 := (RETURN f49) [BOOL]
  DEF f51 := BNOT f50 [BOOL]
  DEF f52 := TRUE [BOOL]
  IF f51 EQ f52
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF f51 EQ f52
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  IPARAM f35
  IASM "MOV %r, R0"
  IPARAM f34
  IASM "MOV R0, %r"
  IASM "SWI 6"
  DEF f53 := 1 [INT]
  DEF f54 := f33 IADD f53 [INT]
  f33 := f54 [INT]
  IPARAM f34
  IPARAM f32
  IPARAM f33
  IASM "LDRB %r, [%r, +%r]"
  IPARAM f34
  IPARAM f34
  IASM "STR %r, %a"
  IPARAM f35
  IASM "MOV R0, %r"
  CALL IntIsZero((f34 -> f45)[INT])
  DEF f55 := (RETURN f49) [BOOL]
  DEF f56 := BNOT f55 [BOOL]
  f51 := f56 [BOOL]
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
 RETURN
 PROC LABEL StringAsAddress
  DEF f36 := 0 [INT]
  DEF f37 := 0 [INT]
  IPARAM f37
  IPARAM (PARAM f39)
  IASM "LDR %r, %a"
  IPARAM f37
  IPARAM f36
  IASM "STR %r, %a"
  DEF RETURN f38 := f36 [INT]
 RETURN
 PROC LABEL IntIsZero
  DEF f42 := FALSE [BOOL]
  DEF f43 := 0 [INT]
  DEF f44 := (PARAM f45) EQ f43 [BOOL]
  DEF f46 := TRUE [BOOL]
  IF f44 EQ f46
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF f47 := TRUE [BOOL]
  f42 := f47 [BOOL]
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF f48 := FALSE [BOOL]
  f42 := f48 [BOOL]
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN f49 := f42 [BOOL]
 RETURN
 PROC LABEL WriteBool
  DEF f58 := 0 [INT]
  IPARAM f58
  IASM "MOV %r, R0"
  IPARAM (PARAM f59)
  IASM "LDRB R0, %a"
  IASM "SWI 6"
  IPARAM f58
  IASM "MOV R0, %r"
 RETURN
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN
 PROC LABEL IntToReal
  DEF f61 := 0.0 [REAL]
  DEF f62 := 0 [INT]
  DEF f63 := FALSE [BOOL]
  DEF f64 := 0 [INT]
  DEF f65 := 0 [INT]
  DEF f66 := 0 [INT]
  DEF f67 := 0 [INT]
  DEF f68 := 0 [INT]
  DEF f69 := 0 [INT]
  DEF f70 := 0 [INT]
  DEF f71 := 0 [INT]
  DEF f72 := 0 [INT]
  DEF f73 := 0 [INT]
  CALL Abs(((PARAM g62) -> f77)[INT])
  DEF f87 := (RETURN f86) [INT]
  f62 := f87 [INT]
  f67 := f62 [INT]
  DEF f88 := 0 [INT]
  f66 := f88 [INT]
  CALL IntIsNegative(((PARAM g62) -> f93)[INT])
  DEF g12 := (RETURN g11) [BOOL]
  f63 := g12 [BOOL]
  CALL IntIsZero((f67 -> f45)[INT])
  DEF g13 := (RETURN f49) [BOOL]
  DEF g14 := TRUE [BOOL]
  IF g13 EQ g14
  THEN IFSTAT_0_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  DEF g15 := 0 [INT]
  f64 := g15 [INT]
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  CALL IntIsZero((f67 -> f45)[INT])
  DEF g16 := (RETURN f49) [BOOL]
  DEF g17 := BNOT g16 [BOOL]
  DEF g18 := TRUE [BOOL]
  IF g17 EQ g18
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_1
  IF g17 EQ g18
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILEEND_0_LEVEL_0_1
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_1
  DEF g19 := 1 [INT]
  DEF g20 := f67 IAND g19 [INT]
  f68 := g20 [INT]
  DEF g21 := 1 [INT]
  DEF g22 := f68 EQ g21 [BOOL]
  DEF g23 := TRUE [BOOL]
  IF g22 EQ g23
  THEN IFSTAT_1_SEQ_0_LEVEL_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_1
  f65 := f66 [INT]
  GOTO IFEND_1_LEVEL_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFEND_1_LEVEL_1
  DEF g24 := 1 [INT]
  DEF g25 := f66 IADD g24 [INT]
  f66 := g25 [INT]
  DEF g26 := 1 [INT]
  DEF g27 := f67 IRSHIFT g26 [INT]
  f67 := g27 [INT]
  CALL IntIsZero((f67 -> f45)[INT])
  DEF g28 := (RETURN f49) [BOOL]
  DEF g29 := BNOT g28 [BOOL]
  g17 := g29 [BOOL]
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_1
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILEEND_0_LEVEL_0_1
  DEF g30 := 23 [INT]
  DEF g31 := f65 GT g30 [BOOL]
  DEF g32 := TRUE [BOOL]
  IF g31 EQ g32
  THEN IFSTAT_2_SEQ_0_LEVEL_1_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_1_0
  DEF g33 := 23 [INT]
  DEF g34 := f65 ISUB g33 [INT]
  DEF g35 := f62 IRSHIFT g34 [INT]
  f62 := g35 [INT]
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_1_0
  DEF g36 := 23 [INT]
  DEF g37 := f65 LT g36 [BOOL]
  DEF g38 := TRUE [BOOL]
  IF g37 EQ g38
  THEN IFSTAT_2_SEQ_1_LEVEL_1_0
  ELSE IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_1_LEVEL_1_0
  DEF g39 := 23 [INT]
  DEF g40 := g39 ISUB f65 [INT]
  DEF g41 := f62 ILSHIFT g40 [INT]
  f62 := g41 [INT]
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFEND_2_LEVEL_1_0
  DEF g42 := f65 IADD h44 [INT]
  f70 := g42 [INT]
  DEF g46 := 8388607 [INT]
  f72 := g46 [INT]
  DEF g47 := f62 IAND f72 [INT]
  f71 := g47 [INT]
  f64 := f71 [INT]
  DEF g48 := 23 [INT]
  DEF g49 := f70 ILSHIFT g48 [INT]
  DEF g50 := f64 IOR g49 [INT]
  f64 := g50 [INT]
  DEF g51 := TRUE [BOOL]
  IF f63 EQ g51
  THEN IFSTAT_3_SEQ_0_LEVEL_1
  ELSE IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFSTAT_3_SEQ_0_LEVEL_1
  DEF g52 := 1 [INT]
  DEF g53 := 31 [INT]
  DEF g54 := g52 ILSHIFT g53 [INT]
  DEF g55 := f64 IOR g54 [INT]
  f64 := g55 [INT]
  GOTO IFEND_3_LEVEL_1
  LABEL IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFEND_3_LEVEL_1
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_1
  LABEL IFEND_0_LEVEL_0_1
  CALL IntBinaryAsReal((f64 -> g59)[INT])
  DEF g60 := (RETURN g58) [REAL]
  f61 := g60 [REAL]
  DEF RETURN g61 := f61 [REAL]
 RETURN
 PROC LABEL Abs
  DEF f74 := 0 [INT]
  DEF f75 := 0 [INT]
  DEF f76 := (PARAM f77) GE f75 [BOOL]
  DEF f78 := TRUE [BOOL]
  IF f76 EQ f78
  THEN IFSTAT_0_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  f74 := (PARAM f77) [INT]
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  CALL INeg(((PARAM f77) -> f81)[INT])
  DEF f85 := (RETURN f84) [INT]
  f74 := f85 [INT]
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  DEF RETURN f86 := f74 [INT]
 RETURN
 PROC LABEL INeg
  DEF f79 := 0 [INT]
  DEF f80 := INOT (PARAM f81) [INT]
  DEF f82 := 1 [INT]
  DEF f83 := f80 IADD f82 [INT]
  f79 := f83 [INT]
  DEF RETURN f84 := f79 [INT]
 RETURN
 PROC LABEL IntIsNegative
  DEF f89 := FALSE [BOOL]
  DEF f90 := 0 [INT]
  DEF f91 := 31 [INT]
  DEF f92 := (PARAM f93) IRSHIFT f91 [INT]
  DEF f94 := 1 [INT]
  DEF f95 := f92 IAND f94 [INT]
  f90 := f95 [INT]
  DEF f96 := 0 [INT]
  DEF f97 := f90 EQ f96 [BOOL]
  DEF f98 := TRUE [BOOL]
  IF f97 EQ f98
  THEN IFSTAT_2_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_0_0
  DEF f99 := FALSE [BOOL]
  f89 := f99 [BOOL]
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_0_0
  DEF g10 := TRUE [BOOL]
  f89 := g10 [BOOL]
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_0_0
  LABEL IFEND_2_LEVEL_0_0
  DEF RETURN g11 := f89 [BOOL]
 RETURN
 PROC LABEL IntBinaryAsReal
  DEF g56 := 0.0 [REAL]
  DEF g57 := 0 [INT]
  IPARAM g57
  IPARAM (PARAM g59)
  IASM "LDR %r, %a"
  IPARAM g57
  IPARAM g56
  IASM "STR %r, %a"
  DEF RETURN g58 := g56 [REAL]
 RETURN
 PROC LABEL RGreaterThanOrEqualTo
  DEF d96 := FALSE [BOOL]
  DEF d97 := FALSE [BOOL]
  DEF d98 := FALSE [BOOL]
  DEF d99 := FALSE [BOOL]
  DEF e10 := FALSE [BOOL]
  DEF e11 := FALSE [BOOL]
  DEF e12 := FALSE [BOOL]
  DEF e13 := 0 [INT]
  DEF e14 := 0 [INT]
  DEF e15 := 0 [INT]
  DEF e16 := 0 [INT]
  CALL RealIsZero(((PARAM h61) -> g80)[REAL])
  DEF e17 := (RETURN g79) [BOOL]
  d97 := e17 [BOOL]
  CALL RealIsZero(((PARAM h62) -> g80)[REAL])
  DEF e18 := (RETURN g79) [BOOL]
  d98 := e18 [BOOL]
  CALL RealIsNegative(((PARAM h61) -> h16)[REAL])
  DEF e19 := (RETURN h15) [BOOL]
  d99 := e19 [BOOL]
  CALL RealIsNegative(((PARAM h62) -> h16)[REAL])
  DEF e20 := (RETURN h15) [BOOL]
  e10 := e20 [BOOL]
  CALL RealIsPositive(((PARAM h61) -> h33)[REAL])
  DEF e21 := (RETURN h32) [BOOL]
  e11 := e21 [BOOL]
  CALL RealIsPositive(((PARAM h62) -> h33)[REAL])
  DEF e22 := (RETURN h32) [BOOL]
  e12 := e22 [BOOL]
  DEF e23 := d97 LAND d98 [BOOL]
  DEF e24 := TRUE [BOOL]
  IF e23 EQ e24
  THEN IFSTAT_73_SEQ_0_LEVEL_0
  ELSE IFNEXT_73_SEQ_0_LEVEL_0
  LABEL IFSTAT_73_SEQ_0_LEVEL_0
  DEF e25 := TRUE [BOOL]
  d96 := e25 [BOOL]
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_0_LEVEL_0
  DEF e26 := d99 LAND d98 [BOOL]
  DEF e27 := TRUE [BOOL]
  IF e26 EQ e27
  THEN IFSTAT_73_SEQ_1_LEVEL_0
  ELSE IFNEXT_73_SEQ_1_LEVEL_0
  LABEL IFSTAT_73_SEQ_1_LEVEL_0
  DEF e28 := FALSE [BOOL]
  d96 := e28 [BOOL]
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_1_LEVEL_0
  DEF e29 := d99 LAND e12 [BOOL]
  DEF e30 := TRUE [BOOL]
  IF e29 EQ e30
  THEN IFSTAT_73_SEQ_2_LEVEL_0
  ELSE IFNEXT_73_SEQ_2_LEVEL_0
  LABEL IFSTAT_73_SEQ_2_LEVEL_0
  DEF e31 := FALSE [BOOL]
  d96 := e31 [BOOL]
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_2_LEVEL_0
  DEF e32 := e11 LAND d98 [BOOL]
  DEF e33 := TRUE [BOOL]
  IF e32 EQ e33
  THEN IFSTAT_73_SEQ_3_LEVEL_0
  ELSE IFNEXT_73_SEQ_3_LEVEL_0
  LABEL IFSTAT_73_SEQ_3_LEVEL_0
  DEF e34 := TRUE [BOOL]
  d96 := e34 [BOOL]
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_3_LEVEL_0
  DEF e35 := e11 LAND e10 [BOOL]
  DEF e36 := TRUE [BOOL]
  IF e35 EQ e36
  THEN IFSTAT_73_SEQ_4_LEVEL_0
  ELSE IFNEXT_73_SEQ_4_LEVEL_0
  LABEL IFSTAT_73_SEQ_4_LEVEL_0
  DEF e37 := TRUE [BOOL]
  d96 := e37 [BOOL]
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_4_LEVEL_0
  DEF e38 := d97 LAND e12 [BOOL]
  DEF e39 := TRUE [BOOL]
  IF e38 EQ e39
  THEN IFSTAT_73_SEQ_5_LEVEL_0
  ELSE IFNEXT_73_SEQ_5_LEVEL_0
  LABEL IFSTAT_73_SEQ_5_LEVEL_0
  DEF e40 := FALSE [BOOL]
  d96 := e40 [BOOL]
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_5_LEVEL_0
  DEF e41 := d97 LAND e10 [BOOL]
  DEF e42 := TRUE [BOOL]
  IF e41 EQ e42
  THEN IFSTAT_73_SEQ_6_LEVEL_0
  ELSE IFNEXT_73_SEQ_6_LEVEL_0
  LABEL IFSTAT_73_SEQ_6_LEVEL_0
  DEF e43 := TRUE [BOOL]
  d96 := e43 [BOOL]
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_6_LEVEL_0
  DEF e44 := d99 LAND e10 [BOOL]
  DEF e45 := TRUE [BOOL]
  IF e44 EQ e45
  THEN IFSTAT_73_SEQ_7_LEVEL_0
  ELSE IFNEXT_73_SEQ_7_LEVEL_0
  LABEL IFSTAT_73_SEQ_7_LEVEL_0
  CALL RealExponent(((PARAM h61) -> h46)[REAL])
  DEF e46 := (RETURN h45) [INT]
  e13 := e46 [INT]
  CALL RealExponent(((PARAM h62) -> h46)[REAL])
  DEF e47 := (RETURN h45) [INT]
  e14 := e47 [INT]
  DEF e48 := e13 LT e14 [BOOL]
  DEF e49 := TRUE [BOOL]
  IF e48 EQ e49
  THEN IFSTAT_74_SEQ_0_LEVEL_1
  ELSE IFNEXT_74_SEQ_0_LEVEL_1
  LABEL IFSTAT_74_SEQ_0_LEVEL_1
  DEF e50 := TRUE [BOOL]
  d96 := e50 [BOOL]
  GOTO IFEND_74_LEVEL_1
  LABEL IFNEXT_74_SEQ_0_LEVEL_1
  DEF e51 := e13 EQ e14 [BOOL]
  DEF e52 := TRUE [BOOL]
  IF e51 EQ e52
  THEN IFSTAT_74_SEQ_1_LEVEL_1
  ELSE IFNEXT_74_SEQ_1_LEVEL_1
  LABEL IFSTAT_74_SEQ_1_LEVEL_1
  CALL RealMantissa(((PARAM h61) -> h59)[REAL])
  DEF e53 := (RETURN h58) [INT]
  e15 := e53 [INT]
  CALL RealMantissa(((PARAM h62) -> h59)[REAL])
  DEF e54 := (RETURN h58) [INT]
  e16 := e54 [INT]
  DEF e55 := e15 LE e16 [BOOL]
  DEF e56 := TRUE [BOOL]
  IF e55 EQ e56
  THEN IFSTAT_75_SEQ_0_LEVEL_2
  ELSE IFNEXT_75_SEQ_0_LEVEL_2
  LABEL IFSTAT_75_SEQ_0_LEVEL_2
  DEF e57 := TRUE [BOOL]
  d96 := e57 [BOOL]
  GOTO IFEND_75_LEVEL_2
  LABEL IFNEXT_75_SEQ_0_LEVEL_2
  DEF e58 := FALSE [BOOL]
  d96 := e58 [BOOL]
  GOTO IFEND_75_LEVEL_2
  LABEL IFNEXT_75_SEQ_1_LEVEL_2
  LABEL IFEND_75_LEVEL_2
  GOTO IFEND_74_LEVEL_1
  LABEL IFNEXT_74_SEQ_1_LEVEL_1
  DEF e59 := FALSE [BOOL]
  d96 := e59 [BOOL]
  GOTO IFEND_74_LEVEL_1
  LABEL IFNEXT_74_SEQ_2_LEVEL_1
  LABEL IFEND_74_LEVEL_1
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_7_LEVEL_0
  DEF e60 := e11 LAND e12 [BOOL]
  DEF e61 := TRUE [BOOL]
  IF e60 EQ e61
  THEN IFSTAT_73_SEQ_8_LEVEL_0
  ELSE IFNEXT_73_SEQ_8_LEVEL_0
  LABEL IFSTAT_73_SEQ_8_LEVEL_0
  CALL RealExponent(((PARAM h61) -> h46)[REAL])
  DEF e62 := (RETURN h45) [INT]
  e13 := e62 [INT]
  CALL RealExponent(((PARAM h62) -> h46)[REAL])
  DEF e63 := (RETURN h45) [INT]
  e13 := e63 [INT]
  DEF e64 := e13 GT e14 [BOOL]
  DEF e65 := TRUE [BOOL]
  IF e64 EQ e65
  THEN IFSTAT_79_SEQ_0_LEVEL_1
  ELSE IFNEXT_79_SEQ_0_LEVEL_1
  LABEL IFSTAT_79_SEQ_0_LEVEL_1
  DEF e66 := TRUE [BOOL]
  d96 := e66 [BOOL]
  GOTO IFEND_79_LEVEL_1
  LABEL IFNEXT_79_SEQ_0_LEVEL_1
  DEF e67 := e13 EQ e14 [BOOL]
  DEF e68 := TRUE [BOOL]
  IF e67 EQ e68
  THEN IFSTAT_79_SEQ_1_LEVEL_1
  ELSE IFNEXT_79_SEQ_1_LEVEL_1
  LABEL IFSTAT_79_SEQ_1_LEVEL_1
  CALL RealMantissa(((PARAM h61) -> h59)[REAL])
  DEF e69 := (RETURN h58) [INT]
  e15 := e69 [INT]
  CALL RealMantissa(((PARAM h62) -> h59)[REAL])
  DEF e70 := (RETURN h58) [INT]
  e16 := e70 [INT]
  DEF e71 := e15 GE e16 [BOOL]
  DEF e72 := TRUE [BOOL]
  IF e71 EQ e72
  THEN IFSTAT_80_SEQ_0_LEVEL_2
  ELSE IFNEXT_80_SEQ_0_LEVEL_2
  LABEL IFSTAT_80_SEQ_0_LEVEL_2
  DEF e73 := TRUE [BOOL]
  d96 := e73 [BOOL]
  GOTO IFEND_80_LEVEL_2
  LABEL IFNEXT_80_SEQ_0_LEVEL_2
  DEF e74 := FALSE [BOOL]
  d96 := e74 [BOOL]
  GOTO IFEND_80_LEVEL_2
  LABEL IFNEXT_80_SEQ_1_LEVEL_2
  LABEL IFEND_80_LEVEL_2
  GOTO IFEND_79_LEVEL_1
  LABEL IFNEXT_79_SEQ_1_LEVEL_1
  DEF e75 := FALSE [BOOL]
  d96 := e75 [BOOL]
  GOTO IFEND_79_LEVEL_1
  LABEL IFNEXT_79_SEQ_2_LEVEL_1
  LABEL IFEND_79_LEVEL_1
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_8_LEVEL_0
  LABEL IFEND_73_LEVEL_0
  DEF RETURN h60 := d96 [BOOL]
 RETURN
 PROC LABEL RealIsZero
  DEF g64 := FALSE [BOOL]
  DEF g65 := 0 [INT]
  DEF g66 := 0 [INT]
  CALL RealBinaryAsInt(((PARAM g80) -> g70)[REAL])
  DEF g71 := (RETURN g69) [INT]
  g66 := g71 [INT]
  DEF g72 := 2147483647 [INT]
  DEF g73 := g66 IAND g72 [INT]
  g65 := g73 [INT]
  DEF g74 := 0 [INT]
  DEF g75 := g65 EQ g74 [BOOL]
  DEF g76 := TRUE [BOOL]
  IF g75 EQ g76
  THEN IFSTAT_0_SEQ_0_LEVEL_0_2
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_2
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_2
  DEF g77 := TRUE [BOOL]
  g64 := g77 [BOOL]
  GOTO IFEND_0_LEVEL_0_2
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_2
  DEF g78 := FALSE [BOOL]
  g64 := g78 [BOOL]
  GOTO IFEND_0_LEVEL_0_2
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_2
  LABEL IFEND_0_LEVEL_0_2
  DEF RETURN g79 := g64 [BOOL]
 RETURN
 PROC LABEL RealBinaryAsInt
  DEF g67 := 0 [INT]
  DEF g68 := 0.0 [REAL]
  IPARAM g68
  IPARAM (PARAM g70)
  IASM "LDR %r, %a"
  IPARAM g68
  IPARAM g67
  IASM "STR %r, %a"
  DEF RETURN g69 := g67 [INT]
 RETURN
 PROC LABEL RealIsNegative
  DEF g81 := FALSE [BOOL]
  DEF g82 := 0 [INT]
  DEF g83 := 0 [INT]
  CALL RealSign(((PARAM h16) -> g92)[REAL])
  DEF g93 := (RETURN g91) [INT]
  g83 := g93 [INT]
  CALL RealBinaryAsInt(((PARAM h16) -> g70)[REAL])
  DEF g94 := (RETURN g69) [INT]
  DEF g95 := 2147483647 [INT]
  DEF g96 := g94 IAND g95 [INT]
  g82 := g96 [INT]
  DEF g97 := 1 [INT]
  DEF g98 := g83 EQ g97 [BOOL]
  CALL IntIsZero((g82 -> f45)[INT])
  DEF g99 := (RETURN f49) [BOOL]
  DEF h10 := BNOT g99 [BOOL]
  DEF h11 := g98 LAND h10 [BOOL]
  DEF h12 := TRUE [BOOL]
  IF h11 EQ h12
  THEN IFSTAT_3_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_3_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_3_SEQ_0_LEVEL_0_0
  DEF h13 := TRUE [BOOL]
  g81 := h13 [BOOL]
  GOTO IFEND_3_LEVEL_0_0
  LABEL IFNEXT_3_SEQ_0_LEVEL_0_0
  DEF h14 := FALSE [BOOL]
  g81 := h14 [BOOL]
  GOTO IFEND_3_LEVEL_0_0
  LABEL IFNEXT_3_SEQ_1_LEVEL_0_0
  LABEL IFEND_3_LEVEL_0_0
  DEF RETURN h15 := g81 [BOOL]
 RETURN
 PROC LABEL RealSign
  DEF g84 := 0 [INT]
  DEF g85 := 0 [INT]
  CALL RealBinaryAsInt(((PARAM g92) -> g70)[REAL])
  DEF g86 := (RETURN g69) [INT]
  g85 := g86 [INT]
  DEF g87 := 31 [INT]
  DEF g88 := g85 IRSHIFT g87 [INT]
  DEF g89 := 1 [INT]
  DEF g90 := g88 IAND g89 [INT]
  g84 := g90 [INT]
  DEF RETURN g91 := g84 [INT]
 RETURN
 PROC LABEL RealIsPositive
  DEF h17 := FALSE [BOOL]
  DEF h18 := 0 [INT]
  DEF h19 := 0 [INT]
  CALL RealSign(((PARAM h33) -> g92)[REAL])
  DEF h20 := (RETURN g91) [INT]
  h19 := h20 [INT]
  CALL RealBinaryAsInt(((PARAM h33) -> g70)[REAL])
  DEF h21 := (RETURN g69) [INT]
  DEF h22 := 2147483647 [INT]
  DEF h23 := h21 IAND h22 [INT]
  h18 := h23 [INT]
  DEF h24 := 0 [INT]
  DEF h25 := h19 EQ h24 [BOOL]
  CALL IntIsZero((h18 -> f45)[INT])
  DEF h26 := (RETURN f49) [BOOL]
  DEF h27 := BNOT h26 [BOOL]
  DEF h28 := h25 LAND h27 [BOOL]
  DEF h29 := TRUE [BOOL]
  IF h28 EQ h29
  THEN IFSTAT_5_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_5_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_5_SEQ_0_LEVEL_0_0
  DEF h30 := TRUE [BOOL]
  h17 := h30 [BOOL]
  GOTO IFEND_5_LEVEL_0_0
  LABEL IFNEXT_5_SEQ_0_LEVEL_0_0
  DEF h31 := FALSE [BOOL]
  h17 := h31 [BOOL]
  GOTO IFEND_5_LEVEL_0_0
  LABEL IFNEXT_5_SEQ_1_LEVEL_0_0
  LABEL IFEND_5_LEVEL_0_0
  DEF RETURN h32 := h17 [BOOL]
 RETURN
 PROC LABEL RealExponent
  DEF h34 := 0 [INT]
  DEF h35 := 0 [INT]
  DEF h36 := 0 [INT]
  CALL RealBinaryAsInt(((PARAM h46) -> g70)[REAL])
  DEF h37 := (RETURN g69) [INT]
  h35 := h37 [INT]
  DEF h38 := 23 [INT]
  DEF h39 := h35 IRSHIFT h38 [INT]
  DEF h40 := 255 [INT]
  DEF h41 := h39 IAND h40 [INT]
  h36 := h41 [INT]
  DEF h42 := h36 ISUB (GLOBAL h44) [INT]
  h34 := h42 [INT]
  DEF RETURN h45 := h34 [INT]
 RETURN
 PROC LABEL RealMantissa
  DEF h47 := 0 [INT]
  DEF h48 := 0 [INT]
  DEF h49 := 0 [INT]
  DEF h50 := 0 [INT]
  CALL RealBinaryAsInt(((PARAM h59) -> g70)[REAL])
  DEF h51 := (RETURN g69) [INT]
  h48 := h51 [INT]
  DEF h52 := 8388607 [INT]
  DEF h53 := h48 IAND h52 [INT]
  h49 := h53 [INT]
  CALL RealIsZero(((PARAM h59) -> g80)[REAL])
  DEF h54 := (RETURN g79) [BOOL]
  DEF h55 := TRUE [BOOL]
  IF h54 EQ h55
  THEN IFSTAT_6_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_6_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0_0
  h47 := h49 [INT]
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_0_LEVEL_0_0
  DEF h56 := 8388608 [INT]
  DEF h57 := h49 IOR h56 [INT]
  h47 := h57 [INT]
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_1_LEVEL_0
  LABEL IFEND_6_LEVEL_0_0
  DEF RETURN h58 := h47 [INT]
 RETURN
