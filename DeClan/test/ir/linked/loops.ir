SYMBOL SECTION
DATA SECTION
 GLOBAL a := 0 [INT]
CODE SECTION
 b := 1 [INT]
 a := b [INT]
 c := 10 [INT]
 LABEL FORBEG_0_LEVEL_0
 IF a LT c THEN FORLOOP_0_LEVEL_0 ELSE FOREND_0_LEVEL_0
 LABEL FORLOOP_0_LEVEL_0
 CALL WriteInt((a -> i5)[INT])
 d := 1 [INT]
 e := a IADD d [INT]
 a := e [INT]
 GOTO FORBEG_0_LEVEL_0
 LABEL FOREND_0_LEVEL_0
 CALL WriteLn()
 f := 1 [INT]
 a := f [INT]
 g := 10 [INT]
 LABEL FORBEG_1_LEVEL_0
 IF a LT g THEN FORLOOP_1_LEVEL_0 ELSE FOREND_1_LEVEL_0
 LABEL FORLOOP_1_LEVEL_0
 CALL WriteInt((a -> i5)[INT])
 h := 2 [INT]
 i := a IADD h [INT]
 a := i [INT]
 GOTO FORBEG_1_LEVEL_0
 LABEL FOREND_1_LEVEL_0
 CALL WriteLn()
 j := 10 [INT]
 a := j [INT]
 k := 1 [INT]
 LABEL FORBEG_2_LEVEL_0
 IF a GT k THEN FORLOOP_2_LEVEL_0 ELSE FOREND_2_LEVEL_0
 LABEL FORLOOP_2_LEVEL_0
 CALL WriteInt((a -> i5)[INT])
 l := 2 [INT]
 CALL INeg((l -> j1)[INT])
 EXTERNAL RETURN j0 := j4 [INT]
 n := a IADD j0 [INT]
 a := n [INT]
 GOTO FORBEG_2_LEVEL_0
 LABEL FOREND_2_LEVEL_0
 CALL WriteLn()
 o := 10 [INT]
 a := o [INT]
 p := 1 [INT]
 LABEL FORBEG_3_LEVEL_0
 IF a GT p THEN FORLOOP_3_LEVEL_0 ELSE FOREND_3_LEVEL_0
 LABEL FORLOOP_3_LEVEL_0
 CALL WriteInt((a -> i5)[INT])
 q := 1 [INT]
 CALL INeg((q -> j1)[INT])
 EXTERNAL RETURN k0 := j4 [INT]
 s := a IADD k0 [INT]
 a := s [INT]
 GOTO FORBEG_3_LEVEL_0
 LABEL FOREND_3_LEVEL_0
 CALL WriteLn()
 t := 1 [INT]
 a := t [INT]
 u := 10 [INT]
 v := a LE u [BOOL]
 IF v EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_0 ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
 LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
 IF v EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_0 ELSE WHILEEND_0_LEVEL_0_0
 LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
 CALL WriteInt((a -> i5)[INT])
 w := 1 [INT]
 x := a IADD w [INT]
 a := x [INT]
 y := 10 [INT]
 z := a LE y [BOOL]
 v := z [BOOL]
 GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
 LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
 LABEL WHILEEND_0_LEVEL_0_0
 CALL WriteLn()
 A := 1 [INT]
 a := A [INT]
 B := 10 [INT]
 C := a LE B [BOOL]
 D := 2 [INT]
 CALL Mod((a -> k2)[INT], (D -> k4)[INT])
 EXTERNAL RETURN k1 := k7 [INT]
 F := 1 [INT]
 G := k1 EQ F [BOOL]
 H := C LAND G [BOOL]
 IF H EQ TRUE THEN WHILESTAT_2_SEQ_0_LEVEL_0_0 ELSE WHILENEXT_2_SEQ_0_LEVEL_0_0
 LABEL WHILECOND_2_SEQ_0_LEVEL_0_0
 IF H EQ TRUE THEN WHILESTAT_2_SEQ_0_LEVEL_0_0 ELSE WHILEEND_2_LEVEL_0_0
 LABEL WHILESTAT_2_SEQ_0_LEVEL_0_0
 CALL WriteInt((a -> i5)[INT])
 I := 1 [INT]
 J := a IADD I [INT]
 a := J [INT]
 K := 10 [INT]
 L := a LE K [BOOL]
 M := 2 [INT]
 CALL Mod((a -> k2)[INT], (M -> k4)[INT])
 EXTERNAL RETURN m0 := k7 [INT]
 O := 1 [INT]
 P := m0 EQ O [BOOL]
 Q := L LAND P [BOOL]
 H := Q [BOOL]
 GOTO WHILECOND_2_SEQ_0_LEVEL_0_0
 LABEL WHILENEXT_2_SEQ_0_LEVEL_0_0
 R := 10 [INT]
 S := a LE R [BOOL]
 IF S EQ TRUE THEN WHILESTAT_2_SEQ_1_LEVEL_0 ELSE WHILENEXT_2_SEQ_1_LEVEL_0
 LABEL WHILECOND_2_SEQ_1_LEVEL_0
 IF S EQ TRUE THEN WHILESTAT_2_SEQ_1_LEVEL_0 ELSE WHILEEND_2_LEVEL_0_0
 LABEL WHILESTAT_2_SEQ_1_LEVEL_0
 T := 1 [INT]
 U := a IADD T [INT]
 a := U [INT]
 V := 10 [INT]
 W := a LE V [BOOL]
 S := W [BOOL]
 GOTO WHILECOND_2_SEQ_1_LEVEL_0
 LABEL WHILENEXT_2_SEQ_1_LEVEL_0
 LABEL WHILEEND_2_LEVEL_0_0
 CALL WriteLn()
 X := 10 [INT]
 a := X [INT]
 Y := 1 [INT]
 Z := a LT Y [BOOL]
 LABEL REPEATBEG_0_LEVEL_0
 IF Z EQ TRUE THEN REPEATEND_0_LEVEL_0 ELSE REPEATLOOP_0_LEVEL_0
 LABEL REPEATLOOP_0_LEVEL_0
 CALL WriteInt((a -> i5)[INT])
 a0 := 2 [INT]
 a1 := a ISUB a0 [INT]
 a := a1 [INT]
 a2 := 1 [INT]
 a3 := a LT a2 [BOOL]
 Z := a3 [BOOL]
 GOTO REPEATBEG_0_LEVEL_0
 LABEL REPEATEND_0_LEVEL_0
 CALL WriteLn()
 a4 := 10 [INT]
 a := a4 [INT]
 a5 := 1 [INT]
 a6 := a GE a5 [BOOL]
 LABEL REPEATBEG_1_LEVEL_0
 IF a6 EQ TRUE THEN REPEATEND_1_LEVEL_0 ELSE REPEATLOOP_1_LEVEL_0
 LABEL REPEATLOOP_1_LEVEL_0
 CALL WriteInt((a -> i5)[INT])
 a7 := 1 [INT]
 a8 := a IADD a7 [INT]
 a := a8 [INT]
 a9 := 1 [INT]
 b0 := a GE a9 [BOOL]
 a6 := b0 [BOOL]
 GOTO REPEATBEG_1_LEVEL_0
 LABEL REPEATEND_1_LEVEL_0
 CALL WriteLn()
END
PROC SECTION
 PROC LABEL WriteInt
  PARAM i8 := i5 [INT]
  i9 := 0 [INT]
  IPARAM i9
  IASM "MOV %r, R0"
  IPARAM i8
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM i9
  IASM "MOV R0, %r"
 RETURN
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN
 PROC LABEL INeg
  PARAM j2 := j1 [INT]
  j9 := 0 [INT]
  j6 := INOT j2 [INT]
  j7 := 1 [INT]
  j8 := j6 IADD j7 [INT]
  j9 := j8 [INT]
  INTERNAL RETURN j4 := j9 [INT]
 RETURN
 PROC LABEL Mod
  PARAM k3 := k2 [INT]
  PARAM k5 := k4 [INT]
  l5 := 0 [INT]
  k9 := 0 [INT]
  l5 := k3 [INT]
  l1 := l5 ISUB k5 [INT]
  l2 := 0 [INT]
  l9 := l1 GE l2 [BOOL]
  IF l9 EQ TRUE THEN WHILESTAT_4_SEQ_0_LEVEL_0_0 ELSE WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_4_SEQ_0_LEVEL_0_0
  IF l9 EQ TRUE THEN WHILESTAT_4_SEQ_0_LEVEL_0_0 ELSE WHILEEND_4_LEVEL_0_0
  LABEL WHILESTAT_4_SEQ_0_LEVEL_0_0
  l4 := l5 ISUB k5 [INT]
  l5 := l4 [INT]
  l6 := l5 ISUB k5 [INT]
  l7 := 0 [INT]
  l8 := l6 GE l7 [BOOL]
  l9 := l8 [BOOL]
  GOTO WHILECOND_4_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_4_LEVEL_0_0
  INTERNAL RETURN k7 := l5 [INT]
 RETURN
