SYMBOL SECTION
 ENTRY f38 INTERNAL PARAM INeg 0
 ENTRY f41 INTERNAL RETURN INeg
DATA SECTION
 DEF GLOBAL f24 := 0 [INT]
BSS SECTION
CODE SECTION
 DEF f25 := 1 [INT]
 f24 := f25 [INT]
 DEF f26 := 10 [INT]
 LABEL FORBEG_0_LEVEL_0
 IF (GLOBAL f24) LT f26
 THEN FORLOOP_0_LEVEL_0
 ELSE FOREND_0_LEVEL_0
 LABEL FORLOOP_0_LEVEL_0
 CALL WriteInt(((GLOBAL f24) -> f28)[INT])
 DEF f29 := 1 [INT]
 GOTO FORBEG_0_LEVEL_0
 LABEL FOREND_0_LEVEL_0
 CALL WriteLn()
 DEF f30 := 1 [INT]
 f24 := f30 [INT]
 DEF f31 := 10 [INT]
 LABEL FORBEG_1_LEVEL_0
 IF (GLOBAL f24) LT f31
 THEN FORLOOP_1_LEVEL_0
 ELSE FOREND_1_LEVEL_0
 LABEL FORLOOP_1_LEVEL_0
 CALL WriteInt(((GLOBAL f24) -> f28)[INT])
 DEF f32 := 2 [INT]
 GOTO FORBEG_1_LEVEL_0
 LABEL FOREND_1_LEVEL_0
 CALL WriteLn()
 DEF f33 := 10 [INT]
 f24 := f33 [INT]
 DEF f34 := 1 [INT]
 LABEL FORBEG_2_LEVEL_0
 IF (GLOBAL f24) GT f34
 THEN FORLOOP_2_LEVEL_0
 ELSE FOREND_2_LEVEL_0
 LABEL FORLOOP_2_LEVEL_0
 CALL WriteInt(((GLOBAL f24) -> f28)[INT])
 DEF f35 := 2 [INT]
 CALL INeg((f35 -> f38)[INT])
 DEF f42 := (RETURN f41) [INT]
 GOTO FORBEG_2_LEVEL_0
 LABEL FOREND_2_LEVEL_0
 CALL WriteLn()
 DEF f43 := 10 [INT]
 f24 := f43 [INT]
 DEF f44 := 1 [INT]
 LABEL FORBEG_3_LEVEL_0
 IF (GLOBAL f24) GT f44
 THEN FORLOOP_3_LEVEL_0
 ELSE FOREND_3_LEVEL_0
 LABEL FORLOOP_3_LEVEL_0
 CALL WriteInt(((GLOBAL f24) -> f28)[INT])
 DEF f45 := 1 [INT]
 CALL INeg((f45 -> f38)[INT])
 DEF f46 := (RETURN f41) [INT]
 GOTO FORBEG_3_LEVEL_0
 LABEL FOREND_3_LEVEL_0
 CALL WriteLn()
 DEF f47 := 1 [INT]
 f24 := f47 [INT]
 DEF f48 := 10 [INT]
 DEF f49 := (GLOBAL f24) LE f48 [BOOL]
 DEF f50 := TRUE [BOOL]
 IF f49 EQ f50
 THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
 ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
 LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
 IF f49 EQ f50
 THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
 ELSE WHILEEND_0_LEVEL_0_0
 LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
 CALL WriteInt(((GLOBAL f24) -> f28)[INT])
 DEF f51 := 1 [INT]
 DEF f52 := (GLOBAL f24) IADD f51 [INT]
 f24 := f52 [INT]
 DEF f53 := 10 [INT]
 DEF f54 := (GLOBAL f24) LE f53 [BOOL]
 f49 := f54 [BOOL]
 GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
 LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
 LABEL WHILEEND_0_LEVEL_0_0
 CALL WriteLn()
 DEF f55 := 1 [INT]
 f24 := f55 [INT]
 DEF f56 := 10 [INT]
 DEF f57 := (GLOBAL f24) LE f56 [BOOL]
 DEF f58 := 2 [INT]
 DEF f59 := (GLOBAL f24) IMOD f58 [INT]
 DEF f60 := 1 [INT]
 DEF f61 := f59 EQ f60 [BOOL]
 DEF f62 := f57 LAND f61 [BOOL]
 DEF f63 := TRUE [BOOL]
 IF f62 EQ f63
 THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
 ELSE WHILENEXT_2_SEQ_0_LEVEL_0_0
 LABEL WHILECOND_2_SEQ_0_LEVEL_0_0
 IF f62 EQ f63
 THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
 ELSE WHILEEND_2_LEVEL_0_0
 LABEL WHILESTAT_2_SEQ_0_LEVEL_0_0
 CALL WriteInt(((GLOBAL f24) -> f28)[INT])
 DEF f64 := 1 [INT]
 DEF f65 := (GLOBAL f24) IADD f64 [INT]
 f24 := f65 [INT]
 DEF f66 := 10 [INT]
 DEF f67 := (GLOBAL f24) LE f66 [BOOL]
 DEF f68 := 2 [INT]
 DEF f69 := (GLOBAL f24) IMOD f68 [INT]
 DEF f70 := 1 [INT]
 DEF f71 := f69 EQ f70 [BOOL]
 DEF f72 := f67 LAND f71 [BOOL]
 f62 := f72 [BOOL]
 GOTO WHILECOND_2_SEQ_0_LEVEL_0_0
 LABEL WHILENEXT_2_SEQ_0_LEVEL_0_0
 DEF f73 := 10 [INT]
 DEF f74 := (GLOBAL f24) LE f73 [BOOL]
 DEF f75 := TRUE [BOOL]
 IF f74 EQ f75
 THEN WHILESTAT_2_SEQ_1_LEVEL_0
 ELSE WHILENEXT_2_SEQ_1_LEVEL_0
 LABEL WHILECOND_2_SEQ_1_LEVEL_0
 IF f74 EQ f75
 THEN WHILESTAT_2_SEQ_1_LEVEL_0
 ELSE WHILEEND_2_LEVEL_0_0
 LABEL WHILESTAT_2_SEQ_1_LEVEL_0
 DEF f76 := 1 [INT]
 DEF f77 := (GLOBAL f24) IADD f76 [INT]
 f24 := f77 [INT]
 DEF f78 := 10 [INT]
 DEF f79 := (GLOBAL f24) LE f78 [BOOL]
 f74 := f79 [BOOL]
 GOTO WHILECOND_2_SEQ_1_LEVEL_0
 LABEL WHILENEXT_2_SEQ_1_LEVEL_0
 LABEL WHILEEND_2_LEVEL_0_0
 CALL WriteLn()
 DEF f80 := 10 [INT]
 f24 := f80 [INT]
 DEF f81 := 1 [INT]
 DEF f82 := (GLOBAL f24) LT f81 [BOOL]
 DEF f83 := TRUE [BOOL]
 LABEL REPEATBEG_0_LEVEL_0
 IF f82 EQ f83
 THEN REPEATEND_0_LEVEL_0
 ELSE REPEATLOOP_0_LEVEL_0
 LABEL REPEATLOOP_0_LEVEL_0
 CALL WriteInt(((GLOBAL f24) -> f28)[INT])
 DEF f84 := 2 [INT]
 DEF f85 := (GLOBAL f24) ISUB f84 [INT]
 f24 := f85 [INT]
 DEF f86 := 1 [INT]
 DEF f87 := (GLOBAL f24) LT f86 [BOOL]
 f82 := f87 [BOOL]
 GOTO REPEATBEG_0_LEVEL_0
 LABEL REPEATEND_0_LEVEL_0
 CALL WriteLn()
 DEF f88 := 10 [INT]
 f24 := f88 [INT]
 DEF f89 := 1 [INT]
 DEF f90 := (GLOBAL f24) GE f89 [BOOL]
 DEF f91 := TRUE [BOOL]
 LABEL REPEATBEG_1_LEVEL_0
 IF f90 EQ f91
 THEN REPEATEND_1_LEVEL_0
 ELSE REPEATLOOP_1_LEVEL_0
 LABEL REPEATLOOP_1_LEVEL_0
 CALL WriteInt(((GLOBAL f24) -> f28)[INT])
 DEF f92 := 1 [INT]
 DEF f93 := (GLOBAL f24) IADD f92 [INT]
 f24 := f93 [INT]
 DEF f94 := 1 [INT]
 DEF f95 := (GLOBAL f24) GE f94 [BOOL]
 f90 := f95 [BOOL]
 GOTO REPEATBEG_1_LEVEL_0
 LABEL REPEATEND_1_LEVEL_0
 CALL WriteLn()
END
PROC SECTION
 PROC LABEL WriteInt
  DEF f27 := 0 [INT]
  IPARAM f27
  IASM "MOV %r, R0"
  IPARAM (PARAM f28)
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM f27
  IASM "MOV R0, %r"
 RETURN
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN
 PROC LABEL INeg
  DEF f36 := 0 [INT]
  DEF f37 := INOT (PARAM f38) [INT]
  DEF f39 := 1 [INT]
  DEF f40 := f37 IADD f39 [INT]
  f36 := f40 [INT]
  DEF RETURN f41 := f36 [INT]
 RETURN
