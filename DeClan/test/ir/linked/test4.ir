SYMBOL SECTION
 ENTRY f28 INTERNAL RETURN ReadInt
 ENTRY f46 INTERNAL PARAM M 0
 ENTRY f52 INTERNAL RETURN M
 ENTRY f41 INTERNAL RETURN F
DATA SECTION
 DEF GLOBAL f23 := 0 [INT]
 DEF GLOBAL f24 := 0 [INT]
 DEF GLOBAL f25 := 0 [INT]
BSS SECTION
CODE SECTION
 CALL ReadInt()
 DEF f29 := (RETURN f28) [INT]
 f23 := f29 [INT]
 DEF f30 := 0 [INT]
 f24 := f30 [INT]
 LABEL FORBEG_0_LEVEL_0
 IF (GLOBAL f24) LT (GLOBAL f23)
 THEN FORLOOP_0_LEVEL_0
 ELSE FOREND_0_LEVEL_0
 LABEL FORLOOP_0_LEVEL_0
 CALL F(((GLOBAL f24) -> f35)[INT])
 DEF f57 := (RETURN f41) [INT]
 f25 := f57 [INT]
 CALL WriteInt(((GLOBAL f25) -> f59)[INT])
 CALL Fact(((GLOBAL f24) -> f64)[INT])
 DEF f72 := (RETURN f70) [INT]
 f25 := f72 [INT]
 CALL WriteInt(((GLOBAL f25) -> f59)[INT])
 CALL WriteLn()
 DEF f73 := 1 [INT]
 GOTO FORBEG_0_LEVEL_0
 LABEL FOREND_0_LEVEL_0
END
PROC SECTION
 PROC LABEL ReadInt
  DEF f26 := 0 [INT]
  DEF f27 := 0 [INT]
  IPARAM f27
  IASM "MOV %r, R0"
  IASM "SWI 3"
  IPARAM f26
  IASM "STR R0, %a"
  IPARAM f27
  IASM "MOV R0, %r"
  DEF RETURN f28 := f26 [INT]
 RETURN
 PROC LABEL F
  DEF f31 := 0 [INT]
  DEF f32 := 0 [INT]
  DEF f33 := 0 [INT]
  DEF f34 := (PARAM f35) EQ f33 [BOOL]
  DEF f36 := TRUE [BOOL]
  IF f34 EQ f36
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF f37 := 1 [INT]
  f32 := f37 [INT]
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF f38 := 1 [INT]
  DEF f39 := (PARAM f35) ISUB f38 [INT]
  CALL F((f39 -> f35)[INT])
  DEF f40 := (RETURN f41) [INT]
  f31 := f40 [INT]
  CALL M((f31 -> f46)[INT])
  DEF f55 := (RETURN f52) [INT]
  f32 := f55 [INT]
  DEF f56 := (PARAM f35) ISUB f32 [INT]
  f32 := f56 [INT]
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN f41 := f32 [INT]
 RETURN
 PROC LABEL M
  DEF f42 := 0 [INT]
  DEF f43 := 0 [INT]
  DEF f44 := 0 [INT]
  DEF f45 := (PARAM f46) EQ f44 [BOOL]
  DEF f47 := TRUE [BOOL]
  IF f45 EQ f47
  THEN IFSTAT_0_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  DEF f48 := 0 [INT]
  f43 := f48 [INT]
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  DEF f49 := 1 [INT]
  DEF f50 := (PARAM f46) ISUB f49 [INT]
  CALL M((f50 -> f46)[INT])
  DEF f51 := (RETURN f52) [INT]
  f42 := f51 [INT]
  CALL F((f42 -> f35)[INT])
  DEF f53 := (RETURN f41) [INT]
  f43 := f53 [INT]
  DEF f54 := (PARAM f46) ISUB f43 [INT]
  f43 := f54 [INT]
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  DEF RETURN f52 := f43 [INT]
 RETURN
 PROC LABEL WriteInt
  DEF f58 := 0 [INT]
  IPARAM f58
  IASM "MOV %r, R0"
  IPARAM (PARAM f59)
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM f58
  IASM "MOV R0, %r"
 RETURN
 PROC LABEL Fact
  DEF f60 := 0 [INT]
  DEF f61 := 0 [INT]
  DEF f62 := 0 [INT]
  DEF f63 := (PARAM f64) EQ f62 [BOOL]
  DEF f65 := TRUE [BOOL]
  IF f63 EQ f65
  THEN IFSTAT_2_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_0_0
  DEF f66 := 1 [INT]
  f61 := f66 [INT]
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_0_0
  DEF f67 := 1 [INT]
  DEF f68 := (PARAM f64) ISUB f67 [INT]
  CALL Fact((f68 -> f64)[INT])
  DEF f69 := (RETURN f70) [INT]
  f60 := f69 [INT]
  DEF f71 := (PARAM f64) IMUL f60 [INT]
  f61 := f71 [INT]
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_0_0
  LABEL IFEND_2_LEVEL_0_0
  DEF RETURN f70 := f61 [INT]
 RETURN
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN
