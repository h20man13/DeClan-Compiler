SYMBOL SECTION
DATA SECTION
 DEF GLOBAL f23 := 0 [INT]
 DEF GLOBAL f24 := 0 [INT]
 DEF GLOBAL f25 := 0 [INT]
BSS SECTION
CODE SECTION
 CALL ReadInt()
 DEF f29 := (RETURN f30) [INT]
 f23 := f29 [INT]
 DEF f31 := 0 [INT]
 f24 := f31 [INT]
 LABEL FORBEG_0_LEVEL_0
 IF (GLOBAL f24) LT (GLOBAL f23)
 THEN FORLOOP_0_LEVEL_0
 ELSE FOREND_0_LEVEL_0
 LABEL FORLOOP_0_LEVEL_0
 CALL F(((GLOBAL f24) -> f36)[INT])
 DEF f58 := (RETURN f42) [INT]
 f25 := f58 [INT]
 CALL WriteInt(((GLOBAL f25) -> f74)[INT])
 CALL Fact(((GLOBAL f24) -> f65)[INT])
 DEF f73 := (RETURN f71) [INT]
 f25 := f73 [INT]
 CALL WriteInt(((GLOBAL f25) -> f74)[INT])
 CALL WriteLn()
 DEF f75 := 1 [INT]
 GOTO FORBEG_0_LEVEL_0
 LABEL FOREND_0_LEVEL_0
END
PROC SECTION
 PROC LABEL ReadInt
  DEF f26 := 0 [INT]
  DEF f27 := 0 [INT]
  IPARAM f27
  IASM "MOV %r, R0"
  IASM "SWI 3"
  IPARAM f26
  IASM "STR R0, %a"
  IPARAM f27
  IASM "MOV R0, %r"
  DEF RETURN f28 := f26 [INT]
 RETURN
 PROC LABEL F
  DEF f32 := 0 [INT]
  DEF f33 := 0 [INT]
  DEF f34 := 0 [INT]
  DEF f35 := (PARAM f36) EQ f34 [BOOL]
  DEF f37 := TRUE [BOOL]
  IF f35 EQ f37
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF f38 := 1 [INT]
  f33 := f38 [INT]
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF f39 := 1 [INT]
  DEF f40 := (PARAM f36) ISUB f39 [INT]
  CALL F((f40 -> f36)[INT])
  DEF f41 := (RETURN f42) [INT]
  f32 := f41 [INT]
  CALL M((f32 -> f47)[INT])
  DEF f56 := (RETURN f53) [INT]
  f33 := f56 [INT]
  DEF f57 := (PARAM f36) ISUB f33 [INT]
  f33 := f57 [INT]
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN f42 := f33 [INT]
 RETURN
 PROC LABEL M
  DEF f43 := 0 [INT]
  DEF f44 := 0 [INT]
  DEF f45 := 0 [INT]
  DEF f46 := (PARAM f47) EQ f45 [BOOL]
  DEF f48 := TRUE [BOOL]
  IF f46 EQ f48
  THEN IFSTAT_0_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  DEF f49 := 0 [INT]
  f44 := f49 [INT]
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  DEF f50 := 1 [INT]
  DEF f51 := (PARAM f47) ISUB f50 [INT]
  CALL M((f51 -> f47)[INT])
  DEF f52 := (RETURN f53) [INT]
  f43 := f52 [INT]
  CALL F((f43 -> f36)[INT])
  DEF f54 := (RETURN f42) [INT]
  f44 := f54 [INT]
  DEF f55 := (PARAM f47) ISUB f44 [INT]
  f44 := f55 [INT]
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  DEF RETURN f53 := f44 [INT]
 RETURN
 PROC LABEL WriteInt
  DEF f59 := 0 [INT]
  IPARAM f59
  IASM "MOV %r, R0"
  IPARAM (PARAM d)
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM f59
  IASM "MOV R0, %r"
 RETURN
 PROC LABEL Fact
  DEF f61 := 0 [INT]
  DEF f62 := 0 [INT]
  DEF f63 := 0 [INT]
  DEF f64 := (PARAM f65) EQ f63 [BOOL]
  DEF f66 := TRUE [BOOL]
  IF f64 EQ f66
  THEN IFSTAT_2_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_0_0
  DEF f67 := 1 [INT]
  f62 := f67 [INT]
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_0_0
  DEF f68 := 1 [INT]
  DEF f69 := (PARAM f65) ISUB f68 [INT]
  CALL Fact((f69 -> f65)[INT])
  DEF f70 := (RETURN f71) [INT]
  f61 := f70 [INT]
  DEF f72 := (PARAM f65) IMUL f61 [INT]
  f62 := f72 [INT]
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_0_0
  LABEL IFEND_2_LEVEL_0_0
  DEF RETURN f71 := f62 [INT]
 RETURN
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN
