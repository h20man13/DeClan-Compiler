SYMBOL SECTION
 m6 CONST INTERNAL realBias
DATA SECTION
 a := 91.34375 [REAL]
 GLOBAL b := a [REAL]
 c := 0.14453125 [REAL]
 GLOBAL d := c [REAL]
 GLOBAL e := 0.0 [REAL]
 A5 := 127 [INT]
 GLOBAL m6 := A5 [INT]
CODE SECTION
 CALL RDivide((b -> i8)[REAL], (d -> i9)[REAL])
 EXTERNAL RETURN i5 := j0 [REAL]
 e := i5 [REAL]
 CALL WriteReal((e -> B2)[REAL])
END
PROC SECTION
 PROC LABEL RDivide
  PARAM R9 := i8 [REAL]
  PARAM S1 := i9 [REAL]
  O3 := 0.0 [REAL]
  O4 := 0 [INT]
  O5 := 0 [INT]
  O6 := 0 [INT]
  O7 := 0 [INT]
  O8 := 0 [INT]
  O9 := 0 [INT]
  P0 := 0 [INT]
  P1 := 0 [INT]
  P2 := 0 [INT]
  P3 := 0 [INT]
  P4 := 0 [INT]
  P5 := 0 [INT]
  P6 := 0 [INT]
  P7 := 0 [INT]
  P8 := 0 [INT]
  P9 := 0 [INT]
  Q0 := 0 [INT]
  Q1 := 0 [INT]
  Q2 := 0 [INT]
  Q3 := 0 [INT]
  Q4 := 0 [INT]
  Q5 := 0 [INT]
  Q6 := 0 [INT]
  Q7 := 0 [INT]
  Q8 := 0 [INT]
  Q9 := 0 [INT]
  R0 := 0 [INT]
  R1 := 0 [INT]
  R2 := 0 [INT]
  R3 := 0 [INT]
  R4 := 0 [INT]
  R5 := 0 [INT]
  R6 := 0 [INT]
  R7 := 0 [INT]
  R8 := 0 [INT]
  CALL RealSign((R9 -> j1)[REAL])
  EXTERNAL RETURN S0 := j4 [INT]
  O5 := S0 [INT]
  CALL RealSign((S1 -> j1)[REAL])
  EXTERNAL RETURN S2 := j4 [INT]
  O6 := S2 [INT]
  CALL RealExponent((R9 -> l0)[REAL])
  EXTERNAL RETURN S3 := l3 [INT]
  O7 := S3 [INT]
  CALL RealExponent((S1 -> l0)[REAL])
  EXTERNAL RETURN S4 := l3 [INT]
  O8 := S4 [INT]
  CALL RealMantissa((R9 -> m8)[REAL])
  EXTERNAL RETURN S5 := n1 [INT]
  O9 := S5 [INT]
  CALL RealMantissa((S1 -> m8)[REAL])
  EXTERNAL RETURN S6 := n1 [INT]
  P0 := S6 [INT]
  S7 := 30 [INT]
  S8 := 23 [INT]
  S9 := S7 ISUB S8 [INT]
  Q0 := S9 [INT]
  T0 := O9 ILSHIFT Q0 [INT]
  O9 := T0 [INT]
  T1 := 0 [INT]
  P4 := T1 [INT]
  P6 := P0 [INT]
  T2 := 1 [INT]
  T3 := P6 IAND T2 [INT]
  T4 := 0 [INT]
  T5 := T3 EQ T4 [BOOL]
  IF T5 EQ TRUE THEN WHILESTAT_18_SEQ_0_LEVEL_0 ELSE WHILENEXT_18_SEQ_0_LEVEL_0
  LABEL WHILECOND_18_SEQ_0_LEVEL_0
  IF T5 EQ TRUE THEN WHILESTAT_18_SEQ_0_LEVEL_0 ELSE WHILEEND_18_LEVEL_0
  LABEL WHILESTAT_18_SEQ_0_LEVEL_0
  T6 := 1 [INT]
  T7 := P6 IRSHIFT T6 [INT]
  P6 := T7 [INT]
  T8 := 1 [INT]
  T9 := P4 IADD T8 [INT]
  P4 := T9 [INT]
  U0 := 1 [INT]
  U1 := P6 IAND U0 [INT]
  U2 := 0 [INT]
  U3 := U1 EQ U2 [BOOL]
  T5 := U3 [BOOL]
  GOTO WHILECOND_18_SEQ_0_LEVEL_0
  LABEL WHILENEXT_18_SEQ_0_LEVEL_0
  LABEL WHILEEND_18_LEVEL_0
  P7 := P4 [INT]
  Q0 := P7 [INT]
  U4 := P0 IRSHIFT Q0 [INT]
  P0 := U4 [INT]
  U5 := 0 [INT]
  P4 := U5 [INT]
  P6 := P0 [INT]
  CALL IntIsZero((P6 -> q1)[INT])
  EXTERNAL RETURN U6 := q4 [BOOL]
  U7 := BNOT U6 [BOOL]
  IF U7 EQ TRUE THEN WHILESTAT_20_SEQ_0_LEVEL_0 ELSE WHILENEXT_20_SEQ_0_LEVEL_0
  LABEL WHILECOND_20_SEQ_0_LEVEL_0
  IF U7 EQ TRUE THEN WHILESTAT_20_SEQ_0_LEVEL_0 ELSE WHILEEND_20_LEVEL_0
  LABEL WHILESTAT_20_SEQ_0_LEVEL_0
  U8 := 1 [INT]
  U9 := P6 IAND U8 [INT]
  P5 := U9 [INT]
  V0 := 1 [INT]
  V1 := P5 EQ V0 [BOOL]
  IF V1 EQ TRUE THEN IFSTAT_28_SEQ_0_LEVEL_0 ELSE IFNEXT_28_SEQ_0_LEVEL_0
  LABEL IFSTAT_28_SEQ_0_LEVEL_0
  P8 := P4 [INT]
  GOTO IFEND_28_LEVEL_0
  LABEL IFNEXT_28_SEQ_0_LEVEL_0
  LABEL IFEND_28_LEVEL_0
  V2 := 1 [INT]
  V3 := P4 IADD V2 [INT]
  P4 := V3 [INT]
  V4 := 1 [INT]
  V5 := P6 IRSHIFT V4 [INT]
  P6 := V5 [INT]
  CALL IntIsZero((P6 -> q1)[INT])
  EXTERNAL RETURN V6 := q4 [BOOL]
  V7 := BNOT V6 [BOOL]
  U7 := V7 [BOOL]
  GOTO WHILECOND_20_SEQ_0_LEVEL_0
  LABEL WHILENEXT_20_SEQ_0_LEVEL_0
  LABEL WHILEEND_20_LEVEL_0
  P9 := P8 [INT]
  V8 := O7 ISUB P9 [INT]
  O7 := V8 [INT]
  V9 := O8 ISUB P9 [INT]
  O8 := V9 [INT]
  W0 := 30 [INT]
  W1 := W0 ISUB P9 [INT]
  Q6 := W1 [INT]
  Q7 := Q6 [INT]
  W2 := O5 NE O6 [BOOL]
  IF W2 EQ TRUE THEN IFSTAT_29_SEQ_0_LEVEL_0 ELSE IFNEXT_29_SEQ_0_LEVEL_0
  LABEL IFSTAT_29_SEQ_0_LEVEL_0
  W3 := 1 [INT]
  P1 := W3 [INT]
  GOTO IFEND_29_LEVEL_0
  LABEL IFNEXT_29_SEQ_0_LEVEL_0
  W4 := 0 [INT]
  P1 := W4 [INT]
  GOTO IFEND_29_LEVEL_0
  LABEL IFNEXT_29_SEQ_1_LEVEL_0
  LABEL IFEND_29_LEVEL_0
  W5 := O7 ISUB O8 [INT]
  P3 := W5 [INT]
  W6 := "Result Exp is: " [STRING]
  CALL WriteString((W6 -> r2)[STRING])
  CALL WriteInt((P3 -> t6)[INT])
  CALL WriteLn()
  CALL Div((O9 -> t9)[INT], (P0 -> u1)[INT])
  EXTERNAL RETURN W7 := u4 [INT]
  P2 := W7 [INT]
  W8 := 23 [INT]
  W9 := Q7 GT W8 [BOOL]
  IF W9 EQ TRUE THEN IFSTAT_30_SEQ_0_LEVEL_0 ELSE IFNEXT_30_SEQ_0_LEVEL_0
  LABEL IFSTAT_30_SEQ_0_LEVEL_0
  X0 := 23 [INT]
  X1 := Q7 ISUB X0 [INT]
  Q1 := X1 [INT]
  X2 := 1 [INT]
  X3 := X2 ILSHIFT Q1 [INT]
  X4 := 1 [INT]
  X5 := X3 ISUB X4 [INT]
  X6 := P2 IAND X5 [INT]
  R6 := X6 [INT]
  X7 := P2 IRSHIFT Q1 [INT]
  P2 := X7 [INT]
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_0_LEVEL_0
  X8 := 23 [INT]
  X9 := Q7 LT X8 [BOOL]
  IF X9 EQ TRUE THEN IFSTAT_30_SEQ_1_LEVEL_0 ELSE IFNEXT_30_SEQ_1_LEVEL_0
  LABEL IFSTAT_30_SEQ_1_LEVEL_0
  Y0 := 23 [INT]
  Y1 := Y0 ISUB Q7 [INT]
  Q1 := Y1 [INT]
  Y2 := P2 ILSHIFT Q1 [INT]
  P2 := Y2 [INT]
  Y3 := 0 [INT]
  R6 := Y3 [INT]
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_1_LEVEL_0
  LABEL IFEND_30_LEVEL_0
  Y4 := 0 [INT]
  Q4 := Y4 [INT]
  Q5 := P2 [INT]
  Y5 := 0 [INT]
  Q2 := Y5 [INT]
  CALL IntIsZero((Q5 -> q1)[INT])
  EXTERNAL RETURN Y6 := q4 [BOOL]
  Y7 := BNOT Y6 [BOOL]
  IF Y7 EQ TRUE THEN WHILESTAT_22_SEQ_0_LEVEL_0 ELSE WHILENEXT_22_SEQ_0_LEVEL_0
  LABEL WHILECOND_22_SEQ_0_LEVEL_0
  IF Y7 EQ TRUE THEN WHILESTAT_22_SEQ_0_LEVEL_0 ELSE WHILEEND_22_LEVEL_0
  LABEL WHILESTAT_22_SEQ_0_LEVEL_0
  Y8 := 1 [INT]
  Y9 := Q5 IAND Y8 [INT]
  Q3 := Y9 [INT]
  Z0 := 1 [INT]
  Z1 := Q3 EQ Z0 [BOOL]
  IF Z1 EQ TRUE THEN IFSTAT_31_SEQ_0_LEVEL_0 ELSE IFNEXT_31_SEQ_0_LEVEL_0
  LABEL IFSTAT_31_SEQ_0_LEVEL_0
  Q2 := Q4 [INT]
  GOTO IFEND_31_LEVEL_0
  LABEL IFNEXT_31_SEQ_0_LEVEL_0
  LABEL IFEND_31_LEVEL_0
  Z2 := 1 [INT]
  Z3 := Q4 IADD Z2 [INT]
  Q4 := Z3 [INT]
  Z4 := 1 [INT]
  Z5 := Q5 IRSHIFT Z4 [INT]
  Q5 := Z5 [INT]
  CALL IntIsZero((Q5 -> q1)[INT])
  EXTERNAL RETURN Z6 := q4 [BOOL]
  Z7 := BNOT Z6 [BOOL]
  Y7 := Z7 [BOOL]
  GOTO WHILECOND_22_SEQ_0_LEVEL_0
  LABEL WHILENEXT_22_SEQ_0_LEVEL_0
  LABEL WHILEEND_22_LEVEL_0
  Z8 := 23 [INT]
  Z9 := Q2 LT Z8 [BOOL]
  IF Z9 EQ TRUE THEN IFSTAT_32_SEQ_0_LEVEL_0 ELSE IFNEXT_32_SEQ_0_LEVEL_0
  LABEL IFSTAT_32_SEQ_0_LEVEL_0
  m6 := 23 [INT]
  a10 := m6 ISUB Q2 [INT]
  Q0 := a10 [INT]
  a11 := P2 ILSHIFT Q0 [INT]
  P2 := a11 [INT]
  a12 := Q1 ISUB Q0 [INT]
  a13 := R6 IRSHIFT a12 [INT]
  a14 := P2 IOR a13 [INT]
  P2 := a14 [INT]
  a15 := P3 ISUB Q0 [INT]
  P3 := a15 [INT]
  GOTO IFEND_32_LEVEL_0
  LABEL IFNEXT_32_SEQ_0_LEVEL_0
  LABEL IFEND_32_LEVEL_0
  a16 := 1 [INT]
  a17 := P2 IADD a16 [INT]
  R1 := a17 [INT]
  a18 := 0 [INT]
  R8 := a18 [INT]
  R0 := P2 [INT]
  a19 := 0 [INT]
  R7 := a19 [INT]
  a20 := 1 [INT]
  a21 := Q1 ISUB a20 [INT]
  a22 := R6 IRSHIFT a21 [INT]
  Q2 := a22 [INT]
  a23 := 1 [INT]
  a24 := Q2 EQ a23 [BOOL]
  IF a24 EQ TRUE THEN IFSTAT_33_SEQ_0_LEVEL_0 ELSE IFNEXT_33_SEQ_0_LEVEL_0
  LABEL IFSTAT_33_SEQ_0_LEVEL_0
  P2 := R1 [INT]
  R6 := R8 [INT]
  GOTO IFEND_33_LEVEL_0
  LABEL IFNEXT_33_SEQ_0_LEVEL_0
  a25 := R2 GT R3 [BOOL]
  IF a25 EQ TRUE THEN IFSTAT_33_SEQ_1_LEVEL_0 ELSE IFNEXT_33_SEQ_1_LEVEL_0
  LABEL IFSTAT_33_SEQ_1_LEVEL_0
  P2 := R0 [INT]
  R6 := R7 [INT]
  GOTO IFEND_33_LEVEL_0
  LABEL IFNEXT_33_SEQ_1_LEVEL_0
  a26 := 1 [INT]
  a27 := R0 IAND a26 [INT]
  R4 := a27 [INT]
  a28 := 1 [INT]
  a29 := R1 IAND a28 [INT]
  R5 := a29 [INT]
  a30 := 0 [INT]
  a31 := R5 EQ a30 [BOOL]
  IF a31 EQ TRUE THEN IFSTAT_34_SEQ_0_LEVEL_1 ELSE IFNEXT_34_SEQ_0_LEVEL_1
  LABEL IFSTAT_34_SEQ_0_LEVEL_1
  P2 := R1 [INT]
  R6 := R8 [INT]
  GOTO IFEND_34_LEVEL_1
  LABEL IFNEXT_34_SEQ_0_LEVEL_1
  P2 := R0 [INT]
  R6 := R7 [INT]
  GOTO IFEND_34_LEVEL_1
  LABEL IFNEXT_34_SEQ_1_LEVEL_1
  LABEL IFEND_34_LEVEL_1
  GOTO IFEND_33_LEVEL_0
  LABEL IFNEXT_33_SEQ_2_LEVEL_0
  LABEL IFEND_33_LEVEL_0
  a32 := "Result Exp before adding Real Bias: " [STRING]
  CALL WriteString((a32 -> r2)[STRING])
  CALL WriteInt((P3 -> t6)[INT])
  CALL WriteLn()
  a34 := P3 IADD m6 [INT]
  P3 := a34 [INT]
  a35 := "Result Exp after adding Real Bias: " [STRING]
  CALL WriteString((a35 -> r2)[STRING])
  CALL WriteInt((P3 -> t6)[INT])
  CALL WriteLn()
  a36 := 255 [INT]
  a37 := P3 IAND a36 [INT]
  a38 := 23 [INT]
  a39 := a37 ILSHIFT a38 [INT]
  O4 := a39 [INT]
  a40 := 31 [INT]
  a41 := P1 ILSHIFT a40 [INT]
  a42 := O4 IOR a41 [INT]
  O4 := a42 [INT]
  a43 := 8388607 [INT]
  a44 := P2 IAND a43 [INT]
  a45 := O4 IOR a44 [INT]
  O4 := a45 [INT]
  CALL IntBinaryAsReal((O4 -> A6)[INT])
  EXTERNAL RETURN a46 := A9 [REAL]
  O3 := a46 [REAL]
  INTERNAL RETURN j0 := O3 [REAL]
 RETURN
 PROC LABEL RealSign
  PARAM j2 := j1 [REAL]
  k9 := 0 [INT]
  k4 := 0 [INT]
  CALL RealBinaryAsInt((j2 -> j8)[REAL])
  EXTERNAL RETURN j7 := k1 [INT]
  k4 := j7 [INT]
  k5 := 31 [INT]
  k6 := k4 IRSHIFT k5 [INT]
  k7 := 1 [INT]
  k8 := k6 IAND k7 [INT]
  k9 := k8 [INT]
  INTERNAL RETURN j4 := k9 [INT]
 RETURN
 PROC LABEL RealBinaryAsInt
  PARAM j9 := j8 [REAL]
  k2 := 0 [INT]
  k3 := 0.0 [REAL]
  IPARAM k3
  IPARAM j9
  IASM "LDR %r, %a"
  IPARAM k3
  IPARAM k2
  IASM "STR %r, %a"
  INTERNAL RETURN k1 := k2 [INT]
 RETURN
 PROC LABEL RealExponent
  PARAM l1 := l0 [REAL]
  m7 := 0 [INT]
  l8 := 0 [INT]
  m3 := 0 [INT]
  CALL RealBinaryAsInt((l1 -> j8)[REAL])
  EXTERNAL RETURN l7 := k1 [INT]
  l8 := l7 [INT]
  l9 := 23 [INT]
  m0 := l8 IRSHIFT l9 [INT]
  m1 := 255 [INT]
  m2 := m0 IAND m1 [INT]
  m3 := m2 [INT]
  m4 := m3 ISUB m6 [INT]
  m7 := m4 [INT]
  INTERNAL RETURN l3 := m7 [INT]
 RETURN
 PROC LABEL RealMantissa
  PARAM m9 := m8 [REAL]
  q0 := 0 [INT]
  n7 := 0 [INT]
  o0 := 0 [INT]
  n5 := 0 [INT]
  CALL RealBinaryAsInt((m9 -> j8)[REAL])
  EXTERNAL RETURN n6 := k1 [INT]
  n7 := n6 [INT]
  n8 := 8388607 [INT]
  n9 := n7 IAND n8 [INT]
  o0 := n9 [INT]
  CALL RealIsZero((m9 -> o1)[REAL])
  EXTERNAL RETURN p6 := o4 [BOOL]
  IF p6 EQ TRUE THEN IFSTAT_6_SEQ_0_LEVEL_0_0 ELSE IFNEXT_6_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0_0
  q0 := o0 [INT]
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_0_LEVEL_0_0
  p8 := 8388608 [INT]
  p9 := o0 IOR p8 [INT]
  q0 := p9 [INT]
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_1_LEVEL_0
  LABEL IFEND_6_LEVEL_0_0
  INTERNAL RETURN n1 := q0 [INT]
 RETURN
 PROC LABEL RealIsZero
  PARAM o2 := o1 [REAL]
  p5 := FALSE [BOOL]
  o9 := 0 [INT]
  o7 := 0 [INT]
  CALL RealBinaryAsInt((o2 -> j8)[REAL])
  EXTERNAL RETURN o8 := k1 [INT]
  o9 := o8 [INT]
  p0 := 0 [INT]
  p1 := o9 EQ p0 [BOOL]
  IF p1 EQ TRUE THEN IFSTAT_0_SEQ_0_LEVEL_0_0 ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  p2 := TRUE [BOOL]
  p5 := p2 [BOOL]
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  p4 := FALSE [BOOL]
  p5 := p4 [BOOL]
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  INTERNAL RETURN o4 := p5 [BOOL]
 RETURN
 PROC LABEL IntIsZero
  PARAM q2 := q1 [INT]
  r1 := FALSE [BOOL]
  q6 := 0 [INT]
  q7 := q2 EQ q6 [BOOL]
  IF q7 EQ TRUE THEN IFSTAT_1_SEQ_0_LEVEL_0_0 ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  q8 := TRUE [BOOL]
  r1 := q8 [BOOL]
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  r0 := FALSE [BOOL]
  r1 := r0 [BOOL]
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  INTERNAL RETURN q4 := r1 [BOOL]
 RETURN
 PROC LABEL WriteString
  PARAM r3 := r2 [STRING]
  s5 := 0 [INT]
  t2 := 0 [INT]
  r6 := 0 [INT]
  r7 := 0 [INT]
  CALL StringAsAddress((r3 -> r9)[STRING])
  EXTERNAL RETURN r8 := s2 [INT]
  s5 := r8 [INT]
  s6 := 0 [INT]
  t2 := s6 [INT]
  IPARAM r6
  IPARAM s5
  IPARAM t2
  IASM "LDRB %r, [%r, +%r]"
  IPARAM r6
  IPARAM r6
  IASM "STR %r, %a"
  CALL IntIsZero((r6 -> q1)[INT])
  EXTERNAL RETURN s8 := q4 [BOOL]
  t5 := BNOT s8 [BOOL]
  IF t5 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_0 ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF t5 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_0 ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  IPARAM r7
  IASM "MOV %r, R0"
  IPARAM r6
  IASM "MOV R0, %r"
  IASM "SWI 6"
  t0 := 1 [INT]
  t1 := t2 IADD t0 [INT]
  t2 := t1 [INT]
  IPARAM r6
  IPARAM s5
  IPARAM t2
  IASM "LDRB %r, [%r, +%r]"
  IPARAM r6
  IPARAM r6
  IASM "STR %r, %a"
  IPARAM r7
  IASM "MOV R0, %r"
  CALL IntIsZero((r6 -> q1)[INT])
  EXTERNAL RETURN t3 := q4 [BOOL]
  t4 := BNOT t3 [BOOL]
  t5 := t4 [BOOL]
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
 RETURN
 PROC LABEL StringAsAddress
  PARAM s0 := r9 [STRING]
  s3 := 0 [INT]
  s4 := 0 [INT]
  IPARAM s4
  IPARAM s0
  IASM "LDR %r, %a"
  IPARAM s4
  IPARAM s3
  IASM "STR %r, %a"
  INTERNAL RETURN s2 := s3 [INT]
 RETURN
 PROC LABEL WriteInt
  PARAM t7 := t6 [INT]
  t8 := 0 [INT]
  IPARAM t8
  IASM "MOV %r, R0"
  IPARAM t7
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM t8
  IASM "MOV R0, %r"
 RETURN
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN
 PROC LABEL Div
  PARAM u0 := t9 [INT]
  PARAM u2 := u1 [INT]
  u5 := 0 [INT]
  z6 := 0 [INT]
  x7 := 0 [INT]
  w6 := 0 [INT]
  w3 := 0 [INT]
  w9 := 0 [INT]
  A1 := 0 [INT]
  y7 := 0 [INT]
  z8 := 0 [INT]
  x7 := u0 [INT]
  v5 := 0 [INT]
  w9 := v5 [INT]
  v7 := 0 [INT]
  w6 := v7 [INT]
  CALL IntIsZero((x7 -> q1)[INT])
  EXTERNAL RETURN v9 := q4 [BOOL]
  x5 := BNOT v9 [BOOL]
  IF x5 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_1 ELSE WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_1
  IF x5 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_1 ELSE WHILEEND_0_LEVEL_0_1
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_1
  w1 := 1 [INT]
  w2 := x7 IAND w1 [INT]
  w3 := w2 [INT]
  w4 := 1 [INT]
  w5 := w3 EQ w4 [BOOL]
  IF w5 EQ TRUE THEN IFSTAT_0_SEQ_0_LEVEL_0_1 ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  w6 := w9 [INT]
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFEND_0_LEVEL_0_1
  w7 := 1 [INT]
  w8 := w9 IADD w7 [INT]
  w9 := w8 [INT]
  x0 := 1 [INT]
  x1 := x7 IRSHIFT x0 [INT]
  x7 := x1 [INT]
  CALL IntIsZero((x7 -> q1)[INT])
  EXTERNAL RETURN x3 := q4 [BOOL]
  x4 := BNOT x3 [BOOL]
  x5 := x4 [BOOL]
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_1
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILEEND_0_LEVEL_0_1
  A1 := w6 [INT]
  x7 := u0 [INT]
  x8 := 0 [INT]
  z8 := x8 [INT]
  y0 := 0 [INT]
  z6 := y0 [INT]
  y2 := 0 [INT]
  A4 := A1 GE y2 [BOOL]
  IF A4 EQ TRUE THEN WHILESTAT_2_SEQ_0_LEVEL_0_0 ELSE WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_2_SEQ_0_LEVEL_0_0
  IF A4 EQ TRUE THEN WHILESTAT_2_SEQ_0_LEVEL_0_0 ELSE WHILEEND_2_LEVEL_0_0
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0_0
  y4 := x7 IRSHIFT A1 [INT]
  y5 := 1 [INT]
  y6 := y4 IAND y5 [INT]
  y7 := y6 [INT]
  y8 := 1 [INT]
  y9 := z8 ILSHIFT y8 [INT]
  z0 := y9 IOR y7 [INT]
  z8 := z0 [INT]
  z2 := z8 GE u2 [BOOL]
  IF z2 EQ TRUE THEN IFSTAT_1_SEQ_0_LEVEL_0_1 ELSE IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_1
  z3 := 1 [INT]
  z4 := z3 ILSHIFT A1 [INT]
  z5 := z6 IOR z4 [INT]
  z6 := z5 [INT]
  z7 := z8 ISUB u2 [INT]
  z8 := z7 [INT]
  GOTO IFEND_1_LEVEL_0_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFEND_1_LEVEL_0_1
  z9 := 1 [INT]
  A0 := A1 ISUB z9 [INT]
  A1 := A0 [INT]
  A2 := 0 [INT]
  A3 := A1 GE A2 [BOOL]
  A4 := A3 [BOOL]
  GOTO WHILECOND_2_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_2_LEVEL_0_0
  INTERNAL RETURN u4 := z6 [INT]
 RETURN
 PROC LABEL IntBinaryAsReal
  PARAM A7 := A6 [INT]
  B0 := 0.0 [REAL]
  B1 := 0 [INT]
  IPARAM B1
  IPARAM A7
  IASM "LDR %r, %a"
  IPARAM B1
  IPARAM B0
  IASM "STR %r, %a"
  INTERNAL RETURN A9 := B0 [REAL]
 RETURN
 PROC LABEL WriteReal
  PARAM B3 := B2 [REAL]
  B4 := 0 [INT]
  IPARAM B4
  IASM "MOV %r, R0"
  IPARAM B3
  IASM "LDR R0, %a"
  IASM "SWI 2"
  IPARAM B4
  IASM "MOV R0, %r"
 RETURN
