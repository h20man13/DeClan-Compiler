SYMBOL SECTION
 L2 CONST INTERNAL realBias
DATA SECTION
 l0 := 91.34375 [REAL]
 GLOBAL k9 := l0 [REAL]
 l3 := 0.14453125 [REAL]
 GLOBAL l2 := l3 [REAL]
 GLOBAL M3 := 0.0 [REAL]
 L0 := 127 [INT]
 GLOBAL L2 := L0 [INT]
CODE SECTION
 CALL RDivide((k9 -> L9)[REAL], (l2 -> M0)[REAL])
 EXTERNAL RETURN M4 := M2 [REAL]
 M3 := M4 [REAL]
 CALL WriteReal((M3 -> M8)[REAL])
END
PROC SECTION
 PROC LABEL RDivide
  PARAM X4 := l5 [REAL]
  PARAM X8 := l6 [REAL]
  T8 := 0.0 [REAL]
  T9 := 0 [INT]
  U0 := 0 [INT]
  U1 := 0 [INT]
  U2 := 0 [INT]
  U3 := 0 [INT]
  U4 := 0 [INT]
  U5 := 0 [INT]
  U6 := 0 [INT]
  U7 := 0 [INT]
  U8 := 0 [INT]
  U9 := 0 [INT]
  V0 := 0 [INT]
  V1 := 0 [INT]
  V2 := 0 [INT]
  V3 := 0 [INT]
  V4 := 0 [INT]
  V5 := 0 [INT]
  V6 := 0 [INT]
  V7 := 0 [INT]
  V8 := 0 [INT]
  V9 := 0 [INT]
  W0 := 0 [INT]
  W1 := 0 [INT]
  W2 := 0 [INT]
  W3 := 0 [INT]
  W4 := 0 [INT]
  W5 := 0 [INT]
  W6 := 0 [INT]
  W7 := 0 [INT]
  W8 := 0 [INT]
  W9 := 0 [INT]
  X0 := 0 [INT]
  X1 := 0 [INT]
  X2 := 0 [INT]
  X3 := 0 [INT]
  CALL RealSign((X4 -> X5)[REAL])
  EXTERNAL RETURN X7 := X6 [INT]
  U0 := X7 [INT]
  CALL RealSign((X8 -> X9)[REAL])
  EXTERNAL RETURN Y1 := Y0 [INT]
  U1 := Y1 [INT]
  CALL RealExponent((X4 -> Y2)[REAL])
  EXTERNAL RETURN Y4 := Y3 [INT]
  U2 := Y4 [INT]
  CALL RealExponent((X8 -> Y5)[REAL])
  EXTERNAL RETURN Y7 := Y6 [INT]
  U3 := Y7 [INT]
  CALL RealMantissa((X4 -> Y8)[REAL])
  EXTERNAL RETURN Z0 := Y9 [INT]
  U4 := Z0 [INT]
  CALL RealMantissa((X8 -> Z1)[REAL])
  EXTERNAL RETURN Z3 := Z2 [INT]
  U5 := Z3 [INT]
  Z4 := 30 [INT]
  Z5 := 23 [INT]
  Z6 := Z4 ISUB Z5 [INT]
  V5 := Z6 [INT]
  Z7 := U4 ILSHIFT V5 [INT]
  U4 := Z7 [INT]
  Z8 := 0 [INT]
  U9 := Z8 [INT]
  V1 := U5 [INT]
  Z9 := 1 [INT]
  v6 := V1 IAND Z9 [INT]
  a10 := 0 [INT]
  a11 := v6 EQ a10 [BOOL]
  IF a11 EQ TRUE THEN WHILESTAT_18_SEQ_0_LEVEL_0 ELSE WHILENEXT_18_SEQ_0_LEVEL_0
  LABEL WHILECOND_18_SEQ_0_LEVEL_0
  IF a11 EQ TRUE THEN WHILESTAT_18_SEQ_0_LEVEL_0 ELSE WHILEEND_18_LEVEL_0
  LABEL WHILESTAT_18_SEQ_0_LEVEL_0
  a12 := 1 [INT]
  a13 := V1 IRSHIFT a12 [INT]
  V1 := a13 [INT]
  a14 := 1 [INT]
  a15 := U9 IADD a14 [INT]
  U9 := a15 [INT]
  a16 := 1 [INT]
  a17 := V1 IAND a16 [INT]
  a18 := 0 [INT]
  a19 := a17 EQ a18 [BOOL]
  a11 := a19 [BOOL]
  GOTO WHILECOND_18_SEQ_0_LEVEL_0
  LABEL WHILENEXT_18_SEQ_0_LEVEL_0
  LABEL WHILEEND_18_LEVEL_0
  V2 := U9 [INT]
  V5 := V2 [INT]
  a20 := U5 IRSHIFT V5 [INT]
  U5 := a20 [INT]
  a21 := 0 [INT]
  U9 := a21 [INT]
  V1 := U5 [INT]
  CALL IntIsZero((V1 -> a22)[INT])
  EXTERNAL RETURN a24 := a23 [BOOL]
  a25 := BNOT a24 [BOOL]
  IF a25 EQ TRUE THEN WHILESTAT_20_SEQ_0_LEVEL_0 ELSE WHILENEXT_20_SEQ_0_LEVEL_0
  LABEL WHILECOND_20_SEQ_0_LEVEL_0
  IF a25 EQ TRUE THEN WHILESTAT_20_SEQ_0_LEVEL_0 ELSE WHILEEND_20_LEVEL_0
  LABEL WHILESTAT_20_SEQ_0_LEVEL_0
  a26 := 1 [INT]
  a27 := V1 IAND a26 [INT]
  V0 := a27 [INT]
  a28 := 1 [INT]
  a29 := V0 EQ a28 [BOOL]
  IF a29 EQ TRUE THEN IFSTAT_28_SEQ_0_LEVEL_0 ELSE IFNEXT_28_SEQ_0_LEVEL_0
  LABEL IFSTAT_28_SEQ_0_LEVEL_0
  V3 := U9 [INT]
  GOTO IFEND_28_LEVEL_0
  LABEL IFNEXT_28_SEQ_0_LEVEL_0
  LABEL IFEND_28_LEVEL_0
  a30 := 1 [INT]
  a31 := U9 IADD a30 [INT]
  U9 := a31 [INT]
  a32 := 1 [INT]
  a33 := V1 IRSHIFT a32 [INT]
  V1 := a33 [INT]
  CALL IntIsZero((V1 -> a34)[INT])
  EXTERNAL RETURN a36 := a35 [BOOL]
  a37 := BNOT a36 [BOOL]
  a25 := a37 [BOOL]
  GOTO WHILECOND_20_SEQ_0_LEVEL_0
  LABEL WHILENEXT_20_SEQ_0_LEVEL_0
  LABEL WHILEEND_20_LEVEL_0
  V4 := V3 [INT]
  a38 := U2 ISUB V4 [INT]
  U2 := a38 [INT]
  a39 := U3 ISUB V4 [INT]
  U3 := a39 [INT]
  a40 := 30 [INT]
  a41 := a40 ISUB V4 [INT]
  W1 := a41 [INT]
  W2 := W1 [INT]
  a42 := U0 NE U1 [BOOL]
  IF a42 EQ TRUE THEN IFSTAT_29_SEQ_0_LEVEL_0 ELSE IFNEXT_29_SEQ_0_LEVEL_0
  LABEL IFSTAT_29_SEQ_0_LEVEL_0
  a43 := 1 [INT]
  U6 := a43 [INT]
  GOTO IFEND_29_LEVEL_0
  LABEL IFNEXT_29_SEQ_0_LEVEL_0
  a44 := 0 [INT]
  U6 := a44 [INT]
  GOTO IFEND_29_LEVEL_0
  LABEL IFNEXT_29_SEQ_1_LEVEL_0
  LABEL IFEND_29_LEVEL_0
  a45 := U2 ISUB U3 [INT]
  U8 := a45 [INT]
  a46 := "Result Exp is: " [STRING]
  CALL WriteString((a46 -> a47)[STRING])
  CALL WriteInt((U8 -> a48)[INT])
  CALL WriteLn()
  CALL Div((U4 -> a49)[INT], (U5 -> a50)[INT])
  EXTERNAL RETURN a52 := a51 [INT]
  U7 := a52 [INT]
  a53 := 23 [INT]
  a54 := W2 GT a53 [BOOL]
  IF a54 EQ TRUE THEN IFSTAT_30_SEQ_0_LEVEL_0 ELSE IFNEXT_30_SEQ_0_LEVEL_0
  LABEL IFSTAT_30_SEQ_0_LEVEL_0
  a55 := 23 [INT]
  a56 := W2 ISUB a55 [INT]
  V6 := a56 [INT]
  a57 := 1 [INT]
  a58 := a57 ILSHIFT V6 [INT]
  a59 := 1 [INT]
  a60 := a58 ISUB a59 [INT]
  a61 := U7 IAND a60 [INT]
  X1 := a61 [INT]
  a62 := U7 IRSHIFT V6 [INT]
  U7 := a62 [INT]
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_0_LEVEL_0
  a63 := 23 [INT]
  a64 := W2 LT a63 [BOOL]
  IF a64 EQ TRUE THEN IFSTAT_30_SEQ_1_LEVEL_0 ELSE IFNEXT_30_SEQ_1_LEVEL_0
  LABEL IFSTAT_30_SEQ_1_LEVEL_0
  a65 := 23 [INT]
  a66 := a65 ISUB W2 [INT]
  V6 := a66 [INT]
  a67 := U7 ILSHIFT V6 [INT]
  U7 := a67 [INT]
  a68 := 0 [INT]
  X1 := a68 [INT]
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_1_LEVEL_0
  LABEL IFEND_30_LEVEL_0
  a69 := 0 [INT]
  V9 := a69 [INT]
  W0 := U7 [INT]
  a70 := 0 [INT]
  V7 := a70 [INT]
  CALL IntIsZero((W0 -> a71)[INT])
  EXTERNAL RETURN a73 := a72 [BOOL]
  a74 := BNOT a73 [BOOL]
  IF a74 EQ TRUE THEN WHILESTAT_22_SEQ_0_LEVEL_0 ELSE WHILENEXT_22_SEQ_0_LEVEL_0
  LABEL WHILECOND_22_SEQ_0_LEVEL_0
  IF a74 EQ TRUE THEN WHILESTAT_22_SEQ_0_LEVEL_0 ELSE WHILEEND_22_LEVEL_0
  LABEL WHILESTAT_22_SEQ_0_LEVEL_0
  a75 := 1 [INT]
  a76 := W0 IAND a75 [INT]
  V8 := a76 [INT]
  a77 := 1 [INT]
  a78 := V8 EQ a77 [BOOL]
  IF a78 EQ TRUE THEN IFSTAT_31_SEQ_0_LEVEL_0 ELSE IFNEXT_31_SEQ_0_LEVEL_0
  LABEL IFSTAT_31_SEQ_0_LEVEL_0
  V7 := V9 [INT]
  GOTO IFEND_31_LEVEL_0
  LABEL IFNEXT_31_SEQ_0_LEVEL_0
  LABEL IFEND_31_LEVEL_0
  a79 := 1 [INT]
  a80 := V9 IADD a79 [INT]
  V9 := a80 [INT]
  a81 := 1 [INT]
  a82 := W0 IRSHIFT a81 [INT]
  W0 := a82 [INT]
  CALL IntIsZero((W0 -> a83)[INT])
  EXTERNAL RETURN a85 := a84 [BOOL]
  a86 := BNOT a85 [BOOL]
  a74 := a86 [BOOL]
  GOTO WHILECOND_22_SEQ_0_LEVEL_0
  LABEL WHILENEXT_22_SEQ_0_LEVEL_0
  LABEL WHILEEND_22_LEVEL_0
  a87 := 23 [INT]
  a88 := V7 LT a87 [BOOL]
  IF a88 EQ TRUE THEN IFSTAT_32_SEQ_0_LEVEL_0 ELSE IFNEXT_32_SEQ_0_LEVEL_0
  LABEL IFSTAT_32_SEQ_0_LEVEL_0
  a89 := 23 [INT]
  a90 := a89 ISUB V7 [INT]
  V5 := a90 [INT]
  a91 := U7 ILSHIFT V5 [INT]
  U7 := a91 [INT]
  a92 := V6 ISUB V5 [INT]
  a93 := X1 IRSHIFT a92 [INT]
  a94 := U7 IOR a93 [INT]
  U7 := a94 [INT]
  a95 := U8 ISUB V5 [INT]
  U8 := a95 [INT]
  GOTO IFEND_32_LEVEL_0
  LABEL IFNEXT_32_SEQ_0_LEVEL_0
  LABEL IFEND_32_LEVEL_0
  a96 := 1 [INT]
  a97 := U7 IADD a96 [INT]
  W6 := a97 [INT]
  a98 := 0 [INT]
  X3 := a98 [INT]
  W5 := U7 [INT]
  a99 := 0 [INT]
  X2 := a99 [INT]
  b10 := 1 [INT]
  b11 := V6 ISUB b10 [INT]
  b12 := X1 IRSHIFT b11 [INT]
  V7 := b12 [INT]
  b13 := 1 [INT]
  b14 := V7 EQ b13 [BOOL]
  IF b14 EQ TRUE THEN IFSTAT_33_SEQ_0_LEVEL_0 ELSE IFNEXT_33_SEQ_0_LEVEL_0
  LABEL IFSTAT_33_SEQ_0_LEVEL_0
  U7 := W6 [INT]
  X1 := X3 [INT]
  GOTO IFEND_33_LEVEL_0
  LABEL IFNEXT_33_SEQ_0_LEVEL_0
  b15 := W7 GT W8 [BOOL]
  IF b15 EQ TRUE THEN IFSTAT_33_SEQ_1_LEVEL_0 ELSE IFNEXT_33_SEQ_1_LEVEL_0
  LABEL IFSTAT_33_SEQ_1_LEVEL_0
  U7 := W5 [INT]
  X1 := X2 [INT]
  GOTO IFEND_33_LEVEL_0
  LABEL IFNEXT_33_SEQ_1_LEVEL_0
  b16 := 1 [INT]
  b17 := W5 IAND b16 [INT]
  W9 := b17 [INT]
  b18 := 1 [INT]
  b19 := W6 IAND b18 [INT]
  X0 := b19 [INT]
  b20 := 0 [INT]
  b21 := X0 EQ b20 [BOOL]
  IF b21 EQ TRUE THEN IFSTAT_34_SEQ_0_LEVEL_1 ELSE IFNEXT_34_SEQ_0_LEVEL_1
  LABEL IFSTAT_34_SEQ_0_LEVEL_1
  U7 := W6 [INT]
  X1 := X3 [INT]
  GOTO IFEND_34_LEVEL_1
  LABEL IFNEXT_34_SEQ_0_LEVEL_1
  U7 := W5 [INT]
  X1 := X2 [INT]
  GOTO IFEND_34_LEVEL_1
  LABEL IFNEXT_34_SEQ_1_LEVEL_1
  LABEL IFEND_34_LEVEL_1
  GOTO IFEND_33_LEVEL_0
  LABEL IFNEXT_33_SEQ_2_LEVEL_0
  LABEL IFEND_33_LEVEL_0
  b22 := "Result Exp before adding Real Bias: " [STRING]
  CALL WriteString((b22 -> b23)[STRING])
  CALL WriteInt((U8 -> b24)[INT])
  CALL WriteLn()
  b25 := U8 IADD L2 [INT]
  U8 := b25 [INT]
  b26 := "Result Exp after adding Real Bias: " [STRING]
  CALL WriteString((b26 -> b27)[STRING])
  CALL WriteInt((U8 -> b28)[INT])
  CALL WriteLn()
  b29 := 255 [INT]
  b30 := U8 IAND b29 [INT]
  b31 := 23 [INT]
  b32 := b30 ILSHIFT b31 [INT]
  T9 := b32 [INT]
  b33 := 31 [INT]
  b34 := U6 ILSHIFT b33 [INT]
  b35 := T9 IOR b34 [INT]
  T9 := b35 [INT]
  b36 := 8388607 [INT]
  b37 := U7 IAND b36 [INT]
  b38 := T9 IOR b37 [INT]
  T9 := b38 [INT]
  CALL IntBinaryAsReal((T9 -> b39)[INT])
  EXTERNAL RETURN b41 := b40 [REAL]
  T8 := b41 [REAL]
  INTERNAL RETURN l7 := T8 [REAL]
 RETURN
 PROC LABEL RealSign
  PARAM l9 := l8 [REAL]
  o1 := 0 [INT]
  n5 := 0 [INT]
  CALL RealBinaryAsInt((l9 -> n0)[REAL])
  EXTERNAL RETURN n1 := e5 [INT]
  n5 := n1 [INT]
  n6 := 31 [INT]
  n9 := n5 IRSHIFT n6 [INT]
  o0 := 1 [INT]
  n8 := n9 IAND o0 [INT]
  o1 := n8 [INT]
  INTERNAL RETURN m1 := o1 [INT]
 RETURN
 PROC LABEL RealBinaryAsInt
  PARAM m5 := m4 [REAL]
  m8 := 0 [INT]
  m9 := 0.0 [REAL]
  IPARAM m9
  IPARAM m5
  IASM "LDR %r, %a"
  IPARAM m9
  IPARAM m8
  IASM "STR %r, %a"
  INTERNAL RETURN m7 := m8 [INT]
 RETURN
 PROC LABEL RealExponent
  PARAM o3 := o2 [REAL]
  q7 := 0 [INT]
  p4 := 0 [INT]
  q2 := 0 [INT]
  CALL RealBinaryAsInt((o3 -> o9)[REAL])
  EXTERNAL RETURN p0 := f6 [INT]
  p4 := p0 [INT]
  p5 := 23 [INT]
  p8 := p4 IRSHIFT p5 [INT]
  p9 := 255 [INT]
  p7 := p8 IAND p9 [INT]
  q2 := p7 [INT]
  q1 := q2 ISUB L2 [INT]
  q7 := q1 [INT]
  INTERNAL RETURN o5 := q7 [INT]
 RETURN
 PROC LABEL RealMantissa
  PARAM q9 := q8 [REAL]
  v5 := 0 [INT]
  s1 := 0 [INT]
  v3 := 0 [INT]
  r5 := 0 [INT]
  CALL RealBinaryAsInt((q9 -> r6)[REAL])
  EXTERNAL RETURN r7 := d4 [INT]
  s1 := r7 [INT]
  s2 := 8388607 [INT]
  s0 := s1 IAND s2 [INT]
  v3 := s0 [INT]
  CALL RealIsZero((q9 -> u7)[REAL])
  EXTERNAL RETURN u9 := s7 [BOOL]
  IF u9 EQ TRUE THEN IFSTAT_6_SEQ_0_LEVEL_0_0 ELSE IFNEXT_6_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0_0
  v5 := v3 [INT]
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_0_LEVEL_0_0
  v4 := 8388608 [INT]
  v2 := v3 IOR v4 [INT]
  v5 := v2 [INT]
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_1_LEVEL_0
  LABEL IFEND_6_LEVEL_0_0
  INTERNAL RETURN r1 := v5 [INT]
 RETURN
 PROC LABEL RealIsZero
  PARAM s5 := u7 [REAL]
  u5 := FALSE [BOOL]
  t8 := 0 [INT]
  t0 := 0 [INT]
  CALL RealBinaryAsInt((s5 -> t1)[REAL])
  EXTERNAL RETURN t5 := t3 [INT]
  t8 := t5 [INT]
  t9 := 0 [INT]
  u0 := t8 EQ t9 [BOOL]
  IF u0 EQ TRUE THEN IFSTAT_0_SEQ_0_LEVEL_0_0 ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  u3 := TRUE [BOOL]
  u5 := u3 [BOOL]
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  u6 := FALSE [BOOL]
  u5 := u6 [BOOL]
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  INTERNAL RETURN s7 := u5 [BOOL]
 RETURN
 PROC LABEL IntIsZero
  PARAM w4 := v7 [INT]
  x0 := FALSE [BOOL]
  w5 := 0 [INT]
  w6 := w4 EQ w5 [BOOL]
  IF w6 EQ TRUE THEN IFSTAT_1_SEQ_0_LEVEL_0_0 ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  w7 := TRUE [BOOL]
  x0 := w7 [BOOL]
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  w9 := FALSE [BOOL]
  x0 := w9 [BOOL]
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  INTERNAL RETURN w0 := x0 [BOOL]
 RETURN
 PROC LABEL WriteString
  PARAM x2 := x1 [STRING]
  y5 := 0 [INT]
  z7 := 0 [INT]
  x5 := 0 [INT]
  x6 := 0 [INT]
  CALL StringAsAddress((x2 -> y3)[STRING])
  EXTERNAL RETURN y4 := s [INT]
  y5 := y4 [INT]
  y6 := 0 [INT]
  z7 := y6 [INT]
  IPARAM x5
  IPARAM y5
  IPARAM z7
  IASM "LDRB %r, [%r, +%r]"
  IPARAM x5
  IPARAM x5
  IASM "STR %r, %a"
  CALL IntIsZero((x5 -> y8)[INT])
  EXTERNAL RETURN y9 := w [BOOL]
  A1 := BNOT y9 [BOOL]
  IF A1 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_0 ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF A1 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_0 ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  IPARAM x6
  IASM "MOV %r, R0"
  IPARAM x5
  IASM "MOV R0, %r"
  IASM "SWI 6"
  z6 := 1 [INT]
  z4 := z7 IADD z6 [INT]
  z7 := z4 [INT]
  IPARAM x5
  IPARAM y5
  IPARAM z7
  IASM "LDRB %r, [%r, +%r]"
  IPARAM x5
  IPARAM x5
  IASM "STR %r, %a"
  IPARAM x6
  IASM "MOV R0, %r"
  CALL IntIsZero((x5 -> z8)[INT])
  EXTERNAL RETURN z9 := C [BOOL]
  A0 := BNOT z9 [BOOL]
  A1 := A0 [BOOL]
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
 RETURN
 PROC LABEL StringAsAddress
  PARAM x8 := x7 [STRING]
  y1 := 0 [INT]
  y2 := 0 [INT]
  IPARAM y2
  IPARAM x8
  IASM "LDR %r, %a"
  IPARAM y2
  IPARAM y1
  IASM "STR %r, %a"
  INTERNAL RETURN y0 := y1 [INT]
 RETURN
 PROC LABEL WriteInt
  PARAM A3 := A2 [INT]
  A4 := 0 [INT]
  IPARAM A4
  IASM "MOV %r, R0"
  IPARAM A3
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM A4
  IASM "MOV R0, %r"
 RETURN
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN
 PROC LABEL Div
  PARAM A6 := A5 [INT]
  PARAM J7 := A7 [INT]
  B1 := 0 [INT]
  J4 := 0 [INT]
  G8 := 0 [INT]
  E0 := 0 [INT]
  D7 := 0 [INT]
  E5 := 0 [INT]
  K6 := 0 [INT]
  I1 := 0 [INT]
  J8 := 0 [INT]
  G8 := A6 [INT]
  C1 := 0 [INT]
  E5 := C1 [INT]
  C3 := 0 [INT]
  E0 := C3 [INT]
  CALL IntIsZero((G8 -> C5)[INT])
  EXTERNAL RETURN C6 := D [BOOL]
  F4 := BNOT C6 [BOOL]
  IF F4 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_1 ELSE WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_1
  IF F4 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_1 ELSE WHILEEND_0_LEVEL_0_1
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_1
  D3 := 1 [INT]
  D1 := G8 IAND D3 [INT]
  D7 := D1 [INT]
  D8 := 1 [INT]
  D9 := D7 EQ D8 [BOOL]
  IF D9 EQ TRUE THEN IFSTAT_0_SEQ_0_LEVEL_0_1 ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  E0 := E5 [INT]
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFEND_0_LEVEL_0_1
  E4 := 1 [INT]
  E2 := E5 IADD E4 [INT]
  E5 := E2 [INT]
  E9 := 1 [INT]
  E7 := G8 IRSHIFT E9 [INT]
  G8 := E7 [INT]
  CALL IntIsZero((G8 -> F1)[INT])
  EXTERNAL RETURN F2 := P [BOOL]
  F3 := BNOT F2 [BOOL]
  F4 := F3 [BOOL]
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_1
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILEEND_0_LEVEL_0_1
  K6 := E0 [INT]
  G8 := A6 [INT]
  F7 := 0 [INT]
  J8 := F7 [INT]
  F9 := 0 [INT]
  J4 := F9 [INT]
  G4 := 0 [INT]
  K8 := K6 GE G4 [BOOL]
  IF K8 EQ TRUE THEN WHILESTAT_2_SEQ_0_LEVEL_0_0 ELSE WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_2_SEQ_0_LEVEL_0_0
  IF K8 EQ TRUE THEN WHILESTAT_2_SEQ_0_LEVEL_0_0 ELSE WHILEEND_2_LEVEL_0_0
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0_0
  H2 := G8 IRSHIFT K6 [INT]
  H3 := 1 [INT]
  H1 := H2 IAND H3 [INT]
  I1 := H1 [INT]
  H8 := 1 [INT]
  I0 := J8 ILSHIFT H8 [INT]
  H9 := I0 IOR I1 [INT]
  J8 := H9 [INT]
  I6 := J8 GE J7 [BOOL]
  IF I6 EQ TRUE THEN IFSTAT_1_SEQ_0_LEVEL_0_1 ELSE IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_1
  I9 := 1 [INT]
  J3 := I9 ILSHIFT K6 [INT]
  J1 := J4 IOR J3 [INT]
  J4 := J1 [INT]
  J5 := J8 ISUB J7 [INT]
  J8 := J5 [INT]
  GOTO IFEND_1_LEVEL_0_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFEND_1_LEVEL_0_1
  K2 := 1 [INT]
  K0 := K6 ISUB K2 [INT]
  K6 := K0 [INT]
  K7 := 0 [INT]
  K5 := K6 GE K7 [BOOL]
  K8 := K5 [BOOL]
  GOTO WHILECOND_2_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_2_LEVEL_0_0
  INTERNAL RETURN B0 := J4 [INT]
 RETURN
 PROC LABEL IntBinaryAsReal
  PARAM L4 := L3 [INT]
  L7 := 0.0 [REAL]
  L8 := 0 [INT]
  IPARAM L8
  IPARAM L4
  IASM "LDR %r, %a"
  IPARAM L8
  IPARAM L7
  IASM "STR %r, %a"
  INTERNAL RETURN L6 := L7 [REAL]
 RETURN
 PROC LABEL WriteReal
  PARAM M6 := M5 [REAL]
  M7 := 0 [INT]
  IPARAM M7
  IASM "MOV %r, R0"
  IPARAM M6
  IASM "LDR R0, %a"
  IASM "SWI 2"
  IPARAM M7
  IASM "MOV R0, %r"
 RETURN
