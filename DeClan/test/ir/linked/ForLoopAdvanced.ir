SYMBOL SECTION
DATA SECTION
 GLOBAL d68 := 0 [INT]
 GLOBAL d69 := 0 [INT]
CODE SECTION
 d70 := 1 [INT]
 d68 := d70 [INT]
 d71 := 10 [INT]
 LABEL FORBEG_0_LEVEL_0
 IF d68 NE d71 THEN FORLOOP_0_LEVEL_0 ELSE FOREND_0_LEVEL_0
 LABEL FORLOOP_0_LEVEL_0
 d72 := 1 [INT]
 d69 := d72 [INT]
 d73 := 10 [INT]
 LABEL FORBEG_1_LEVEL_1
 IF d69 LT d73 THEN FORLOOP_1_LEVEL_1 ELSE FOREND_1_LEVEL_1
 LABEL FORLOOP_1_LEVEL_1
 CALL WriteInt((d69 -> d74)[INT])
 d77 := 1 [INT]
 d78 := d69 IADD d77 [INT]
 d69 := d78 [INT]
 GOTO FORBEG_1_LEVEL_1
 LABEL FOREND_1_LEVEL_1
 CALL WriteLn()
 d79 := 10 [INT]
 d69 := d79 [INT]
 d80 := 0 [INT]
 LABEL FORBEG_2_LEVEL_1
 IF d69 GT d80 THEN FORLOOP_2_LEVEL_1 ELSE FOREND_2_LEVEL_1
 LABEL FORLOOP_2_LEVEL_1
 CALL WriteInt((d69 -> d74)[INT])
 d81 := 1 [INT]
 CALL INeg((d81 -> d82)[INT])
 EXTERNAL RETURN d89 := d85 [INT]
 d90 := d69 IADD d89 [INT]
 d69 := d90 [INT]
 GOTO FORBEG_2_LEVEL_1
 LABEL FOREND_2_LEVEL_1
 CALL WriteLn()
 d91 := 1 [INT]
 d92 := d68 IADD d91 [INT]
 d68 := d92 [INT]
 GOTO FORBEG_0_LEVEL_0
 LABEL FOREND_0_LEVEL_0
END
PROC SECTION
 PROC LABEL WriteInt
  PARAM d75 := d74 [INT]
  d76 := 0 [INT]
  IPARAM d76
  IASM "MOV %r, R0"
  IPARAM d75
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM d76
  IASM "MOV R0, %r"
 RETURN
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN
 PROC LABEL INeg
  PARAM d83 := d82 [INT]
  d84 := 0 [INT]
  d86 := INOT d83 [INT]
  d87 := 1 [INT]
  d88 := d86 IADD d87 [INT]
  d84 := d88 [INT]
  INTERNAL RETURN d85 := d84 [INT]
 RETURN
