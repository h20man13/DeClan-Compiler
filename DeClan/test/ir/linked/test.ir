SYMBOL SECTION
 ENTRY f27 INTERNAL PARAM n INeg 0
 ENTRY f30 INTERNAL RETURN INeg
 ENTRY f32 CONST INTERNAL GLOBAL answer 
 ENTRY f46 INTERNAL PARAM dividend Div 0
 ENTRY f48 INTERNAL PARAM divisor Div 1
 ENTRY f56 INTERNAL RETURN Mod
 ENTRY f83 INTERNAL PARAM n IntIsZero 0
 ENTRY f88 INTERNAL RETURN IntIsZero
 ENTRY g34 INTERNAL RETURN Div
DATA SECTION
 DEF f24 := 42 <INT>
 CALL INeg([f24 -> f27]<INT>)
 DEF f31 := (RETURN f30) <INT>
 DEF GLOBAL f32 := f31 <INT>
BSS SECTION
 DEF GLOBAL f33 := 0 <INT>
CODE SECTION
 GLOBAL f33 := (GLOBAL f32) <INT>
 DEF f34 := 0 <INT>
 DEF f35 := (GLOBAL f33) LT f34 <BOOL>
 DEF f36 := TRUE <BOOL>
 IF f35 EQ f36
 THEN IFSTAT_0_SEQ_0_LEVEL_0_0
 ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
 LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
 CALL INeg([(GLOBAL f33) -> f27]<INT>)
 DEF f37 := (RETURN f30) <INT>
 GLOBAL f33 := f37 <INT>
 GOTO IFEND_0_LEVEL_0_0
 LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
 DEF f38 := 0 <INT>
 DEF f39 := (GLOBAL f33) GT f38 <BOOL>
 DEF f40 := TRUE <BOOL>
 IF f39 EQ f40
 THEN IFSTAT_0_SEQ_1_LEVEL_0_0
 ELSE IFNEXT_0_SEQ_1_LEVEL_0_0
 LABEL IFSTAT_0_SEQ_1_LEVEL_0_0
 CALL Display([(GLOBAL f33) -> g44]<INT>)
 GOTO IFEND_0_LEVEL_0_0
 LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
 LABEL IFEND_0_LEVEL_0_0
END
PROC SECTION
 PROC LABEL INeg
  DEF f25 := 0 <INT>
  DEF f26 := INOT (PARAM f27) <INT>
  DEF f28 := 1 <INT>
  DEF f29 := f26 IADD f28 <INT>
  f25 := f29 <INT>
  DEF RETURN f30 := f25 <INT>
 RETURN
 PROC LABEL Display
  DEF f41 := FALSE <BOOL>
  DEF f42 := 2 <INT>
  CALL Mod([(PARAM f68) -> f57]<INT>, [f42 -> f58]<INT>)
  DEF f59 := (RETURN f56) <INT>
  DEF f60 := 0 <INT>
  DEF f61 := f59 NE f60 <BOOL>
  GLOBAL f32 := f61 <BOOL>
  DEF f62 := TRUE <BOOL>
  IF (GLOBAL f32) EQ f62
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF f63 := 1 <INT>
  CALL WriteInt([f63 -> f65]<INT>)
  DEF f66 := 1 <INT>
  DEF f67 := (PARAM f68) ISUB f66 <INT>
  DEF f69 := 2 <INT>
  CALL Div([f67 -> f46]<INT>, [f69 -> f48]<INT>)
  DEF g35 := (RETURN g34) <INT>
  PARAM f68 := g35 <INT>
  GOTO IFEND_1_LEVEL_0_2
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF g36 := 0 <INT>
  DEF g37 := (PARAM f68) EQ g36 <BOOL>
  DEF g38 := TRUE <BOOL>
  IF g37 EQ g38
  THEN IFSTAT_1_SEQ_1_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_1_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_1_LEVEL_0_0
  DEF g39 := 1 <INT>
  CALL INeg([g39 -> f27]<INT>)
  DEF g40 := (RETURN f30) <INT>
  CALL WriteInt([g40 -> f65]<INT>)
  GOTO IFEND_1_LEVEL_0_2
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_1
  DEF g41 := 0 <INT>
  CALL WriteInt([g41 -> f65]<INT>)
  DEF g42 := 2 <INT>
  CALL Div([(PARAM f68) -> f46]<INT>, [g42 -> f48]<INT>)
  DEF g43 := (RETURN g34) <INT>
  PARAM f68 := g43 <INT>
  GOTO IFEND_1_LEVEL_0_2
  LABEL IFNEXT_1_SEQ_2_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_2
 RETURN
 PROC LABEL Mod
  DEF f43 := 0 <INT>
  DEF f44 := 0 <INT>
  f45 := (PARAM f46) <INT>
  DEF f47 := f45 ISUB (PARAM f48) <INT>
  DEF f49 := 0 <INT>
  DEF f50 := f47 GE f49 <BOOL>
  DEF f51 := TRUE <BOOL>
  IF f50 EQ f51
  THEN WHILESTAT_4_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_4_SEQ_0_LEVEL_0_0
  IF f50 EQ f51
  THEN WHILESTAT_4_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_4_LEVEL_0_0
  LABEL WHILESTAT_4_SEQ_0_LEVEL_0_0
  DEF f52 := f45 ISUB (PARAM f48) <INT>
  f45 := f52 <INT>
  DEF f53 := f45 ISUB (PARAM f48) <INT>
  DEF f54 := 0 <INT>
  DEF f55 := f53 GE f54 <BOOL>
  f50 := f55 <BOOL>
  GOTO WHILECOND_4_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_4_LEVEL_0_0
  DEF RETURN f56 := f45 <INT>
 RETURN
 PROC LABEL WriteInt
  DEF f64 := 0 <INT>
  IPARAM f64
  IASM "MOV %r, R0"
  IPARAM (PARAM f65)
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM f64
  IASM "MOV R0, %r"
 RETURN
 PROC LABEL Div
  DEF f45 := 0 <INT>
  DEF f70 := 0 <INT>
  DEF f71 := 0 <INT>
  DEF f72 := 0 <INT>
  DEF f73 := 0 <INT>
  DEF f74 := 0 <INT>
  DEF f75 := 0 <INT>
  DEF f76 := 0 <INT>
  DEF f77 := 0 <INT>
  f71 := (PARAM f46) <INT>
  DEF f78 := 0 <INT>
  f74 := f78 <INT>
  DEF f79 := 0 <INT>
  f72 := f79 <INT>
  CALL IntIsZero([f71 -> f83]<INT>)
  DEF f89 := (RETURN f88) <BOOL>
  DEF f90 := BNOT f89 <BOOL>
  DEF f91 := TRUE <BOOL>
  IF f90 EQ f91
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF f90 EQ f91
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  DEF f92 := 1 <INT>
  DEF f93 := f71 IAND f92 <INT>
  f73 := f93 <INT>
  DEF f94 := 1 <INT>
  DEF f95 := f73 EQ f94 <BOOL>
  DEF f96 := TRUE <BOOL>
  IF f95 EQ f96
  THEN IFSTAT_0_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  f72 := f74 <INT>
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFEND_0_LEVEL_0_1
  DEF f97 := 1 <INT>
  DEF f98 := f74 IADD f97 <INT>
  f74 := f98 <INT>
  DEF f99 := 1 <INT>
  DEF g10 := f71 IRSHIFT f99 <INT>
  f71 := g10 <INT>
  CALL IntIsZero([f71 -> f83]<INT>)
  CALL IntIsZero([f71 -> f83]<INT>)
  DEF g11 := (RETURN f88) <BOOL>
  DEF g12 := BNOT g11 <BOOL>
  f90 := g12 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
  f75 := f72 <INT>
  f71 := (PARAM f46) <INT>
  DEF g13 := 0 <INT>
  f77 := g13 <INT>
  DEF g14 := 0 <INT>
  f25 := g14 <INT>
  DEF g15 := 0 <INT>
  DEF g16 := f75 GE g15 <BOOL>
  DEF g17 := TRUE <BOOL>
  IF g16 EQ g17
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_2_SEQ_0_LEVEL_0_0
  IF g16 EQ g17
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_2_LEVEL_0_0
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0_0
  DEF g18 := f71 IRSHIFT f75 <INT>
  DEF g19 := 1 <INT>
  DEF g20 := g18 IAND g19 <INT>
  f76 := g20 <INT>
  DEF g21 := 1 <INT>
  DEF g22 := f77 ILSHIFT g21 <INT>
  DEF g23 := g22 IOR f76 <INT>
  f77 := g23 <INT>
  DEF g24 := f77 GE (PARAM f48) <BOOL>
  DEF g25 := TRUE <BOOL>
  IF g24 EQ g25
  THEN IFSTAT_1_SEQ_0_LEVEL_0_2
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_2
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_2
  DEF g26 := 1 <INT>
  DEF g27 := g26 ILSHIFT f75 <INT>
  DEF g28 := f25 IOR g27 <INT>
  f25 := g28 <INT>
  DEF g29 := f77 ISUB (PARAM f48) <INT>
  f77 := g29 <INT>
  GOTO IFEND_1_LEVEL_0_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_2
  LABEL IFEND_1_LEVEL_0_1
  DEF g30 := 1 <INT>
  DEF g31 := f75 ISUB g30 <INT>
  f75 := g31 <INT>
  DEF g32 := 0 <INT>
  DEF g33 := f75 GE g32 <BOOL>
  g16 := g33 <BOOL>
  GOTO WHILECOND_2_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_2_LEVEL_0_0
  DEF RETURN g34 := f25 <INT>
 RETURN
 PROC LABEL IntIsZero
  DEF f80 := FALSE <BOOL>
  DEF f81 := 0 <INT>
  DEF f82 := (PARAM f83) EQ f81 <BOOL>
  DEF f84 := TRUE <BOOL>
  IF f82 EQ f84
  THEN IFSTAT_1_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_1
  DEF f85 := TRUE <BOOL>
  f86 := f85 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_1
  DEF f87 := FALSE <BOOL>
  f86 := f87 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN f88 := f86 <BOOL>
 RETURN
