SYMBOL SECTION
DATA SECTION
 e15 := 42 [INT]
 CALL INeg((e15 -> e16)[INT])
 EXTERNAL RETURN e23 := e19 [INT]
 GLOBAL e24 := e23 [INT]
 GLOBAL e25 := 0 [INT]
CODE SECTION
 e25 := e24 [INT]
 e26 := 0 [INT]
 e27 := e25 LT e26 [BOOL]
 IF e27 EQ TRUE THEN IFSTAT_0_SEQ_0_LEVEL_0_0 ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
 LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
 CALL INeg((e25 -> e16)[INT])
 EXTERNAL RETURN e28 := e19 [INT]
 e25 := e28 [INT]
 GOTO IFEND_0_LEVEL_0_0
 LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
 e29 := 0 [INT]
 e30 := e25 GT e29 [BOOL]
 IF e30 EQ TRUE THEN IFSTAT_0_SEQ_1_LEVEL_0_0 ELSE IFNEXT_0_SEQ_1_LEVEL_0_0
 LABEL IFSTAT_0_SEQ_1_LEVEL_0_0
 CALL Display((e25 -> e31)[INT])
 GOTO IFEND_0_LEVEL_0_0
 LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
 LABEL IFEND_0_LEVEL_0_0
END
PROC SECTION
 PROC LABEL INeg
  PARAM e17 := e16 [INT]
  e18 := 0 [INT]
  e20 := INOT e17 [INT]
  e21 := 1 [INT]
  e22 := e20 IADD e21 [INT]
  e18 := e22 [INT]
  INTERNAL RETURN e19 := e18 [INT]
 RETURN
 PROC LABEL Display
  PARAM e32 := e31 [INT]
  e33 := FALSE [BOOL]
  e34 := 2 [INT]
  CALL Mod((e32 -> e35)[INT], (e34 -> e37)[INT])
  EXTERNAL RETURN e49 := e40 [INT]
  e50 := 0 [INT]
  e51 := e49 NE e50 [BOOL]
  e33 := e51 [BOOL]
  IF e33 EQ TRUE THEN IFSTAT_1_SEQ_0_LEVEL_0_0 ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  e52 := 1 [INT]
  CALL WriteInt((e52 -> e53)[INT])
  e56 := 1 [INT]
  e57 := e32 ISUB e56 [INT]
  e58 := 2 [INT]
  CALL Div((e57 -> e59)[INT], (e58 -> e61)[INT])
  EXTERNAL RETURN f24 := e64 [INT]
  e32 := f24 [INT]
  GOTO IFEND_1_LEVEL_0_2
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  f25 := 0 [INT]
  f26 := e32 EQ f25 [BOOL]
  IF f26 EQ TRUE THEN IFSTAT_1_SEQ_1_LEVEL_0_0 ELSE IFNEXT_1_SEQ_1_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_1_LEVEL_0_0
  f27 := 1 [INT]
  CALL INeg((f27 -> e16)[INT])
  EXTERNAL RETURN f28 := e19 [INT]
  CALL WriteInt((f28 -> e53)[INT])
  GOTO IFEND_1_LEVEL_0_2
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_1
  f29 := 0 [INT]
  CALL WriteInt((f29 -> e53)[INT])
  f30 := 2 [INT]
  CALL Div((e32 -> e59)[INT], (f30 -> e61)[INT])
  EXTERNAL RETURN f31 := e64 [INT]
  e32 := f31 [INT]
  GOTO IFEND_1_LEVEL_0_2
  LABEL IFNEXT_1_SEQ_2_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_2
 RETURN
 PROC LABEL Mod
  PARAM e36 := e35 [INT]
  PARAM e38 := e37 [INT]
  e39 := 0 [INT]
  e41 := 0 [INT]
  e39 := e36 [INT]
  e42 := e39 ISUB e38 [INT]
  e43 := 0 [INT]
  e44 := e42 GE e43 [BOOL]
  IF e44 EQ TRUE THEN WHILESTAT_4_SEQ_0_LEVEL_0_0 ELSE WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_4_SEQ_0_LEVEL_0_0
  IF e44 EQ TRUE THEN WHILESTAT_4_SEQ_0_LEVEL_0_0 ELSE WHILEEND_4_LEVEL_0_0
  LABEL WHILESTAT_4_SEQ_0_LEVEL_0_0
  e45 := e39 ISUB e38 [INT]
  e39 := e45 [INT]
  e46 := e39 ISUB e38 [INT]
  e47 := 0 [INT]
  e48 := e46 GE e47 [BOOL]
  e44 := e48 [BOOL]
  GOTO WHILECOND_4_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_4_LEVEL_0_0
  INTERNAL RETURN e40 := e39 [INT]
 RETURN
 PROC LABEL WriteInt
  PARAM e54 := e53 [INT]
  e55 := 0 [INT]
  IPARAM e55
  IASM "MOV %r, R0"
  IPARAM e54
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM e55
  IASM "MOV R0, %r"
 RETURN
 PROC LABEL Div
  PARAM e60 := e59 [INT]
  PARAM e62 := e61 [INT]
  e65 := 0 [INT]
  e63 := 0 [INT]
  e66 := 0 [INT]
  e67 := 0 [INT]
  e68 := 0 [INT]
  e69 := 0 [INT]
  e70 := 0 [INT]
  e71 := 0 [INT]
  e72 := 0 [INT]
  e66 := e60 [INT]
  e73 := 0 [INT]
  e69 := e73 [INT]
  e74 := 0 [INT]
  e67 := e74 [INT]
  CALL IntIsZero((e66 -> e75)[INT])
  EXTERNAL RETURN e83 := e78 [BOOL]
  e84 := BNOT e83 [BOOL]
  IF e84 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_0 ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF e84 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_0 ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  e85 := 1 [INT]
  e86 := e66 IAND e85 [INT]
  e68 := e86 [INT]
  e87 := 1 [INT]
  e88 := e68 EQ e87 [BOOL]
  IF e88 EQ TRUE THEN IFSTAT_0_SEQ_0_LEVEL_0_1 ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  e67 := e69 [INT]
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFEND_0_LEVEL_0_1
  e89 := 1 [INT]
  e90 := e69 IADD e89 [INT]
  e69 := e90 [INT]
  e91 := 1 [INT]
  e92 := e66 IRSHIFT e91 [INT]
  e66 := e92 [INT]
  CALL IntIsZero((e66 -> e75)[INT])
  EXTERNAL RETURN e93 := e78 [BOOL]
  e94 := BNOT e93 [BOOL]
  e84 := e94 [BOOL]
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
  e70 := e67 [INT]
  e66 := e60 [INT]
  e95 := 0 [INT]
  e72 := e95 [INT]
  e96 := 0 [INT]
  e63 := e96 [INT]
  e97 := 0 [INT]
  e98 := e70 GE e97 [BOOL]
  IF e98 EQ TRUE THEN WHILESTAT_2_SEQ_0_LEVEL_0_0 ELSE WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_2_SEQ_0_LEVEL_0_0
  IF e98 EQ TRUE THEN WHILESTAT_2_SEQ_0_LEVEL_0_0 ELSE WHILEEND_2_LEVEL_0_0
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0_0
  e99 := e66 IRSHIFT e70 [INT]
  f10 := 1 [INT]
  f11 := e99 IAND f10 [INT]
  e71 := f11 [INT]
  f12 := 1 [INT]
  f13 := e72 ILSHIFT f12 [INT]
  f14 := f13 IOR e71 [INT]
  e72 := f14 [INT]
  f15 := e72 GE e62 [BOOL]
  IF f15 EQ TRUE THEN IFSTAT_1_SEQ_0_LEVEL_0_2 ELSE IFNEXT_1_SEQ_0_LEVEL_0_2
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_2
  f16 := 1 [INT]
  f17 := f16 ILSHIFT e70 [INT]
  f18 := e63 IOR f17 [INT]
  e63 := f18 [INT]
  f19 := e72 ISUB e62 [INT]
  e72 := f19 [INT]
  GOTO IFEND_1_LEVEL_0_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_2
  LABEL IFEND_1_LEVEL_0_1
  f20 := 1 [INT]
  f21 := e70 ISUB f20 [INT]
  e70 := f21 [INT]
  f22 := 0 [INT]
  f23 := e70 GE f22 [BOOL]
  e98 := f23 [BOOL]
  GOTO WHILECOND_2_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_2_LEVEL_0_0
  INTERNAL RETURN e64 := e63 [INT]
 RETURN
 PROC LABEL IntIsZero
  PARAM e76 := e75 [INT]
  e77 := FALSE [BOOL]
  e79 := 0 [INT]
  e80 := e76 EQ e79 [BOOL]
  IF e80 EQ TRUE THEN IFSTAT_1_SEQ_0_LEVEL_0_1 ELSE IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_1
  e81 := TRUE [BOOL]
  e77 := e81 [BOOL]
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_1
  e82 := FALSE [BOOL]
  e77 := e82 [BOOL]
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  INTERNAL RETURN e78 := e77 [BOOL]
 RETURN
