SYMBOL SECTION
DATA SECTION
 e15 := 20 [INT]
 GLOBAL e16 := e15 [INT]
 e17 := 5 [INT]
 GLOBAL e18 := e17 [INT]
 GLOBAL e19 := 0 [INT]
CODE SECTION
 CALL Div((e16 -> e20)[INT], (e18 -> e22)[INT])
 EXTERNAL RETURN e75 := e25 [INT]
 e19 := e75 [INT]
 CALL WriteInt((e19 -> e76)[INT])
END
PROC SECTION
 PROC LABEL Div
  PARAM e21 := e20 [INT]
  PARAM e23 := e22 [INT]
  e26 := 0 [INT]
  e24 := 0 [INT]
  e27 := 0 [INT]
  e28 := 0 [INT]
  e29 := 0 [INT]
  e30 := 0 [INT]
  e31 := 0 [INT]
  e32 := 0 [INT]
  e33 := 0 [INT]
  e27 := e21 [INT]
  e34 := 0 [INT]
  e30 := e34 [INT]
  e35 := 0 [INT]
  e28 := e35 [INT]
  CALL IntIsZero((e27 -> e36)[INT])
  EXTERNAL RETURN e44 := e39 [BOOL]
  e45 := BNOT e44 [BOOL]
  IF e45 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_0 ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF e45 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_0 ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  e46 := 1 [INT]
  e47 := e27 IAND e46 [INT]
  e29 := e47 [INT]
  e48 := 1 [INT]
  e49 := e29 EQ e48 [BOOL]
  IF e49 EQ TRUE THEN IFSTAT_0_SEQ_0_LEVEL_0_0 ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  e28 := e30 [INT]
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  e50 := 1 [INT]
  e51 := e30 IADD e50 [INT]
  e30 := e51 [INT]
  e52 := 1 [INT]
  e53 := e27 IRSHIFT e52 [INT]
  e27 := e53 [INT]
  CALL IntIsZero((e27 -> e36)[INT])
  EXTERNAL RETURN e54 := e39 [BOOL]
  e55 := BNOT e54 [BOOL]
  e45 := e55 [BOOL]
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
  e31 := e28 [INT]
  e27 := e21 [INT]
  e56 := 0 [INT]
  e33 := e56 [INT]
  e57 := 0 [INT]
  e24 := e57 [INT]
  e58 := 0 [INT]
  e59 := e31 GE e58 [BOOL]
  IF e59 EQ TRUE THEN WHILESTAT_2_SEQ_0_LEVEL_0_0 ELSE WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_2_SEQ_0_LEVEL_0_0
  IF e59 EQ TRUE THEN WHILESTAT_2_SEQ_0_LEVEL_0_0 ELSE WHILEEND_2_LEVEL_0_0
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0_0
  e60 := e27 IRSHIFT e31 [INT]
  e61 := 1 [INT]
  e62 := e60 IAND e61 [INT]
  e32 := e62 [INT]
  e63 := 1 [INT]
  e64 := e33 ILSHIFT e63 [INT]
  e65 := e64 IOR e32 [INT]
  e33 := e65 [INT]
  e66 := e33 GE e23 [BOOL]
  IF e66 EQ TRUE THEN IFSTAT_1_SEQ_0_LEVEL_0_1 ELSE IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_1
  e67 := 1 [INT]
  e68 := e67 ILSHIFT e31 [INT]
  e69 := e24 IOR e68 [INT]
  e24 := e69 [INT]
  e70 := e33 ISUB e23 [INT]
  e33 := e70 [INT]
  GOTO IFEND_1_LEVEL_0_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFEND_1_LEVEL_0_1
  e71 := 1 [INT]
  e72 := e31 ISUB e71 [INT]
  e31 := e72 [INT]
  e73 := 0 [INT]
  e74 := e31 GE e73 [BOOL]
  e59 := e74 [BOOL]
  GOTO WHILECOND_2_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_2_LEVEL_0_0
  INTERNAL RETURN e25 := e24 [INT]
 RETURN
 PROC LABEL IntIsZero
  PARAM e37 := e36 [INT]
  e38 := FALSE [BOOL]
  e40 := 0 [INT]
  e41 := e37 EQ e40 [BOOL]
  IF e41 EQ TRUE THEN IFSTAT_1_SEQ_0_LEVEL_0_0 ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  e42 := TRUE [BOOL]
  e38 := e42 [BOOL]
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  e43 := FALSE [BOOL]
  e38 := e43 [BOOL]
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  INTERNAL RETURN e39 := e38 [BOOL]
 RETURN
 PROC LABEL WriteInt
  PARAM e77 := e76 [INT]
  e78 := 0 [INT]
  IPARAM e78
  IASM "MOV %r, R0"
  IPARAM e77
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM e78
  IASM "MOV R0, %r"
 RETURN
