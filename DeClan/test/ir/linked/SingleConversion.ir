SYMBOL SECTION
 b CONST INTERNAL realBias
DATA SECTION
 a := 5 [INT]
 GLOBAL b := a [INT]
 GLOBAL c := 0.0 [REAL]
 GLOBAL d := 0.0 [REAL]
 e60 := 127 [INT]
 GLOBAL e61 := e60 [INT]
CODE SECTION
 CALL IntToReal((b -> d42)[INT])
 EXTERNAL RETURN d41 := d45 [REAL]
 c := d41 [REAL]
 CALL WriteReal((c -> e80)[REAL])
END
PROC SECTION
 PROC LABEL IntToReal
  PARAM d43 := d42 [INT]
  d44 := 0.0 [REAL]
  d46 := 0 [INT]
  d47 := FALSE [BOOL]
  d48 := 0 [INT]
  d49 := 0 [INT]
  d50 := 0 [INT]
  d51 := 0 [INT]
  d52 := 0 [INT]
  d53 := 0 [INT]
  d54 := 0 [INT]
  d55 := 0 [INT]
  d56 := 0 [INT]
  d57 := 0 [INT]
  CALL Abs((d43 -> d59)[INT])
  EXTERNAL RETURN d58 := d62 [INT]
  d46 := d58 [INT]
  d73 := "Abs n is: " [STRING]
  CALL WriteString((d73 -> d74)[STRING])
  CALL WriteInt((d46 -> e11)[INT])
  CALL WriteLn()
  d51 := d46 [INT]
  e14 := 0 [INT]
  d50 := e14 [INT]
  CALL IntIsNegative((d43 -> e16)[INT])
  EXTERNAL RETURN e15 := e19 [BOOL]
  d47 := e15 [BOOL]
  e29 := "n is Neg: " [STRING]
  CALL WriteString((e29 -> d74)[STRING])
  CALL WriteBool((d47 -> e30)[BOOL])
  CALL WriteLn()
  CALL IntIsZero((d51 -> d88)[INT])
  EXTERNAL RETURN e33 := d91 [BOOL]
  IF e33 EQ TRUE THEN IFSTAT_0_SEQ_0_LEVEL_0_1 ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  e34 := 0 [INT]
  d48 := e34 [INT]
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  e35 := "Int is not zero" [STRING]
  CALL WriteString((e35 -> d74)[STRING])
  CALL WriteLn()
  CALL IntIsZero((d51 -> d88)[INT])
  EXTERNAL RETURN e36 := d91 [BOOL]
  e37 := BNOT e36 [BOOL]
  IF e37 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_1 ELSE WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_1
  IF e37 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_1 ELSE WHILEEND_0_LEVEL_0_1
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_1
  e38 := 1 [INT]
  e39 := d51 IAND e38 [INT]
  d52 := e39 [INT]
  e40 := 1 [INT]
  e41 := d52 EQ e40 [BOOL]
  IF e41 EQ TRUE THEN IFSTAT_1_SEQ_0_LEVEL_1 ELSE IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_1
  d49 := d50 [INT]
  GOTO IFEND_1_LEVEL_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFEND_1_LEVEL_1
  e42 := 1 [INT]
  e43 := d50 IADD e42 [INT]
  d50 := e43 [INT]
  e44 := 1 [INT]
  e45 := d51 IRSHIFT e44 [INT]
  d51 := e45 [INT]
  CALL IntIsZero((d51 -> d88)[INT])
  EXTERNAL RETURN e46 := d91 [BOOL]
  e47 := BNOT e46 [BOOL]
  e37 := e47 [BOOL]
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_1
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILEEND_0_LEVEL_0_1
  e48 := "Furthest One is: " [STRING]
  CALL WriteString((e48 -> d74)[STRING])
  CALL WriteInt((d49 -> e11)[INT])
  CALL WriteLn()
  e49 := 23 [INT]
  e50 := d49 GT e49 [BOOL]
  IF e50 EQ TRUE THEN IFSTAT_2_SEQ_0_LEVEL_1_0 ELSE IFNEXT_2_SEQ_0_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_1_0
  e51 := 23 [INT]
  e52 := d49 ISUB e51 [INT]
  e53 := d46 IRSHIFT e52 [INT]
  d46 := e53 [INT]
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_1_0
  e54 := 23 [INT]
  e55 := d49 LT e54 [BOOL]
  IF e55 EQ TRUE THEN IFSTAT_2_SEQ_1_LEVEL_1_0 ELSE IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_1_LEVEL_1_0
  e56 := 23 [INT]
  e57 := e56 ISUB d49 [INT]
  e58 := d46 ILSHIFT e57 [INT]
  d46 := e58 [INT]
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFEND_2_LEVEL_1_0
  e59 := d49 IADD b [INT]
  d54 := e59 [INT]
  e62 := "Real Bias is: " [STRING]
  CALL WriteString((e62 -> d74)[STRING])
  CALL WriteInt((b -> e11)[INT])
  CALL WriteLn()
  e63 := "Exponent is " [STRING]
  CALL WriteString((e63 -> d74)[STRING])
  CALL WriteInt((d54 -> e11)[INT])
  CALL WriteLn()
  e64 := 8388607 [INT]
  d56 := e64 [INT]
  e65 := d46 IAND d56 [INT]
  d55 := e65 [INT]
  d48 := d55 [INT]
  e66 := 23 [INT]
  e67 := d54 ILSHIFT e66 [INT]
  e68 := d48 IOR e67 [INT]
  d48 := e68 [INT]
  IF d47 EQ TRUE THEN IFSTAT_3_SEQ_0_LEVEL_1 ELSE IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFSTAT_3_SEQ_0_LEVEL_1
  e69 := 1 [INT]
  e70 := 31 [INT]
  e71 := e69 ILSHIFT e70 [INT]
  e72 := d48 IOR e71 [INT]
  d48 := e72 [INT]
  GOTO IFEND_3_LEVEL_1
  LABEL IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFEND_3_LEVEL_1
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_1
  LABEL IFEND_0_LEVEL_0_1
  e73 := "Int result is: " [STRING]
  CALL WriteString((e73 -> d74)[STRING])
  CALL WriteInt((d48 -> e11)[INT])
  CALL WriteLn()
  CALL IntBinaryAsReal((d48 -> e74)[INT])
  EXTERNAL RETURN e79 := e77 [REAL]
  d44 := e79 [REAL]
  INTERNAL RETURN d45 := d44 [REAL]
 RETURN
 PROC LABEL Abs
  PARAM d60 := d59 [INT]
  d61 := 0 [INT]
  d63 := 0 [INT]
  d64 := d60 GE d63 [BOOL]
  IF d64 EQ TRUE THEN IFSTAT_0_SEQ_0_LEVEL_0_0 ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  d61 := d60 [INT]
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  CALL INeg((d60 -> d66)[INT])
  EXTERNAL RETURN d65 := d69 [INT]
  d61 := d65 [INT]
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  INTERNAL RETURN d62 := d61 [INT]
 RETURN
 PROC LABEL INeg
  PARAM d67 := d66 [INT]
  d68 := 0 [INT]
  d70 := INOT d67 [INT]
  d71 := 1 [INT]
  d72 := d70 IADD d71 [INT]
  d68 := d72 [INT]
  INTERNAL RETURN d69 := d68 [INT]
 RETURN
 PROC LABEL WriteString
  PARAM d75 := d74 [STRING]
  d76 := 0 [INT]
  d77 := 0 [INT]
  d78 := 0 [INT]
  d79 := 0 [INT]
  CALL StringAsAddress((d75 -> d81)[STRING])
  EXTERNAL RETURN d80 := d84 [INT]
  d76 := d80 [INT]
  d86 := 0 [INT]
  d77 := d86 [INT]
  IPARAM d78
  IPARAM d76
  IPARAM d77
  IASM "LDRB %r, [%r, +%r]"
  IPARAM d78
  IPARAM d78
  IASM "STR %r, %a"
  CALL IntIsZero((d78 -> d88)[INT])
  EXTERNAL RETURN d87 := d91 [BOOL]
  d96 := BNOT d87 [BOOL]
  IF d96 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_0 ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF d96 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_0 ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  IPARAM d79
  IASM "MOV %r, R0"
  IPARAM d78
  IASM "MOV R0, %r"
  IASM "SWI 6"
  d97 := 1 [INT]
  d98 := d77 IADD d97 [INT]
  d77 := d98 [INT]
  IPARAM d78
  IPARAM d76
  IPARAM d77
  IASM "LDRB %r, [%r, +%r]"
  IPARAM d78
  IPARAM d78
  IASM "STR %r, %a"
  IPARAM d79
  IASM "MOV R0, %r"
  CALL IntIsZero((d78 -> d88)[INT])
  EXTERNAL RETURN d99 := d91 [BOOL]
  e10 := BNOT d99 [BOOL]
  d96 := e10 [BOOL]
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
 RETURN
 PROC LABEL StringAsAddress
  PARAM d82 := d81 [STRING]
  d83 := 0 [INT]
  d85 := 0 [INT]
  IPARAM d85
  IPARAM d82
  IASM "LDR %r, %a"
  IPARAM d85
  IPARAM d83
  IASM "STR %r, %a"
  INTERNAL RETURN d84 := d83 [INT]
 RETURN
 PROC LABEL IntIsZero
  PARAM d89 := d88 [INT]
  d90 := FALSE [BOOL]
  d92 := 0 [INT]
  d93 := d89 EQ d92 [BOOL]
  IF d93 EQ TRUE THEN IFSTAT_1_SEQ_0_LEVEL_0_0 ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  d94 := TRUE [BOOL]
  d90 := d94 [BOOL]
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  d95 := FALSE [BOOL]
  d90 := d95 [BOOL]
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  INTERNAL RETURN d91 := d90 [BOOL]
 RETURN
 PROC LABEL WriteInt
  PARAM e12 := e11 [INT]
  e13 := 0 [INT]
  IPARAM e13
  IASM "MOV %r, R0"
  IPARAM e12
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM e13
  IASM "MOV R0, %r"
 RETURN
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN
 PROC LABEL IntIsNegative
  PARAM e17 := e16 [INT]
  e18 := FALSE [BOOL]
  e20 := 0 [INT]
  e21 := 31 [INT]
  e22 := e17 IRSHIFT e21 [INT]
  e23 := 1 [INT]
  e24 := e22 IAND e23 [INT]
  e20 := e24 [INT]
  e25 := 0 [INT]
  e26 := e20 EQ e25 [BOOL]
  IF e26 EQ TRUE THEN IFSTAT_2_SEQ_0_LEVEL_0_0 ELSE IFNEXT_2_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_0_0
  e27 := FALSE [BOOL]
  e18 := e27 [BOOL]
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_0_0
  e28 := TRUE [BOOL]
  e18 := e28 [BOOL]
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_0_0
  LABEL IFEND_2_LEVEL_0_0
  INTERNAL RETURN e19 := e18 [BOOL]
 RETURN
 PROC LABEL WriteBool
  PARAM e31 := e30 [BOOL]
  e32 := 0 [INT]
  IPARAM e32
  IASM "MOV %r, R0"
  IPARAM e31
  IASM "LDRB R0, %a"
  IASM "SWI 6"
  IPARAM e32
  IASM "MOV R0, %r"
 RETURN
 PROC LABEL IntBinaryAsReal
  PARAM e75 := e74 [INT]
  e76 := 0.0 [REAL]
  e78 := 0 [INT]
  IPARAM e78
  IPARAM e75
  IASM "LDR %r, %a"
  IPARAM e78
  IPARAM e76
  IASM "STR %r, %a"
  INTERNAL RETURN e77 := e76 [REAL]
 RETURN
 PROC LABEL WriteReal
  PARAM e81 := e80 [REAL]
  e82 := 0 [INT]
  IPARAM e82
  IASM "MOV %r, R0"
  IPARAM e81
  IASM "LDR R0, %a"
  IASM "SWI 2"
  IPARAM e82
  IASM "MOV R0, %r"
 RETURN
