SYMBOL SECTION
 ENTRY f25 CONST INTERNAL GLOBAL a 
 ENTRY f27 CONST INTERNAL GLOBAL b 
 ENTRY f49 INTERNAL PARAM n Abs 0
 ENTRY f53 INTERNAL PARAM n INeg 0
 ENTRY f56 INTERNAL RETURN INeg
 ENTRY f58 INTERNAL RETURN Abs
 ENTRY f65 INTERNAL PARAM n IntIsZero 0
 ENTRY f74 INTERNAL RETURN IntIsNegative
 ENTRY f83 INTERNAL RETURN IntIsZero
 ENTRY j14 CONST INTERNAL GLOBAL realBias 
 ENTRY g39 INTERNAL RETURN IntBinaryAsReal
 ENTRY g42 INTERNAL RETURN IntToReal
 ENTRY g49 INTERNAL RETURN RealBinaryAsInt
 ENTRY g57 INTERNAL RETURN RealSign
 ENTRY g72 INTERNAL RETURN RealExponent
 ENTRY g93 INTERNAL RETURN RealIsZero
 ENTRY g99 INTERNAL RETURN RealMantissa
 ENTRY h22 INTERNAL RETURN RMul
 ENTRY h27 INTERNAL RETURN REqualTo
 ENTRY h48 INTERNAL PARAM dividend Div 0
 ENTRY h76 INTERNAL PARAM divisor Div 1
 ENTRY h86 INTERNAL RETURN Div
 ENTRY h88 INTERNAL RETURN RDivide
 ENTRY h92 INTERNAL RETURN Divide
 ENTRY f28 INTERNAL GLOBAL c 
 ENTRY f32 INTERNAL GLOBAL g 
 ENTRY i22 INTERNAL RETURN StringAsAddress
 ENTRY i41 INTERNAL RETURN Foo
 ENTRY i57 INTERNAL RETURN RealIsNegative
 ENTRY i73 INTERNAL RETURN RealIsPositive
 ENTRY i75 INTERNAL RETURN RGreaterThan
 ENTRY i84 INTERNAL RETURN RNeg
 ENTRY j88 INTERNAL RETURN RAdd
 ENTRY j89 INTERNAL RETURN RSub
DATA SECTION
 DEF f24 := 42 <INT>
 DEF GLOBAL f25 := f24 <INT>
 DEF f26 := 42.0 <REAL>
 DEF GLOBAL f27 := f26 <REAL>
 DEF g24 := 127 <INT>
 DEF GLOBAL j14 := g24 <INT>
BSS SECTION
 DEF GLOBAL f28 := 0 <INT>
 DEF GLOBAL f29 := 0 <INT>
 DEF GLOBAL f30 := 0.0 <REAL>
 DEF GLOBAL f31 := 0.0 <REAL>
 DEF GLOBAL f32 := FALSE <BOOL>
CODE SECTION
 CALL IntToReal([(GLOBAL f25) -> g43]<INT>)
 DEF g44 := (RETURN g42) <REAL>
 CALL RMul([g44 -> h23]<REAL>, [(GLOBAL f31) -> h24]<REAL>)
 DEF h25 := (RETURN h22) <REAL>
 CALL Foo([(GLOBAL f28) -> h98]<INT>, [(GLOBAL f30) -> i38]<REAL>, [h25 -> i39]<REAL>)
 CALL Foo([(GLOBAL f28) -> h98]<INT>, [(GLOBAL f30) -> i38]<REAL>, [h25 -> i39]<REAL>)
 DEF i80 := (RETURN i41) <BOOL>
 GLOBAL f32 := i80 <BOOL>
 DEF i81 := TRUE <BOOL>
 IF (GLOBAL f32) EQ i81
 THEN IFSTAT_0_SEQ_0_LEVEL_0_4
 ELSE IFNEXT_0_SEQ_0_LEVEL_0_4
 LABEL IFSTAT_0_SEQ_0_LEVEL_0_4
 CALL WriteInt([(GLOBAL f28) -> i35]<INT>)
 GOTO IFEND_0_LEVEL_0_4
 LABEL IFNEXT_0_SEQ_0_LEVEL_0_4
 CALL IntToReal([(GLOBAL f25) -> g43]<INT>)
 DEF i82 := (RETURN g42) <REAL>
 CALL RSub([(GLOBAL f27) -> j90]<REAL>, [i82 -> j91]<REAL>)
 DEF j92 := (RETURN j89) <REAL>
 CALL WriteReal([j92 -> j94]<REAL>)
 GOTO IFEND_0_LEVEL_0_4
 LABEL IFNEXT_0_SEQ_1_LEVEL_0
 LABEL IFEND_0_LEVEL_0_4
END
PROC SECTION
 PROC LABEL IntToReal
  DEF f33 := 0.0 <REAL>
  DEF f34 := 0 <INT>
  DEF f35 := FALSE <BOOL>
  DEF f36 := 0 <INT>
  DEF f37 := 0 <INT>
  DEF f38 := 0 <INT>
  DEF f39 := 0 <INT>
  DEF f40 := 0 <INT>
  DEF f41 := 0 <INT>
  DEF f42 := 0 <INT>
  DEF f43 := 0 <INT>
  DEF f44 := 0 <INT>
  DEF f45 := 0 <INT>
  CALL Abs([(PARAM g43) -> f49]<INT>)
  DEF f59 := (RETURN f58) <INT>
  f34 := f59 <INT>
  f39 := f34 <INT>
  DEF f60 := 0 <INT>
  f38 := f60 <INT>
  CALL IntIsNegative([(PARAM g43) -> f75]<INT>)
  DEF f76 := (RETURN f74) <BOOL>
  f35 := f76 <BOOL>
  CALL IntIsZero([f39 -> f65]<INT>)
  DEF f84 := (RETURN f83) <BOOL>
  DEF f85 := TRUE <BOOL>
  IF f84 EQ f85
  THEN IFSTAT_0_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  DEF f86 := 0 <INT>
  f36 := f86 <INT>
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  CALL IntIsZero([f39 -> f65]<INT>)
  CALL IntIsZero([f39 -> f65]<INT>)
  DEF f87 := (RETURN f83) <BOOL>
  DEF f88 := BNOT f87 <BOOL>
  DEF f89 := TRUE <BOOL>
  IF f88 EQ f89
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF f88 EQ f89
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  DEF f90 := 1 <INT>
  DEF f91 := f39 IAND f90 <INT>
  f40 := f91 <INT>
  DEF f92 := 1 <INT>
  DEF f93 := f40 EQ f92 <BOOL>
  DEF f94 := TRUE <BOOL>
  IF f93 EQ f94
  THEN IFSTAT_1_SEQ_0_LEVEL_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_1
  f37 := f38 <INT>
  GOTO IFEND_1_LEVEL_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFEND_1_LEVEL_1
  DEF f95 := 1 <INT>
  DEF f96 := f38 IADD f95 <INT>
  f38 := f96 <INT>
  DEF f97 := 1 <INT>
  DEF f98 := f39 IRSHIFT f97 <INT>
  f39 := f98 <INT>
  CALL IntIsZero([f39 -> f65]<INT>)
  CALL IntIsZero([f39 -> f65]<INT>)
  DEF f99 := (RETURN f83) <BOOL>
  DEF g10 := BNOT f99 <BOOL>
  f88 := g10 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
  DEF g11 := 23 <INT>
  DEF g12 := f37 GT g11 <BOOL>
  DEF g13 := TRUE <BOOL>
  IF g12 EQ g13
  THEN IFSTAT_2_SEQ_0_LEVEL_1_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_1_0
  DEF g14 := 23 <INT>
  DEF g15 := f37 ISUB g14 <INT>
  DEF g16 := f34 IRSHIFT g15 <INT>
  f34 := g16 <INT>
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_1_0
  DEF g17 := 23 <INT>
  DEF g18 := f37 LT g17 <BOOL>
  DEF g19 := TRUE <BOOL>
  IF g18 EQ g19
  THEN IFSTAT_2_SEQ_1_LEVEL_1_0
  ELSE IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_1_LEVEL_1_0
  DEF g20 := 23 <INT>
  DEF g21 := g20 ISUB f37 <INT>
  DEF g22 := f34 ILSHIFT g21 <INT>
  f34 := g22 <INT>
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFEND_2_LEVEL_1_0
  DEF g23 := f37 IADD (GLOBAL j14) <INT>
  f42 := g23 <INT>
  DEF g27 := 8388607 <INT>
  f44 := g27 <INT>
  DEF g28 := f34 IAND f44 <INT>
  f43 := g28 <INT>
  f36 := f43 <INT>
  DEF g29 := 23 <INT>
  DEF g30 := f42 ILSHIFT g29 <INT>
  DEF g31 := f36 IOR g30 <INT>
  f36 := g31 <INT>
  DEF g32 := TRUE <BOOL>
  IF f35 EQ g32
  THEN IFSTAT_3_SEQ_0_LEVEL_1
  ELSE IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFSTAT_3_SEQ_0_LEVEL_1
  DEF g33 := 1 <INT>
  DEF g34 := 31 <INT>
  DEF g35 := g33 ILSHIFT g34 <INT>
  DEF g36 := f36 IOR g35 <INT>
  f36 := g36 <INT>
  GOTO IFEND_3_LEVEL_1
  LABEL IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFEND_3_LEVEL_1
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_1
  LABEL IFEND_0_LEVEL_0_1
  CALL IntBinaryAsReal([f36 -> g40]<INT>)
  CALL IntBinaryAsReal([f36 -> g40]<INT>)
  DEF g41 := (RETURN g39) <REAL>
  f33 := g41 <REAL>
  DEF RETURN g42 := f33 <REAL>
 RETURN
 PROC LABEL Abs
  DEF f46 := 0 <INT>
  DEF f47 := 0 <INT>
  DEF f48 := (PARAM f49) GE f47 <BOOL>
  DEF f50 := TRUE <BOOL>
  IF f48 EQ f50
  THEN IFSTAT_0_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  f46 := (PARAM f49) <INT>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  CALL INeg([(PARAM f49) -> f53]<INT>)
  DEF f57 := (RETURN f56) <INT>
  f46 := f57 <INT>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  DEF RETURN f58 := f46 <INT>
 RETURN
 PROC LABEL INeg
  DEF f51 := 0 <INT>
  DEF f52 := INOT (PARAM f53) <INT>
  DEF f54 := 1 <INT>
  DEF f55 := f52 IADD f54 <INT>
  f51 := f55 <INT>
  DEF RETURN f56 := f51 <INT>
 RETURN
 PROC LABEL IntIsNegative
  DEF f61 := FALSE <BOOL>
  DEF f62 := 0 <INT>
  DEF f63 := 31 <INT>
  DEF f64 := (PARAM f65) IRSHIFT f63 <INT>
  DEF f66 := 1 <INT>
  DEF f67 := f64 IAND f66 <INT>
  f62 := f67 <INT>
  DEF f68 := 0 <INT>
  DEF f69 := f62 EQ f68 <BOOL>
  DEF f70 := TRUE <BOOL>
  IF f69 EQ f70
  THEN IFSTAT_2_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_0_0
  DEF f71 := FALSE <BOOL>
  f72 := f71 <BOOL>
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_0_0
  DEF f73 := TRUE <BOOL>
  f72 := f73 <BOOL>
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_0_0
  LABEL IFEND_2_LEVEL_0_0
  DEF RETURN f74 := f72 <BOOL>
 RETURN
 PROC LABEL IntIsZero
  DEF f77 := FALSE <BOOL>
  DEF f78 := 0 <INT>
  DEF f79 := (PARAM f65) EQ f78 <BOOL>
  DEF f80 := TRUE <BOOL>
  IF f79 EQ f80
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF f81 := TRUE <BOOL>
  f72 := f81 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF f82 := FALSE <BOOL>
  f72 := f82 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN f83 := f72 <BOOL>
 RETURN
 PROC LABEL IntBinaryAsReal
  DEF g37 := 0.0 <REAL>
  DEF g38 := 0 <INT>
  IPARAM g48
  IPARAM (PARAM g43)
  IASM "LDR %r, %a"
  IPARAM g48
  IPARAM f33
  IASM "STR %r, %a"
  DEF RETURN g39 := f33 <REAL>
 RETURN
 PROC LABEL RMul
  DEF k8 := 0.0 <REAL>
  DEF k9 := 0 <INT>
  DEF l0 := 0 <INT>
  DEF l1 := 0 <INT>
  DEF l2 := 0 <INT>
  DEF l3 := 0 <INT>
  DEF l4 := 0 <INT>
  DEF l5 := 0 <INT>
  DEF l6 := 0 <INT>
  DEF l7 := 0 <INT>
  DEF l8 := 0 <INT>
  DEF l9 := 0 <INT>
  DEF m0 := 0 <INT>
  DEF m1 := 0 <INT>
  DEF m2 := 0 <INT>
  DEF m3 := 0 <INT>
  DEF m4 := 0 <INT>
  DEF m5 := 0 <INT>
  DEF m6 := 0 <INT>
  DEF m7 := 0 <INT>
  DEF m8 := 0 <INT>
  DEF m9 := 0 <INT>
  DEF n0 := 0 <INT>
  DEF n1 := 0 <INT>
  DEF n2 := 0 <INT>
  DEF n3 := 0 <INT>
  DEF n4 := 0 <INT>
  DEF n5 := 0 <INT>
  DEF n6 := 0 <INT>
  DEF n7 := 0 <INT>
  DEF n8 := 0 <INT>
  DEF n9 := 0 <INT>
  DEF o0 := 0 <INT>
  DEF o1 := 0 <INT>
  DEF o2 := 0 <INT>
  DEF o3 := 0 <INT>
  DEF o4 := 0 <INT>
  DEF o5 := 0 <INT>
  DEF o6 := 0 <INT>
  CALL RealSign([(PARAM a) -> g58]<REAL>)
  CALL RealSign([(PARAM a) -> g58]<REAL>)
  DEF o7 := (RETURN g57) <INT>
  g59 := o7 <INT>
  CALL RealSign([(PARAM b) -> g58]<REAL>)
  CALL RealSign([(PARAM b) -> g58]<REAL>)
  DEF o8 := (RETURN g57) <INT>
  g60 := o8 <INT>
  CALL RealExponent([(PARAM a) -> g73]<REAL>)
  CALL RealExponent([(PARAM a) -> g73]<REAL>)
  DEF o9 := (RETURN g72) <INT>
  g74 := o9 <INT>
  CALL RealExponent([(PARAM b) -> g73]<REAL>)
  CALL RealExponent([(PARAM b) -> g73]<REAL>)
  DEF p0 := (RETURN g72) <INT>
  g75 := p0 <INT>
  CALL RealMantissa([(PARAM a) -> h10]<REAL>)
  CALL RealMantissa([(PARAM a) -> h10]<REAL>)
  DEF p1 := (RETURN g99) <INT>
  h11 := p1 <INT>
  CALL RealMantissa([(PARAM b) -> h10]<REAL>)
  CALL RealMantissa([(PARAM b) -> h10]<REAL>)
  DEF p2 := (RETURN g99) <INT>
  h12 := p2 <INT>
  CALL IntIsZero([h11 -> f65]<INT>)
  CALL IntIsZero([h11 -> f65]<INT>)
  DEF p3 := (RETURN f83) <BOOL>
  DEF p4 := BNOT p3 <BOOL>
  CALL IntIsZero([h12 -> f65]<INT>)
  CALL IntIsZero([h12 -> f65]<INT>)
  DEF p5 := (RETURN f83) <BOOL>
  DEF p6 := BNOT p5 <BOOL>
  DEF p7 := p4 LAND p6 <BOOL>
  DEF p8 := TRUE <BOOL>
  IF p7 EQ p8
  THEN IFSTAT_10_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_10_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_10_SEQ_0_LEVEL_0_0
  DEF p9 := 1 <INT>
  DEF q0 := h11 IAND p9 <INT>
  DEF q1 := 1 <INT>
  DEF q2 := q0 NE q1 <BOOL>
  DEF q3 := TRUE <BOOL>
  IF q2 EQ q3
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_2_SEQ_0_LEVEL_0_0
  IF q2 EQ q3
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_2_LEVEL_0_0
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0_0
  DEF q4 := 1 <INT>
  DEF q5 := h11 IRSHIFT q4 <INT>
  h11 := q5 <INT>
  DEF q6 := 1 <INT>
  DEF q7 := h11 IAND q6 <INT>
  DEF q8 := 1 <INT>
  DEF q9 := q7 NE q8 <BOOL>
  q2 := q9 <BOOL>
  GOTO WHILECOND_2_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_2_LEVEL_0_0
  DEF r0 := 0 <INT>
  m5 := r0 <INT>
  m9 := h11 <INT>
  CALL IntIsZero([m9 -> f65]<INT>)
  CALL IntIsZero([m9 -> f65]<INT>)
  DEF r1 := (RETURN f83) <BOOL>
  DEF r2 := BNOT r1 <BOOL>
  DEF r3 := TRUE <BOOL>
  IF r2 EQ r3
  THEN WHILESTAT_4_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_4_SEQ_0_LEVEL_0_0
  IF r2 EQ r3
  THEN WHILESTAT_4_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_4_LEVEL_0_0
  LABEL WHILESTAT_4_SEQ_0_LEVEL_0_0
  DEF r4 := 1 <INT>
  DEF r5 := m9 IAND r4 <INT>
  n0 := r5 <INT>
  DEF r6 := 1 <INT>
  DEF r7 := n0 EQ r6 <BOOL>
  DEF r8 := TRUE <BOOL>
  IF r7 EQ r8
  THEN IFSTAT_11_SEQ_0_LEVEL_1
  ELSE IFNEXT_11_SEQ_0_LEVEL_1
  LABEL IFSTAT_11_SEQ_0_LEVEL_1
  m4 := m5 <INT>
  GOTO IFEND_11_LEVEL_1
  LABEL IFNEXT_11_SEQ_0_LEVEL_1
  LABEL IFEND_11_LEVEL_1
  DEF r9 := 1 <INT>
  DEF s0 := m5 IADD r9 <INT>
  m5 := s0 <INT>
  DEF s1 := 1 <INT>
  DEF s2 := m9 IRSHIFT s1 <INT>
  m9 := s2 <INT>
  CALL IntIsZero([m9 -> f65]<INT>)
  CALL IntIsZero([m9 -> f65]<INT>)
  DEF s3 := (RETURN f83) <BOOL>
  DEF s4 := BNOT s3 <BOOL>
  r2 := s4 <BOOL>
  GOTO WHILECOND_4_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_4_LEVEL_0_0
  DEF s5 := 1 <INT>
  DEF s6 := h12 IAND s5 <INT>
  DEF s7 := 1 <INT>
  DEF s8 := s6 NE s7 <BOOL>
  DEF s9 := TRUE <BOOL>
  IF s8 EQ s9
  THEN WHILESTAT_6_SEQ_0_LEVEL_0
  ELSE WHILENEXT_6_SEQ_0_LEVEL_0
  LABEL WHILECOND_6_SEQ_0_LEVEL_0
  IF s8 EQ s9
  THEN WHILESTAT_6_SEQ_0_LEVEL_0
  ELSE WHILEEND_6_LEVEL_0
  LABEL WHILESTAT_6_SEQ_0_LEVEL_0
  DEF t0 := 1 <INT>
  DEF t1 := h12 IRSHIFT t0 <INT>
  h12 := t1 <INT>
  DEF t2 := 1 <INT>
  DEF t3 := h12 IAND t2 <INT>
  DEF t4 := 1 <INT>
  DEF t5 := t3 NE t4 <BOOL>
  s8 := t5 <BOOL>
  GOTO WHILECOND_6_SEQ_0_LEVEL_0
  LABEL WHILENEXT_6_SEQ_0_LEVEL_0
  LABEL WHILEEND_6_LEVEL_0
  DEF t6 := 0 <INT>
  m7 := t6 <INT>
  m8 := h12 <INT>
  CALL IntIsZero([m8 -> f65]<INT>)
  CALL IntIsZero([m8 -> f65]<INT>)
  DEF t7 := (RETURN f83) <BOOL>
  DEF t8 := BNOT t7 <BOOL>
  DEF t9 := TRUE <BOOL>
  IF t8 EQ t9
  THEN WHILESTAT_8_SEQ_0_LEVEL_0
  ELSE WHILENEXT_8_SEQ_0_LEVEL_0
  LABEL WHILECOND_8_SEQ_0_LEVEL_0
  IF t8 EQ t9
  THEN WHILESTAT_8_SEQ_0_LEVEL_0
  ELSE WHILEEND_8_LEVEL_0
  LABEL WHILESTAT_8_SEQ_0_LEVEL_0
  DEF u0 := 1 <INT>
  DEF u1 := m8 IAND u0 <INT>
  n1 := u1 <INT>
  DEF u2 := 1 <INT>
  DEF u3 := n1 EQ u2 <BOOL>
  DEF u4 := TRUE <BOOL>
  IF u3 EQ u4
  THEN IFSTAT_12_SEQ_0_LEVEL_1
  ELSE IFNEXT_12_SEQ_0_LEVEL_1
  LABEL IFSTAT_12_SEQ_0_LEVEL_1
  m6 := m7 <INT>
  GOTO IFEND_12_LEVEL_1
  LABEL IFNEXT_12_SEQ_0_LEVEL_1
  LABEL IFEND_12_LEVEL_1
  DEF u5 := 1 <INT>
  DEF u6 := m7 IADD u5 <INT>
  m7 := u6 <INT>
  DEF u7 := 1 <INT>
  DEF u8 := m8 IRSHIFT u7 <INT>
  m8 := u8 <INT>
  CALL IntIsZero([m8 -> f65]<INT>)
  CALL IntIsZero([m8 -> f65]<INT>)
  DEF u9 := (RETURN f83) <BOOL>
  DEF v0 := BNOT u9 <BOOL>
  t8 := v0 <BOOL>
  GOTO WHILECOND_8_SEQ_0_LEVEL_0
  LABEL WHILENEXT_8_SEQ_0_LEVEL_0
  LABEL WHILEEND_8_LEVEL_0
  DEF v1 := m4 IADD m6 <INT>
  n2 := v1 <INT>
  DEF v2 := g59 NE g60 <BOOL>
  DEF v3 := TRUE <BOOL>
  IF v2 EQ v3
  THEN IFSTAT_13_SEQ_0_LEVEL_1
  ELSE IFNEXT_13_SEQ_0_LEVEL_1
  LABEL IFSTAT_13_SEQ_0_LEVEL_1
  DEF v4 := 1 <INT>
  h13 := v4 <INT>
  GOTO IFEND_13_LEVEL_1
  LABEL IFNEXT_13_SEQ_0_LEVEL_1
  DEF v5 := 0 <INT>
  h13 := v5 <INT>
  GOTO IFEND_13_LEVEL_1
  LABEL IFNEXT_13_SEQ_1_LEVEL_1
  LABEL IFEND_13_LEVEL_1
  DEF v6 := g74 IADD g75 <INT>
  h14 := v6 <INT>
  IPARAM n4
  IPARAM n3
  IPARAM h11
  IPARAM h12
  IASM "MULL %r, %r, %r, %r"
  IPARAM n3
  IPARAM n3
  IASM "STR %r, %a"
  IPARAM n4
  IPARAM n4
  IASM "STR %r, %a"
  DEF v7 := 0 <INT>
  h15 := v7 <INT>
  n5 := n3 <INT>
  n6 := n4 <INT>
  CALL IntIsZero([n5 -> f65]<INT>)
  CALL IntIsZero([n5 -> f65]<INT>)
  DEF v8 := (RETURN f83) <BOOL>
  DEF v9 := BNOT v8 <BOOL>
  DEF w0 := TRUE <BOOL>
  IF v9 EQ w0
  THEN WHILESTAT_10_SEQ_0_LEVEL_0
  ELSE WHILENEXT_10_SEQ_0_LEVEL_0
  LABEL WHILECOND_10_SEQ_0_LEVEL_0
  IF v9 EQ w0
  THEN WHILESTAT_10_SEQ_0_LEVEL_0
  ELSE WHILEEND_10_LEVEL_0
  LABEL WHILESTAT_10_SEQ_0_LEVEL_0
  DEF w1 := 1 <INT>
  DEF w2 := n6 IAND w1 <INT>
  m2 := w2 <INT>
  DEF w3 := 1 <INT>
  DEF w4 := m2 EQ w3 <BOOL>
  DEF w5 := TRUE <BOOL>
  IF w4 EQ w5
  THEN IFSTAT_14_SEQ_0_LEVEL_1
  ELSE IFNEXT_14_SEQ_0_LEVEL_1
  LABEL IFSTAT_14_SEQ_0_LEVEL_1
  h16 := h15 <INT>
  GOTO IFEND_14_LEVEL_1
  LABEL IFNEXT_14_SEQ_0_LEVEL_1
  LABEL IFEND_14_LEVEL_1
  DEF w6 := 1 <INT>
  DEF w7 := h15 IADD w6 <INT>
  h15 := w7 <INT>
  DEF w8 := 1 <INT>
  DEF w9 := n5 IAND w8 <INT>
  n7 := w9 <INT>
  DEF x0 := 1 <INT>
  DEF x1 := n5 IRSHIFT x0 <INT>
  n5 := x1 <INT>
  DEF x2 := 1 <INT>
  DEF x3 := n6 IRSHIFT x2 <INT>
  n6 := x3 <INT>
  DEF x4 := 30 <INT>
  DEF x5 := n7 ILSHIFT x4 <INT>
  DEF x6 := n6 IOR x5 <INT>
  n6 := x6 <INT>
  CALL IntIsZero([n5 -> f65]<INT>)
  CALL IntIsZero([n5 -> f65]<INT>)
  DEF x7 := (RETURN f83) <BOOL>
  DEF x8 := BNOT x7 <BOOL>
  v9 := x8 <BOOL>
  GOTO WHILECOND_10_SEQ_0_LEVEL_0
  LABEL WHILENEXT_10_SEQ_0_LEVEL_0
  LABEL WHILEEND_10_LEVEL_0
  CALL IntIsZero([n6 -> f65]<INT>)
  CALL IntIsZero([n6 -> f65]<INT>)
  DEF x9 := (RETURN f83) <BOOL>
  DEF y0 := BNOT x9 <BOOL>
  DEF y1 := TRUE <BOOL>
  IF y0 EQ y1
  THEN WHILESTAT_12_SEQ_0_LEVEL_0
  ELSE WHILENEXT_12_SEQ_0_LEVEL_0
  LABEL WHILECOND_12_SEQ_0_LEVEL_0
  IF y0 EQ y1
  THEN WHILESTAT_12_SEQ_0_LEVEL_0
  ELSE WHILEEND_12_LEVEL_0
  LABEL WHILESTAT_12_SEQ_0_LEVEL_0
  DEF y2 := 1 <INT>
  DEF y3 := n6 IAND y2 <INT>
  m2 := y3 <INT>
  DEF y4 := 1 <INT>
  DEF y5 := m2 EQ y4 <BOOL>
  DEF y6 := TRUE <BOOL>
  IF y5 EQ y6
  THEN IFSTAT_15_SEQ_0_LEVEL_1
  ELSE IFNEXT_15_SEQ_0_LEVEL_1
  LABEL IFSTAT_15_SEQ_0_LEVEL_1
  h16 := h15 <INT>
  GOTO IFEND_15_LEVEL_1
  LABEL IFNEXT_15_SEQ_0_LEVEL_1
  LABEL IFEND_15_LEVEL_1
  DEF y7 := 1 <INT>
  DEF y8 := h15 IADD y7 <INT>
  h15 := y8 <INT>
  DEF y9 := 1 <INT>
  DEF z0 := n6 IRSHIFT y9 <INT>
  n6 := z0 <INT>
  CALL IntIsZero([n6 -> f65]<INT>)
  CALL IntIsZero([n6 -> f65]<INT>)
  DEF z1 := (RETURN f83) <BOOL>
  DEF z2 := BNOT z1 <BOOL>
  y0 := z2 <BOOL>
  GOTO WHILECOND_12_SEQ_0_LEVEL_0
  LABEL WHILENEXT_12_SEQ_0_LEVEL_0
  LABEL WHILEEND_12_LEVEL_0
  DEF z3 := 23 <INT>
  DEF z4 := h16 ISUB z3 <INT>
  n8 := z4 <INT>
  DEF z5 := 31 <INT>
  DEF z6 := n8 LT z5 <BOOL>
  DEF z7 := 0 <INT>
  DEF z8 := n8 GT z7 <BOOL>
  DEF z9 := z6 LAND z8 <BOOL>
  DEF A0 := TRUE <BOOL>
  IF z9 EQ A0
  THEN IFSTAT_16_SEQ_0_LEVEL_1
  ELSE IFNEXT_16_SEQ_0_LEVEL_1
  LABEL IFSTAT_16_SEQ_0_LEVEL_1
  DEF A1 := 1 <INT>
  DEF A2 := n8 ISUB A1 <INT>
  DEF A3 := n4 IRSHIFT A2 <INT>
  DEF A4 := 1 <INT>
  DEF A5 := A3 IAND A4 <INT>
  n9 := A5 <INT>
  DEF A6 := 1 <INT>
  DEF A7 := A6 ILSHIFT n8 <INT>
  DEF A8 := 1 <INT>
  DEF A9 := A7 ISUB A8 <INT>
  DEF B0 := INOT A9 <INT>
  o0 := B0 <INT>
  DEF B1 := n4 IAND o0 <INT>
  n4 := B1 <INT>
  DEF B2 := 1 <INT>
  DEF B3 := n9 EQ B2 <BOOL>
  DEF B4 := TRUE <BOOL>
  IF B3 EQ B4
  THEN IFSTAT_17_SEQ_0_LEVEL_2
  ELSE IFNEXT_17_SEQ_0_LEVEL_2
  LABEL IFSTAT_17_SEQ_0_LEVEL_2
  DEF B5 := 1 <INT>
  DEF B6 := B5 ILSHIFT n8 <INT>
  DEF B7 := n4 IADD B6 <INT>
  n4 := B7 <INT>
  DEF B8 := 31 <INT>
  DEF B9 := n4 IRSHIFT B8 <INT>
  DEF C0 := 1 <INT>
  DEF C1 := B9 IAND C0 <INT>
  o2 := C1 <INT>
  DEF C2 := 1 <INT>
  DEF C3 := o2 EQ C2 <BOOL>
  DEF C4 := TRUE <BOOL>
  IF C3 EQ C4
  THEN IFSTAT_18_SEQ_0_LEVEL_3
  ELSE IFNEXT_18_SEQ_0_LEVEL_3
  LABEL IFSTAT_18_SEQ_0_LEVEL_3
  DEF C5 := 1 <INT>
  DEF C6 := 31 <INT>
  DEF C7 := C5 ILSHIFT C6 <INT>
  DEF C8 := INOT C7 <INT>
  DEF C9 := n4 IAND C8 <INT>
  n4 := C9 <INT>
  DEF D0 := 1 <INT>
  DEF D1 := n3 IADD D0 <INT>
  n3 := D1 <INT>
  GOTO IFEND_18_LEVEL_3
  LABEL IFNEXT_18_SEQ_0_LEVEL_3
  LABEL IFEND_18_LEVEL_3
  GOTO IFEND_17_LEVEL_2
  LABEL IFNEXT_17_SEQ_0_LEVEL_2
  LABEL IFEND_17_LEVEL_2
  GOTO IFEND_16_LEVEL_1
  LABEL IFNEXT_16_SEQ_0_LEVEL_1
  DEF D2 := 31 <INT>
  DEF D3 := n8 EQ D2 <BOOL>
  DEF D4 := TRUE <BOOL>
  IF D3 EQ D4
  THEN IFSTAT_16_SEQ_1_LEVEL_1
  ELSE IFNEXT_16_SEQ_1_LEVEL_1
  LABEL IFSTAT_16_SEQ_1_LEVEL_1
  DEF D5 := 30 <INT>
  DEF D6 := n4 IRSHIFT D5 <INT>
  DEF D7 := 1 <INT>
  DEF D8 := D6 IAND D7 <INT>
  n9 := D8 <INT>
  DEF D9 := 0 <INT>
  n4 := D9 <INT>
  DEF E0 := 1 <INT>
  DEF E1 := n9 EQ E0 <BOOL>
  DEF E2 := TRUE <BOOL>
  IF E1 EQ E2
  THEN IFSTAT_21_SEQ_0_LEVEL_2
  ELSE IFNEXT_21_SEQ_0_LEVEL_2
  LABEL IFSTAT_21_SEQ_0_LEVEL_2
  DEF E3 := 1 <INT>
  DEF E4 := n3 IADD E3 <INT>
  n3 := E4 <INT>
  GOTO IFEND_21_LEVEL_2
  LABEL IFNEXT_21_SEQ_0_LEVEL_2
  LABEL IFEND_21_LEVEL_2
  GOTO IFEND_16_LEVEL_1
  LABEL IFNEXT_16_SEQ_1_LEVEL_1
  DEF E5 := 31 <INT>
  DEF E6 := n8 GT E5 <BOOL>
  DEF E7 := TRUE <BOOL>
  IF E6 EQ E7
  THEN IFSTAT_16_SEQ_2_LEVEL_1
  ELSE IFNEXT_16_SEQ_2_LEVEL_1
  LABEL IFSTAT_16_SEQ_2_LEVEL_1
  DEF E8 := 32 <INT>
  DEF E9 := n8 ISUB E8 <INT>
  DEF F0 := n3 IRSHIFT E9 <INT>
  DEF F1 := 1 <INT>
  DEF F2 := F0 IAND F1 <INT>
  n9 := F2 <INT>
  DEF F3 := 1 <INT>
  DEF F4 := 31 <INT>
  DEF F5 := n8 ISUB F4 <INT>
  DEF F6 := F3 ILSHIFT F5 <INT>
  DEF F7 := 1 <INT>
  DEF F8 := F6 ISUB F7 <INT>
  DEF F9 := INOT F8 <INT>
  o1 := F9 <INT>
  DEF G0 := n3 IAND o1 <INT>
  n3 := G0 <INT>
  DEF G1 := 0 <INT>
  n4 := G1 <INT>
  DEF G2 := 1 <INT>
  DEF G3 := n9 EQ G2 <BOOL>
  DEF G4 := TRUE <BOOL>
  IF G3 EQ G4
  THEN IFSTAT_23_SEQ_0_LEVEL_2
  ELSE IFNEXT_23_SEQ_0_LEVEL_2
  LABEL IFSTAT_23_SEQ_0_LEVEL_2
  DEF G5 := 1 <INT>
  DEF G6 := 31 <INT>
  DEF G7 := n8 ISUB G6 <INT>
  DEF G8 := G5 ILSHIFT G7 <INT>
  DEF G9 := n3 IADD G8 <INT>
  n3 := G9 <INT>
  GOTO IFEND_23_LEVEL_2
  LABEL IFNEXT_23_SEQ_0_LEVEL_2
  LABEL IFEND_23_LEVEL_2
  GOTO IFEND_16_LEVEL_1
  LABEL IFNEXT_16_SEQ_2_LEVEL_1
  LABEL IFEND_16_LEVEL_1
  DEF H0 := 23 <INT>
  DEF H1 := n2 LT H0 <BOOL>
  DEF H2 := TRUE <BOOL>
  IF H1 EQ H2
  THEN IFSTAT_25_SEQ_0_LEVEL_1
  ELSE IFNEXT_25_SEQ_0_LEVEL_1
  LABEL IFSTAT_25_SEQ_0_LEVEL_1
  DEF H3 := 23 <INT>
  DEF H4 := H3 ISUB n2 <INT>
  h17 := H4 <INT>
  DEF H5 := n4 ILSHIFT h17 <INT>
  n4 := H5 <INT>
  GOTO IFEND_25_LEVEL_1
  LABEL IFNEXT_25_SEQ_0_LEVEL_1
  DEF H6 := 30 <INT>
  DEF H7 := n2 GT H6 <BOOL>
  DEF H8 := TRUE <BOOL>
  IF H7 EQ H8
  THEN IFSTAT_25_SEQ_1_LEVEL_1
  ELSE IFNEXT_25_SEQ_1_LEVEL_1
  LABEL IFSTAT_25_SEQ_1_LEVEL_1
  DEF H9 := 23 <INT>
  DEF I0 := n2 ISUB H9 <INT>
  h17 := I0 <INT>
  DEF I1 := 1 <INT>
  DEF I2 := I1 ILSHIFT h17 <INT>
  DEF I3 := 1 <INT>
  DEF I4 := I2 ISUB I3 <INT>
  o6 := I4 <INT>
  DEF I5 := n3 IAND o6 <INT>
  o3 := I5 <INT>
  DEF I6 := n3 IRSHIFT h17 <INT>
  n3 := I6 <INT>
  DEF I7 := n4 IRSHIFT h17 <INT>
  n4 := I7 <INT>
  DEF I8 := 30 <INT>
  DEF I9 := I8 ISUB h17 <INT>
  DEF J0 := 1 <INT>
  DEF J1 := I9 IADD J0 <INT>
  DEF J2 := o3 ILSHIFT J1 <INT>
  DEF J3 := n4 IOR J2 <INT>
  n4 := J3 <INT>
  GOTO IFEND_25_LEVEL_1
  LABEL IFNEXT_25_SEQ_1_LEVEL_1
  DEF J4 := 23 <INT>
  DEF J5 := n2 GT J4 <BOOL>
  DEF J6 := TRUE <BOOL>
  IF J5 EQ J6
  THEN IFSTAT_25_SEQ_2_LEVEL_1
  ELSE IFNEXT_25_SEQ_2_LEVEL_1
  LABEL IFSTAT_25_SEQ_2_LEVEL_1
  DEF J7 := 23 <INT>
  DEF J8 := n2 ISUB J7 <INT>
  h17 := J8 <INT>
  DEF J9 := n4 IRSHIFT h17 <INT>
  n4 := J9 <INT>
  GOTO IFEND_25_LEVEL_1
  LABEL IFNEXT_25_SEQ_2_LEVEL_1
  LABEL IFEND_25_LEVEL_1
  DEF K0 := 0 <INT>
  h15 := K0 <INT>
  n5 := n3 <INT>
  n6 := n4 <INT>
  CALL IntIsZero([n5 -> f65]<INT>)
  CALL IntIsZero([n5 -> f65]<INT>)
  DEF K1 := (RETURN f83) <BOOL>
  DEF K2 := BNOT K1 <BOOL>
  DEF K3 := TRUE <BOOL>
  IF K2 EQ K3
  THEN WHILESTAT_14_SEQ_0_LEVEL_0
  ELSE WHILENEXT_14_SEQ_0_LEVEL_0
  LABEL WHILECOND_14_SEQ_0_LEVEL_0
  IF K2 EQ K3
  THEN WHILESTAT_14_SEQ_0_LEVEL_0
  ELSE WHILEEND_14_LEVEL_0
  LABEL WHILESTAT_14_SEQ_0_LEVEL_0
  DEF K4 := 1 <INT>
  DEF K5 := n6 IAND K4 <INT>
  m2 := K5 <INT>
  DEF K6 := 1 <INT>
  DEF K7 := m2 EQ K6 <BOOL>
  DEF K8 := TRUE <BOOL>
  IF K7 EQ K8
  THEN IFSTAT_26_SEQ_0_LEVEL_1
  ELSE IFNEXT_26_SEQ_0_LEVEL_1
  LABEL IFSTAT_26_SEQ_0_LEVEL_1
  h16 := h15 <INT>
  GOTO IFEND_26_LEVEL_1
  LABEL IFNEXT_26_SEQ_0_LEVEL_1
  LABEL IFEND_26_LEVEL_1
  DEF K9 := 1 <INT>
  DEF L0 := h15 IADD K9 <INT>
  h15 := L0 <INT>
  DEF L1 := 1 <INT>
  DEF L2 := n5 IAND L1 <INT>
  n7 := L2 <INT>
  DEF L3 := 1 <INT>
  DEF L4 := n5 IRSHIFT L3 <INT>
  n5 := L4 <INT>
  DEF L5 := 1 <INT>
  DEF L6 := n6 IRSHIFT L5 <INT>
  n6 := L6 <INT>
  DEF L7 := 30 <INT>
  DEF L8 := n7 ILSHIFT L7 <INT>
  DEF L9 := n6 IOR L8 <INT>
  n6 := L9 <INT>
  CALL IntIsZero([n5 -> f65]<INT>)
  CALL IntIsZero([n5 -> f65]<INT>)
  DEF M0 := (RETURN f83) <BOOL>
  DEF M1 := BNOT M0 <BOOL>
  K2 := M1 <BOOL>
  GOTO WHILECOND_14_SEQ_0_LEVEL_0
  LABEL WHILENEXT_14_SEQ_0_LEVEL_0
  LABEL WHILEEND_14_LEVEL_0
  CALL IntIsZero([n6 -> f65]<INT>)
  CALL IntIsZero([n6 -> f65]<INT>)
  DEF M2 := (RETURN f83) <BOOL>
  DEF M3 := BNOT M2 <BOOL>
  DEF M4 := TRUE <BOOL>
  IF M3 EQ M4
  THEN WHILESTAT_16_SEQ_0_LEVEL_0
  ELSE WHILENEXT_16_SEQ_0_LEVEL_0
  LABEL WHILECOND_16_SEQ_0_LEVEL_0
  IF M3 EQ M4
  THEN WHILESTAT_16_SEQ_0_LEVEL_0
  ELSE WHILEEND_16_LEVEL_0
  LABEL WHILESTAT_16_SEQ_0_LEVEL_0
  DEF M5 := 1 <INT>
  DEF M6 := n6 IAND M5 <INT>
  m2 := M6 <INT>
  DEF M7 := 1 <INT>
  DEF M8 := m2 EQ M7 <BOOL>
  DEF M9 := TRUE <BOOL>
  IF M8 EQ M9
  THEN IFSTAT_27_SEQ_0_LEVEL_1
  ELSE IFNEXT_27_SEQ_0_LEVEL_1
  LABEL IFSTAT_27_SEQ_0_LEVEL_1
  h16 := h15 <INT>
  GOTO IFEND_27_LEVEL_1
  LABEL IFNEXT_27_SEQ_0_LEVEL_1
  LABEL IFEND_27_LEVEL_1
  DEF N0 := 1 <INT>
  DEF N1 := h15 IADD N0 <INT>
  h15 := N1 <INT>
  DEF N2 := 1 <INT>
  DEF N3 := n6 IRSHIFT N2 <INT>
  n6 := N3 <INT>
  CALL IntIsZero([n6 -> f65]<INT>)
  CALL IntIsZero([n6 -> f65]<INT>)
  DEF N4 := (RETURN f83) <BOOL>
  DEF N5 := BNOT N4 <BOOL>
  M3 := N5 <BOOL>
  GOTO WHILECOND_16_SEQ_0_LEVEL_0
  LABEL WHILENEXT_16_SEQ_0_LEVEL_0
  LABEL WHILEEND_16_LEVEL_0
  DEF N6 := 30 <INT>
  DEF N7 := h16 GT N6 <BOOL>
  DEF N8 := TRUE <BOOL>
  IF N7 EQ N8
  THEN IFSTAT_28_SEQ_0_LEVEL_1
  ELSE IFNEXT_28_SEQ_0_LEVEL_1
  LABEL IFSTAT_28_SEQ_0_LEVEL_1
  DEF N9 := 1 <INT>
  DEF O0 := 30 <INT>
  DEF O1 := h16 ISUB O0 <INT>
  DEF O2 := N9 ILSHIFT O1 <INT>
  DEF O3 := 1 <INT>
  DEF O4 := O2 ISUB O3 <INT>
  o6 := O4 <INT>
  DEF O5 := n3 IAND o6 <INT>
  o3 := O5 <INT>
  DEF O6 := 30 <INT>
  DEF O7 := 23 <INT>
  DEF O8 := 30 <INT>
  DEF O9 := h16 ISUB O8 <INT>
  DEF P0 := O7 ISUB O9 <INT>
  DEF P1 := O6 ISUB P0 <INT>
  DEF P2 := n4 IRSHIFT P1 <INT>
  n4 := P2 <INT>
  DEF P3 := 23 <INT>
  DEF P4 := 30 <INT>
  DEF P5 := h16 ISUB P4 <INT>
  DEF P6 := P3 ISUB P5 <INT>
  DEF P7 := 1 <INT>
  DEF P8 := P6 IADD P7 <INT>
  DEF P9 := o3 ILSHIFT P8 <INT>
  DEF Q0 := n4 IOR P9 <INT>
  h18 := Q0 <INT>
  DEF Q1 := h14 IADD h17 <INT>
  h14 := Q1 <INT>
  GOTO IFEND_28_LEVEL_1
  LABEL IFNEXT_28_SEQ_0_LEVEL_1
  DEF Q2 := 23 <INT>
  DEF Q3 := h16 GT Q2 <BOOL>
  DEF Q4 := TRUE <BOOL>
  IF Q3 EQ Q4
  THEN IFSTAT_28_SEQ_1_LEVEL_1
  ELSE IFNEXT_28_SEQ_1_LEVEL_1
  LABEL IFSTAT_28_SEQ_1_LEVEL_1
  DEF Q5 := 23 <INT>
  DEF Q6 := h16 ISUB Q5 <INT>
  h17 := Q6 <INT>
  DEF Q7 := n4 IRSHIFT h17 <INT>
  h18 := Q7 <INT>
  DEF Q8 := h14 IADD h17 <INT>
  h14 := Q8 <INT>
  GOTO IFEND_28_LEVEL_1
  LABEL IFNEXT_28_SEQ_1_LEVEL_1
  DEF Q9 := 23 <INT>
  DEF R0 := h16 LT Q9 <BOOL>
  DEF R1 := TRUE <BOOL>
  IF R0 EQ R1
  THEN IFSTAT_28_SEQ_2_LEVEL_1
  ELSE IFNEXT_28_SEQ_2_LEVEL_1
  LABEL IFSTAT_28_SEQ_2_LEVEL_1
  DEF R2 := 23 <INT>
  DEF R3 := R2 ISUB h16 <INT>
  h17 := R3 <INT>
  DEF R4 := n4 ILSHIFT h17 <INT>
  h18 := R4 <INT>
  DEF R5 := h14 ISUB h17 <INT>
  h14 := R5 <INT>
  GOTO IFEND_28_LEVEL_1
  LABEL IFNEXT_28_SEQ_2_LEVEL_1
  DEF R6 := 23 <INT>
  DEF R7 := h16 EQ R6 <BOOL>
  DEF R8 := TRUE <BOOL>
  IF R7 EQ R8
  THEN IFSTAT_28_SEQ_3_LEVEL_1
  ELSE IFNEXT_28_SEQ_3_LEVEL_1
  LABEL IFSTAT_28_SEQ_3_LEVEL_1
  h18 := n4 <INT>
  GOTO IFEND_28_LEVEL_1
  LABEL IFNEXT_28_SEQ_3_LEVEL_1
  LABEL IFEND_28_LEVEL_1
  DEF R9 := h14 IADD (GLOBAL j14) <INT>
  h14 := R9 <INT>
  DEF S0 := 255 <INT>
  DEF S1 := h14 IAND S0 <INT>
  DEF S2 := 23 <INT>
  DEF S3 := S1 ILSHIFT S2 <INT>
  h20 := S3 <INT>
  DEF S4 := 1 <INT>
  DEF S5 := h13 IAND S4 <INT>
  DEF S6 := 31 <INT>
  DEF S7 := S5 ILSHIFT S6 <INT>
  DEF S8 := h20 IOR S7 <INT>
  h20 := S8 <INT>
  DEF S9 := 8388607 <INT>
  DEF T0 := h18 IAND S9 <INT>
  DEF T1 := h20 IOR T0 <INT>
  h20 := T1 <INT>
  GOTO IFEND_10_LEVEL_0_0
  LABEL IFNEXT_10_SEQ_0_LEVEL_0_0
  LABEL IFEND_10_LEVEL_0_0
  CALL IntBinaryAsReal([h20 -> g40]<INT>)
  CALL IntBinaryAsReal([h20 -> g40]<INT>)
  DEF T2 := (RETURN g39) <REAL>
  h21 := T2 <REAL>
  DEF RETURN h22 := h21 <REAL>
 RETURN
 PROC LABEL RealSign
  DEF g45 := 0 <INT>
  DEF g46 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g94) -> g50]<REAL>)
  CALL RealBinaryAsInt([(PARAM g94) -> g50]<REAL>)
  DEF g51 := (RETURN g49) <INT>
  g52 := g51 <INT>
  DEF g53 := 31 <INT>
  DEF g54 := g52 IRSHIFT g53 <INT>
  DEF g55 := 1 <INT>
  DEF g56 := g54 IAND g55 <INT>
  f72 := g56 <INT>
  DEF RETURN g57 := f72 <INT>
 RETURN
 PROC LABEL RealBinaryAsInt
  DEF g47 := 0 <INT>
  DEF g48 := 0.0 <REAL>
  IPARAM g48
  IPARAM (PARAM k)
  IASM "LDR %r, %a"
  IPARAM g48
  IPARAM f33
  IASM "STR %r, %a"
  DEF RETURN g49 := f33 <INT>
 RETURN
 PROC LABEL RealExponent
  DEF g61 := 0 <INT>
  DEF g62 := 0 <INT>
  DEF g63 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g94) -> g50]<REAL>)
  CALL RealBinaryAsInt([(PARAM g94) -> g50]<REAL>)
  DEF g64 := (RETURN g49) <INT>
  g52 := g64 <INT>
  DEF g65 := 23 <INT>
  DEF g66 := g52 IRSHIFT g65 <INT>
  DEF g67 := 255 <INT>
  DEF g68 := g66 IAND g67 <INT>
  g63 := g68 <INT>
  DEF g69 := g63 ISUB (GLOBAL j14) <INT>
  f72 := g69 <INT>
  DEF RETURN g72 := f72 <INT>
 RETURN
 PROC LABEL RealMantissa
  DEF g76 := 0 <INT>
  DEF g77 := 0 <INT>
  DEF g78 := 0 <INT>
  DEF g79 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g94) -> g50]<REAL>)
  CALL RealBinaryAsInt([(PARAM g94) -> g50]<REAL>)
  DEF g80 := (RETURN g49) <INT>
  g77 := g80 <INT>
  DEF g81 := 8388607 <INT>
  DEF g82 := g77 IAND g81 <INT>
  g78 := g82 <INT>
  CALL RealIsZero([(PARAM g94) -> g94]<REAL>)
  CALL RealIsZero([(PARAM g94) -> g94]<REAL>)
  DEF g95 := (RETURN g93) <BOOL>
  DEF g96 := TRUE <BOOL>
  IF g95 EQ g96
  THEN IFSTAT_6_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_6_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0_0
  f72 := g78 <INT>
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_0_LEVEL_0_0
  DEF g97 := 8388608 <INT>
  DEF g98 := g78 IOR g97 <INT>
  f72 := g98 <INT>
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_1_LEVEL_0
  LABEL IFEND_6_LEVEL_0_0
  DEF RETURN g99 := f72 <INT>
 RETURN
 PROC LABEL RealIsZero
  DEF f72 := FALSE <BOOL>
  DEF g83 := 0 <INT>
  DEF g84 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g94) -> g50]<REAL>)
  DEF g85 := (RETURN g49) <INT>
  g84 := g85 <INT>
  DEF g86 := 2147483647 <INT>
  DEF g87 := g84 IAND g86 <INT>
  g83 := g87 <INT>
  DEF g88 := 0 <INT>
  DEF g89 := g83 EQ g88 <BOOL>
  DEF g90 := TRUE <BOOL>
  IF g89 EQ g90
  THEN IFSTAT_0_SEQ_0_LEVEL_0_2
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_2
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_2
  DEF g91 := TRUE <BOOL>
  f72 := g91 <BOOL>
  GOTO IFEND_0_LEVEL_0_2
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_2
  DEF g92 := FALSE <BOOL>
  f72 := g92 <BOOL>
  GOTO IFEND_0_LEVEL_0_2
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_2
  LABEL IFEND_0_LEVEL_0_2
  DEF RETURN g93 := f72 <BOOL>
 RETURN
 PROC LABEL Foo
  CALL IntToReal([(GLOBAL f25) -> g43]<INT>)
  DEF h26 := (RETURN g42) <REAL>
  CALL REqualTo([h26 -> h28]<REAL>, [(GLOBAL f27) -> h29]<REAL>)
  DEF h30 := (RETURN h27) <BOOL>
  DEF h31 := h30 <BOOL>
  DEF h32 := 355 <INT>
  DEF h33 := 113 <INT>
  CALL Divide([h32 -> h93]<INT>, [h33 -> h94]<INT>)
  DEF h95 := (RETURN h92) <REAL>
  DEF h96 := h95 <REAL>
  DEF h97 := 0 <INT>
  h97 := (GLOBAL f25) <INT>
  LABEL FORBEG_0_LEVEL_0
  IF h97 GT (PARAM h98)
  THEN FORLOOP_0_LEVEL_0
  ELSE FOREND_0_LEVEL_0
  LABEL FORLOOP_0_LEVEL_0
  CALL Bar()
  DEF i42 := 20 <INT>
  CALL INeg([i42 -> f53]<INT>)
  DEF U := (RETURN f56) <INT>
  h97 := h97 IADD U <INT>
  GOTO FORBEG_0_LEVEL_0
  LABEL FOREND_0_LEVEL_0
  DEF V := 3.1415927 <REAL>
  CALL RGreaterThan([h96 -> i76]<REAL>, [V -> i77]<REAL>)
  DEF i78 := (RETURN i75) <BOOL>
  DEF i79 := h31 LAND i78 <BOOL>
  DEF RETURN i41 := i79 <BOOL>
 RETURN
 PROC LABEL REqualTo
  DEF e76 := FALSE <BOOL>
  DEF e77 := FALSE <BOOL>
  DEF e78 := FALSE <BOOL>
  DEF e79 := 0 <INT>
  DEF e80 := 0 <INT>
  DEF e81 := 0 <INT>
  CALL RealIsZero([(PARAM a) -> g94]<REAL>)
  CALL RealIsZero([(PARAM a) -> g94]<REAL>)
  DEF e82 := (RETURN g93) <BOOL>
  b61 := e82 <BOOL>
  CALL RealIsZero([(PARAM b) -> g94]<REAL>)
  CALL RealIsZero([(PARAM b) -> g94]<REAL>)
  DEF e83 := (RETURN g93) <BOOL>
  b62 := e83 <BOOL>
  DEF e84 := b61 LAND b62 <BOOL>
  DEF e85 := TRUE <BOOL>
  IF e84 EQ e85
  THEN IFSTAT_84_SEQ_0_LEVEL_0
  ELSE IFNEXT_84_SEQ_0_LEVEL_0
  LABEL IFSTAT_84_SEQ_0_LEVEL_0
  DEF e86 := TRUE <BOOL>
  h21 := e86 <BOOL>
  GOTO IFEND_84_LEVEL_0
  LABEL IFNEXT_84_SEQ_0_LEVEL_0
  CALL RealBinaryAsInt([(PARAM a) -> g50]<REAL>)
  CALL RealBinaryAsInt([(PARAM a) -> g50]<REAL>)
  DEF e87 := (RETURN g49) <INT>
  e80 := e87 <INT>
  CALL RealBinaryAsInt([(PARAM b) -> g50]<REAL>)
  CALL RealBinaryAsInt([(PARAM b) -> g50]<REAL>)
  DEF e88 := (RETURN g49) <INT>
  e81 := e88 <INT>
  DEF e89 := e80 IXOR e81 <INT>
  e79 := e89 <INT>
  DEF e90 := 0 <INT>
  DEF e91 := e79 EQ e90 <BOOL>
  DEF e92 := TRUE <BOOL>
  IF e91 EQ e92
  THEN IFSTAT_85_SEQ_0_LEVEL_1
  ELSE IFNEXT_85_SEQ_0_LEVEL_1
  LABEL IFSTAT_85_SEQ_0_LEVEL_1
  DEF e93 := TRUE <BOOL>
  h21 := e93 <BOOL>
  GOTO IFEND_85_LEVEL_1
  LABEL IFNEXT_85_SEQ_0_LEVEL_1
  DEF e94 := FALSE <BOOL>
  h21 := e94 <BOOL>
  GOTO IFEND_85_LEVEL_1
  LABEL IFNEXT_85_SEQ_1_LEVEL_1
  LABEL IFEND_85_LEVEL_1
  GOTO IFEND_84_LEVEL_0
  LABEL IFNEXT_84_SEQ_1_LEVEL_0
  LABEL IFEND_84_LEVEL_0
  DEF RETURN h27 := h21 <BOOL>
 RETURN
 PROC LABEL Divide
  DEF h34 := 0.0 <REAL>
  DEF h35 := 0.0 <REAL>
  DEF h36 := 0.0 <REAL>
  CALL IntToReal([(PARAM h48) -> g43]<INT>)
  DEF h37 := (RETURN g42) <REAL>
  h35 := h37 <REAL>
  CALL IntToReal([(PARAM h76) -> g43]<INT>)
  CALL IntToReal([(PARAM h76) -> g43]<INT>)
  DEF h38 := (RETURN g42) <REAL>
  h36 := h38 <REAL>
  CALL RDivide([h35 -> h89]<REAL>, [h36 -> h90]<REAL>)
  DEF h91 := (RETURN h88) <REAL>
  h34 := h91 <REAL>
  DEF RETURN h92 := h34 <REAL>
 RETURN
 PROC LABEL RDivide
  DEF T3 := 0.0 <REAL>
  DEF T4 := 0 <INT>
  DEF T5 := 0 <INT>
  DEF T6 := 0 <INT>
  DEF T7 := 0 <INT>
  DEF T8 := 0 <INT>
  DEF T9 := 0 <INT>
  DEF U0 := 0 <INT>
  DEF U1 := 0 <INT>
  DEF U2 := 0 <INT>
  DEF U3 := 0 <INT>
  DEF U4 := 0 <INT>
  DEF U5 := 0 <INT>
  DEF U6 := 0 <INT>
  DEF U7 := 0 <INT>
  DEF U8 := 0 <INT>
  DEF U9 := 0 <INT>
  DEF V0 := 0 <INT>
  DEF V1 := 0 <INT>
  DEF V2 := 0 <INT>
  DEF V3 := 0 <INT>
  DEF V4 := 0 <INT>
  DEF V5 := 0 <INT>
  DEF V6 := 0 <INT>
  DEF V7 := 0 <INT>
  DEF V8 := 0 <INT>
  DEF V9 := 0 <INT>
  DEF W0 := 0 <INT>
  DEF W1 := 0 <INT>
  DEF W2 := 0 <INT>
  DEF W3 := 0 <INT>
  DEF W4 := 0 <INT>
  DEF W5 := 0 <INT>
  DEF W6 := 0 <INT>
  DEF W7 := 0 <INT>
  DEF W8 := 0 <INT>
  CALL RealSign([(PARAM a) -> g58]<REAL>)
  CALL RealSign([(PARAM a) -> g58]<REAL>)
  DEF W9 := (RETURN g57) <INT>
  g59 := W9 <INT>
  CALL RealSign([(PARAM b) -> g58]<REAL>)
  CALL RealSign([(PARAM b) -> g58]<REAL>)
  DEF X0 := (RETURN g57) <INT>
  g60 := X0 <INT>
  CALL RealExponent([(PARAM a) -> g73]<REAL>)
  CALL RealExponent([(PARAM a) -> g73]<REAL>)
  DEF X1 := (RETURN g72) <INT>
  g74 := X1 <INT>
  CALL RealExponent([(PARAM b) -> g73]<REAL>)
  CALL RealExponent([(PARAM b) -> g73]<REAL>)
  DEF X2 := (RETURN g72) <INT>
  g75 := X2 <INT>
  CALL RealMantissa([(PARAM a) -> h10]<REAL>)
  CALL RealMantissa([(PARAM a) -> h10]<REAL>)
  DEF X3 := (RETURN g99) <INT>
  h11 := X3 <INT>
  CALL RealMantissa([(PARAM b) -> h10]<REAL>)
  CALL RealMantissa([(PARAM b) -> h10]<REAL>)
  DEF X4 := (RETURN g99) <INT>
  h12 := X4 <INT>
  CALL IntIsZero([h11 -> f65]<INT>)
  CALL IntIsZero([h11 -> f65]<INT>)
  DEF X5 := (RETURN f83) <BOOL>
  CALL IntIsZero([h12 -> f65]<INT>)
  CALL IntIsZero([h12 -> f65]<INT>)
  DEF X6 := (RETURN f83) <BOOL>
  DEF X7 := X5 LAND X6 <BOOL>
  DEF X8 := TRUE <BOOL>
  IF X7 EQ X8
  THEN IFSTAT_30_SEQ_0_LEVEL_0
  ELSE IFNEXT_30_SEQ_0_LEVEL_0
  LABEL IFSTAT_30_SEQ_0_LEVEL_0
  DEF X9 := 1065353216 <INT>
  h20 := X9 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_0_LEVEL_0
  CALL IntIsZero([h11 -> f65]<INT>)
  CALL IntIsZero([h11 -> f65]<INT>)
  DEF Y0 := (RETURN f83) <BOOL>
  DEF Y1 := BNOT Y0 <BOOL>
  CALL IntIsZero([h12 -> f65]<INT>)
  CALL IntIsZero([h12 -> f65]<INT>)
  DEF Y2 := (RETURN f83) <BOOL>
  DEF Y3 := Y1 LAND Y2 <BOOL>
  DEF Y4 := TRUE <BOOL>
  IF Y3 EQ Y4
  THEN IFSTAT_30_SEQ_1_LEVEL_0
  ELSE IFNEXT_30_SEQ_1_LEVEL_0
  LABEL IFSTAT_30_SEQ_1_LEVEL_0
  DEF Y5 := 2139095040 <INT>
  h20 := Y5 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_1_LEVEL_0
  CALL IntIsZero([h11 -> f65]<INT>)
  CALL IntIsZero([h11 -> f65]<INT>)
  DEF Y6 := (RETURN f83) <BOOL>
  CALL IntIsZero([h12 -> f65]<INT>)
  CALL IntIsZero([h12 -> f65]<INT>)
  DEF Y7 := (RETURN f83) <BOOL>
  DEF Y8 := BNOT Y7 <BOOL>
  DEF Y9 := Y6 LAND Y8 <BOOL>
  DEF Z0 := TRUE <BOOL>
  IF Y9 EQ Z0
  THEN IFSTAT_30_SEQ_2_LEVEL_0
  ELSE IFNEXT_30_SEQ_2_LEVEL_0
  LABEL IFSTAT_30_SEQ_2_LEVEL_0
  DEF Z1 := 0 <INT>
  h20 := Z1 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_2_LEVEL_0
  DEF Z2 := 30 <INT>
  DEF Z3 := 23 <INT>
  DEF Z4 := Z2 ISUB Z3 <INT>
  V0 := Z4 <INT>
  DEF Z5 := h11 ILSHIFT V0 <INT>
  h11 := Z5 <INT>
  DEF Z6 := 0 <INT>
  m7 := Z6 <INT>
  U6 := h12 <INT>
  DEF Z7 := 1 <INT>
  DEF Z8 := U6 IAND Z7 <INT>
  DEF Z9 := 0 <INT>
  DEF a10 := Z8 EQ Z9 <BOOL>
  DEF a11 := TRUE <BOOL>
  IF a10 EQ a11
  THEN WHILESTAT_18_SEQ_0_LEVEL_0
  ELSE WHILENEXT_18_SEQ_0_LEVEL_0
  LABEL WHILECOND_18_SEQ_0_LEVEL_0
  IF a10 EQ a11
  THEN WHILESTAT_18_SEQ_0_LEVEL_0
  ELSE WHILEEND_18_LEVEL_0
  LABEL WHILESTAT_18_SEQ_0_LEVEL_0
  DEF a12 := 1 <INT>
  DEF a13 := U6 IRSHIFT a12 <INT>
  U6 := a13 <INT>
  DEF a14 := 1 <INT>
  DEF a15 := m7 IADD a14 <INT>
  m7 := a15 <INT>
  DEF a16 := 1 <INT>
  DEF a17 := U6 IAND a16 <INT>
  DEF a18 := 0 <INT>
  DEF a19 := a17 EQ a18 <BOOL>
  a10 := a19 <BOOL>
  GOTO WHILECOND_18_SEQ_0_LEVEL_0
  LABEL WHILENEXT_18_SEQ_0_LEVEL_0
  LABEL WHILEEND_18_LEVEL_0
  U7 := m7 <INT>
  V0 := U7 <INT>
  DEF a20 := h12 IRSHIFT V0 <INT>
  h12 := a20 <INT>
  DEF a21 := 0 <INT>
  m7 := a21 <INT>
  U6 := h12 <INT>
  CALL IntIsZero([U6 -> f65]<INT>)
  CALL IntIsZero([U6 -> f65]<INT>)
  DEF a22 := (RETURN f83) <BOOL>
  DEF a23 := BNOT a22 <BOOL>
  DEF a24 := TRUE <BOOL>
  IF a23 EQ a24
  THEN WHILESTAT_20_SEQ_0_LEVEL_0
  ELSE WHILENEXT_20_SEQ_0_LEVEL_0
  LABEL WHILECOND_20_SEQ_0_LEVEL_0
  IF a23 EQ a24
  THEN WHILESTAT_20_SEQ_0_LEVEL_0
  ELSE WHILEEND_20_LEVEL_0
  LABEL WHILESTAT_20_SEQ_0_LEVEL_0
  DEF a25 := 1 <INT>
  DEF a26 := U6 IAND a25 <INT>
  n1 := a26 <INT>
  DEF a27 := 1 <INT>
  DEF a28 := n1 EQ a27 <BOOL>
  DEF a29 := TRUE <BOOL>
  IF a28 EQ a29
  THEN IFSTAT_31_SEQ_0_LEVEL_1
  ELSE IFNEXT_31_SEQ_0_LEVEL_1
  LABEL IFSTAT_31_SEQ_0_LEVEL_1
  m6 := m7 <INT>
  GOTO IFEND_31_LEVEL_1
  LABEL IFNEXT_31_SEQ_0_LEVEL_1
  LABEL IFEND_31_LEVEL_1
  DEF a30 := 1 <INT>
  DEF a31 := m7 IADD a30 <INT>
  m7 := a31 <INT>
  DEF a32 := 1 <INT>
  DEF a33 := U6 IRSHIFT a32 <INT>
  U6 := a33 <INT>
  CALL IntIsZero([U6 -> f65]<INT>)
  CALL IntIsZero([U6 -> f65]<INT>)
  DEF a34 := (RETURN f83) <BOOL>
  DEF a35 := BNOT a34 <BOOL>
  a23 := a35 <BOOL>
  GOTO WHILECOND_20_SEQ_0_LEVEL_0
  LABEL WHILENEXT_20_SEQ_0_LEVEL_0
  LABEL WHILEEND_20_LEVEL_0
  U9 := m6 <INT>
  DEF a36 := g74 ISUB U9 <INT>
  g74 := a36 <INT>
  DEF a37 := g75 ISUB U9 <INT>
  g75 := a37 <INT>
  DEF a38 := 30 <INT>
  DEF a39 := a38 ISUB U9 <INT>
  V6 := a39 <INT>
  V7 := V6 <INT>
  DEF a40 := g59 NE g60 <BOOL>
  DEF a41 := TRUE <BOOL>
  IF a40 EQ a41
  THEN IFSTAT_32_SEQ_0_LEVEL_1
  ELSE IFNEXT_32_SEQ_0_LEVEL_1
  LABEL IFSTAT_32_SEQ_0_LEVEL_1
  DEF a42 := 1 <INT>
  h13 := a42 <INT>
  GOTO IFEND_32_LEVEL_1
  LABEL IFNEXT_32_SEQ_0_LEVEL_1
  DEF a43 := 0 <INT>
  h13 := a43 <INT>
  GOTO IFEND_32_LEVEL_1
  LABEL IFNEXT_32_SEQ_1_LEVEL_1
  LABEL IFEND_32_LEVEL_1
  DEF a44 := g74 ISUB g75 <INT>
  h14 := a44 <INT>
  CALL Div([h11 -> h48]<INT>, [h12 -> h76]<INT>)
  DEF a48 := (RETURN h86) <INT>
  h18 := a48 <INT>
  DEF a49 := 23 <INT>
  DEF a50 := V7 GT a49 <BOOL>
  DEF a51 := TRUE <BOOL>
  IF a50 EQ a51
  THEN IFSTAT_33_SEQ_0_LEVEL_1
  ELSE IFNEXT_33_SEQ_0_LEVEL_1
  LABEL IFSTAT_33_SEQ_0_LEVEL_1
  DEF a52 := 23 <INT>
  DEF a53 := V7 ISUB a52 <INT>
  V1 := a53 <INT>
  DEF a54 := 1 <INT>
  DEF a55 := a54 ILSHIFT V1 <INT>
  DEF a56 := 1 <INT>
  DEF a57 := a55 ISUB a56 <INT>
  DEF a58 := h18 IAND a57 <INT>
  W6 := a58 <INT>
  DEF a59 := h18 IRSHIFT V1 <INT>
  h18 := a59 <INT>
  GOTO IFEND_33_LEVEL_1
  LABEL IFNEXT_33_SEQ_0_LEVEL_1
  DEF a60 := 23 <INT>
  DEF a61 := V7 LT a60 <BOOL>
  DEF a62 := TRUE <BOOL>
  IF a61 EQ a62
  THEN IFSTAT_33_SEQ_1_LEVEL_1
  ELSE IFNEXT_33_SEQ_1_LEVEL_1
  LABEL IFSTAT_33_SEQ_1_LEVEL_1
  DEF a63 := 23 <INT>
  DEF a64 := a63 ISUB V7 <INT>
  V1 := a64 <INT>
  DEF a65 := h18 ILSHIFT V1 <INT>
  h18 := a65 <INT>
  DEF a66 := 0 <INT>
  W6 := a66 <INT>
  GOTO IFEND_33_LEVEL_1
  LABEL IFNEXT_33_SEQ_1_LEVEL_1
  LABEL IFEND_33_LEVEL_1
  DEF a67 := 0 <INT>
  h15 := a67 <INT>
  V5 := h18 <INT>
  DEF a68 := 0 <INT>
  V2 := a68 <INT>
  CALL IntIsZero([V5 -> f65]<INT>)
  CALL IntIsZero([V5 -> f65]<INT>)
  DEF a69 := (RETURN f83) <BOOL>
  DEF a70 := BNOT a69 <BOOL>
  DEF a71 := TRUE <BOOL>
  IF a70 EQ a71
  THEN WHILESTAT_22_SEQ_0_LEVEL_0
  ELSE WHILENEXT_22_SEQ_0_LEVEL_0
  LABEL WHILECOND_22_SEQ_0_LEVEL_0
  IF a70 EQ a71
  THEN WHILESTAT_22_SEQ_0_LEVEL_0
  ELSE WHILEEND_22_LEVEL_0
  LABEL WHILESTAT_22_SEQ_0_LEVEL_0
  DEF a72 := 1 <INT>
  DEF a73 := V5 IAND a72 <INT>
  V3 := a73 <INT>
  DEF a74 := 1 <INT>
  DEF a75 := V3 EQ a74 <BOOL>
  DEF a76 := TRUE <BOOL>
  IF a75 EQ a76
  THEN IFSTAT_34_SEQ_0_LEVEL_1
  ELSE IFNEXT_34_SEQ_0_LEVEL_1
  LABEL IFSTAT_34_SEQ_0_LEVEL_1
  V2 := h15 <INT>
  GOTO IFEND_34_LEVEL_1
  LABEL IFNEXT_34_SEQ_0_LEVEL_1
  LABEL IFEND_34_LEVEL_1
  DEF a77 := 1 <INT>
  DEF a78 := h15 IADD a77 <INT>
  h15 := a78 <INT>
  DEF a79 := 1 <INT>
  DEF a80 := V5 IRSHIFT a79 <INT>
  V5 := a80 <INT>
  CALL IntIsZero([V5 -> f65]<INT>)
  CALL IntIsZero([V5 -> f65]<INT>)
  DEF a81 := (RETURN f83) <BOOL>
  DEF a82 := BNOT a81 <BOOL>
  a70 := a82 <BOOL>
  GOTO WHILECOND_22_SEQ_0_LEVEL_0
  LABEL WHILENEXT_22_SEQ_0_LEVEL_0
  LABEL WHILEEND_22_LEVEL_0
  DEF a83 := 23 <INT>
  DEF a84 := V2 LT a83 <BOOL>
  DEF a85 := TRUE <BOOL>
  IF a84 EQ a85
  THEN IFSTAT_35_SEQ_0_LEVEL_1
  ELSE IFNEXT_35_SEQ_0_LEVEL_1
  LABEL IFSTAT_35_SEQ_0_LEVEL_1
  DEF a86 := 23 <INT>
  DEF a87 := a86 ISUB V2 <INT>
  V0 := a87 <INT>
  DEF a88 := h18 ILSHIFT V0 <INT>
  h18 := a88 <INT>
  DEF a89 := V1 ISUB V0 <INT>
  DEF a90 := W6 IRSHIFT a89 <INT>
  DEF a91 := h18 IOR a90 <INT>
  h18 := a91 <INT>
  DEF a92 := h14 ISUB V0 <INT>
  h14 := a92 <INT>
  GOTO IFEND_35_LEVEL_1
  LABEL IFNEXT_35_SEQ_0_LEVEL_1
  LABEL IFEND_35_LEVEL_1
  DEF a93 := 1 <INT>
  DEF a94 := h18 IADD a93 <INT>
  n3 := a94 <INT>
  DEF a95 := 0 <INT>
  W8 := a95 <INT>
  n4 := h18 <INT>
  DEF a96 := 0 <INT>
  W7 := a96 <INT>
  DEF a97 := 1 <INT>
  DEF a98 := V1 ISUB a97 <INT>
  DEF a99 := W6 IRSHIFT a98 <INT>
  V2 := a99 <INT>
  DEF b10 := 1 <INT>
  DEF b11 := V2 EQ b10 <BOOL>
  DEF b12 := TRUE <BOOL>
  IF b11 EQ b12
  THEN IFSTAT_36_SEQ_0_LEVEL_1
  ELSE IFNEXT_36_SEQ_0_LEVEL_1
  LABEL IFSTAT_36_SEQ_0_LEVEL_1
  h18 := n3 <INT>
  W6 := W8 <INT>
  GOTO IFEND_36_LEVEL_1
  LABEL IFNEXT_36_SEQ_0_LEVEL_1
  DEF b13 := W2 GT W3 <BOOL>
  DEF b14 := TRUE <BOOL>
  IF b13 EQ b14
  THEN IFSTAT_36_SEQ_1_LEVEL_1
  ELSE IFNEXT_36_SEQ_1_LEVEL_1
  LABEL IFSTAT_36_SEQ_1_LEVEL_1
  h18 := n4 <INT>
  W6 := W7 <INT>
  GOTO IFEND_36_LEVEL_1
  LABEL IFNEXT_36_SEQ_1_LEVEL_1
  DEF b15 := 1 <INT>
  DEF b16 := n4 IAND b15 <INT>
  W4 := b16 <INT>
  DEF b17 := 1 <INT>
  DEF b18 := n3 IAND b17 <INT>
  W5 := b18 <INT>
  DEF b19 := 0 <INT>
  DEF b20 := W5 EQ b19 <BOOL>
  DEF b21 := TRUE <BOOL>
  IF b20 EQ b21
  THEN IFSTAT_37_SEQ_0_LEVEL_2
  ELSE IFNEXT_37_SEQ_0_LEVEL_2
  LABEL IFSTAT_37_SEQ_0_LEVEL_2
  h18 := n3 <INT>
  W6 := W8 <INT>
  GOTO IFEND_37_LEVEL_2
  LABEL IFNEXT_37_SEQ_0_LEVEL_2
  h18 := n4 <INT>
  W6 := W7 <INT>
  GOTO IFEND_37_LEVEL_2
  LABEL IFNEXT_37_SEQ_1_LEVEL_2
  LABEL IFEND_37_LEVEL_2
  GOTO IFEND_36_LEVEL_1
  LABEL IFNEXT_36_SEQ_2_LEVEL_1
  LABEL IFEND_36_LEVEL_1
  DEF b22 := h14 IADD (GLOBAL j14) <INT>
  h14 := b22 <INT>
  DEF b23 := 255 <INT>
  DEF b24 := h14 IAND b23 <INT>
  DEF b25 := 23 <INT>
  DEF b26 := b24 ILSHIFT b25 <INT>
  h20 := b26 <INT>
  DEF b27 := 31 <INT>
  DEF b28 := h13 ILSHIFT b27 <INT>
  DEF b29 := h20 IOR b28 <INT>
  h20 := b29 <INT>
  DEF b30 := 8388607 <INT>
  DEF b31 := h18 IAND b30 <INT>
  DEF b32 := h20 IOR b31 <INT>
  h20 := b32 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_3_LEVEL_0
  LABEL IFEND_30_LEVEL_0
  CALL IntBinaryAsReal([h20 -> g40]<INT>)
  CALL IntBinaryAsReal([h20 -> g40]<INT>)
  DEF b33 := (RETURN g39) <REAL>
  h21 := b33 <REAL>
  DEF RETURN h88 := h21 <REAL>
 RETURN
 PROC LABEL Div
  DEF h39 := 0 <INT>
  DEF h40 := 0 <INT>
  DEF h41 := 0 <INT>
  DEF h42 := 0 <INT>
  DEF h43 := 0 <INT>
  DEF h44 := 0 <INT>
  DEF h45 := 0 <INT>
  DEF h46 := 0 <INT>
  DEF h47 := 0 <INT>
  h41 := (PARAM h48) <INT>
  DEF h49 := 0 <INT>
  h44 := h49 <INT>
  DEF h50 := 0 <INT>
  h42 := h50 <INT>
  CALL IntIsZero([h41 -> f65]<INT>)
  DEF h51 := (RETURN f83) <BOOL>
  DEF h52 := BNOT h51 <BOOL>
  DEF h53 := TRUE <BOOL>
  IF h52 EQ h53
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_1
  IF h52 EQ h53
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILEEND_0_LEVEL_0_1
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_1
  DEF h54 := 1 <INT>
  DEF h55 := h41 IAND h54 <INT>
  h43 := h55 <INT>
  DEF h56 := 1 <INT>
  DEF K := h43 EQ h56 <BOOL>
  DEF h57 := TRUE <BOOL>
  IF K EQ h57
  THEN IFSTAT_0_SEQ_0_LEVEL_0_3
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_3
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_3
  h42 := h44 <INT>
  GOTO IFEND_0_LEVEL_0_3
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_3
  LABEL IFEND_0_LEVEL_0_3
  DEF h58 := 1 <INT>
  DEF h59 := h44 IADD h58 <INT>
  h44 := h59 <INT>
  DEF h60 := 1 <INT>
  DEF h61 := h41 IRSHIFT h60 <INT>
  h41 := h61 <INT>
  CALL IntIsZero([h41 -> f65]<INT>)
  CALL IntIsZero([h41 -> f65]<INT>)
  DEF h62 := (RETURN f83) <BOOL>
  DEF h63 := BNOT h62 <BOOL>
  h52 := h63 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_1
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILEEND_0_LEVEL_0_1
  h45 := h42 <INT>
  h41 := (PARAM h48) <INT>
  DEF h64 := 0 <INT>
  h47 := h64 <INT>
  DEF h65 := 0 <INT>
  f51 := h65 <INT>
  DEF h66 := 0 <INT>
  DEF h67 := h45 GE h66 <BOOL>
  DEF h68 := TRUE <BOOL>
  IF h67 EQ h68
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_1
  ELSE WHILENEXT_2_SEQ_0_LEVEL_0_1
  LABEL WHILECOND_2_SEQ_0_LEVEL_0_1
  IF h67 EQ h68
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_1
  ELSE WHILEEND_2_LEVEL_0_1
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0_1
  DEF h69 := h41 IRSHIFT h45 <INT>
  DEF h70 := 1 <INT>
  DEF h71 := h69 IAND h70 <INT>
  h46 := h71 <INT>
  DEF h72 := 1 <INT>
  DEF h73 := h47 ILSHIFT h72 <INT>
  DEF h74 := h73 IOR h46 <INT>
  h47 := h74 <INT>
  DEF h75 := h47 GE (PARAM h76) <BOOL>
  DEF h77 := TRUE <BOOL>
  IF h75 EQ h77
  THEN IFSTAT_1_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_1
  DEF h78 := 1 <INT>
  DEF h79 := h78 ILSHIFT h45 <INT>
  DEF h80 := f51 IOR h79 <INT>
  f51 := h80 <INT>
  DEF h81 := h47 ISUB (PARAM h76) <INT>
  h47 := h81 <INT>
  GOTO IFEND_1_LEVEL_0_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFEND_1_LEVEL_0_1
  DEF h82 := 1 <INT>
  DEF h83 := h45 ISUB h82 <INT>
  h45 := h83 <INT>
  DEF h84 := 0 <INT>
  DEF h85 := h45 GE h84 <BOOL>
  h67 := h85 <BOOL>
  GOTO WHILECOND_2_SEQ_0_LEVEL_0_1
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0_1
  LABEL WHILEEND_2_LEVEL_0_1
  DEF RETURN h86 := f51 <INT>
 RETURN
 PROC LABEL Bar
  DEF h99 := FALSE <BOOL>
  DEF i10 := 1 <INT>
  DEF i11 := (GLOBAL f28) IADD i10 <INT>
  GLOBAL f28 := i11 <INT>
  DEF i12 := BNOT (GLOBAL f32) <BOOL>
  DEF i13 := TRUE <BOOL>
  IF i12 EQ i13
  THEN IFSTAT_1_SEQ_0_LEVEL_0_2
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_2
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_2
  DEF i14 := TRUE <BOOL>
  GLOBAL f32 := i14 <BOOL>
  DEF i15 := "Doing foo with arg1=" <STRING>
  CALL WriteString([i15 -> i33]<STRING>)
  CALL WriteInt([(GLOBAL f29) -> i35]<INT>)
  CALL WriteLn()
  DEF i36 := 0 <INT>
  DEF i37 := 0 <INT>
  CALL Foo([(GLOBAL f29) -> h98]<INT>, [i36 -> i38]<INT>, [i37 -> i39]<INT>)
  CALL Foo([(GLOBAL f29) -> h98]<INT>, [i36 -> i38]<INT>, [i37 -> i39]<INT>)
  DEF i40 := (RETURN i41) <BOOL>
  h99 := i40 <BOOL>
  GOTO IFEND_1_LEVEL_0_2
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_2
  LABEL IFEND_1_LEVEL_0_2
 RETURN
 PROC LABEL WriteString
  DEF i16 := 0 <INT>
  DEF i17 := 0 <INT>
  DEF i18 := 0 <INT>
  DEF i19 := 0 <INT>
  CALL StringAsAddress([(PARAM i33) -> i23]<STRING>)
  DEF i24 := (RETURN i22) <INT>
  i16 := i24 <INT>
  DEF i25 := 0 <INT>
  i17 := i25 <INT>
  IPARAM i18
  IPARAM i16
  IPARAM i17
  IASM "LDRB %r, [%r, +%r]"
  IPARAM i18
  IPARAM i18
  IASM "STR %r, %a"
  CALL IntIsZero([i18 -> f65]<INT>)
  DEF i26 := (RETURN f83) <BOOL>
  DEF i27 := BNOT i26 <BOOL>
  DEF i28 := TRUE <BOOL>
  IF i27 EQ i28
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_2
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_2
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_2
  IF i27 EQ i28
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_2
  ELSE WHILEEND_0_LEVEL_0_2
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_2
  IPARAM i19
  IASM "MOV %r, R0"
  IPARAM i18
  IASM "MOV R0, %r"
  IASM "SWI 6"
  DEF i29 := 1 <INT>
  DEF i30 := i17 IADD i29 <INT>
  i17 := i30 <INT>
  IPARAM i18
  IPARAM i16
  IPARAM i17
  IASM "LDRB %r, [%r, +%r]"
  IPARAM i18
  IPARAM i18
  IASM "STR %r, %a"
  IPARAM i19
  IASM "MOV R0, %r"
  CALL IntIsZero([i18 -> f65]<INT>)
  CALL IntIsZero([i18 -> f65]<INT>)
  DEF i31 := (RETURN f83) <BOOL>
  DEF i32 := BNOT i31 <BOOL>
  i27 := i32 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_2
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_2
  LABEL WHILEEND_0_LEVEL_0_2
 RETURN
 PROC LABEL StringAsAddress
  DEF i20 := 0 <INT>
  DEF i21 := 0 <INT>
  IPARAM g48
  IPARAM (PARAM i23)
  IASM "LDR %r, %a"
  IPARAM g48
  IPARAM f33
  IASM "STR %r, %a"
  DEF RETURN i22 := f33 <INT>
 RETURN
 PROC LABEL WriteInt
  DEF i34 := 0 <INT>
  IPARAM i34
  IASM "MOV %r, R0"
  IPARAM (PARAM i35)
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM i34
  IASM "MOV R0, %r"
 RETURN
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN
 PROC LABEL RGreaterThan
  DEF d26 := FALSE <BOOL>
  DEF d27 := FALSE <BOOL>
  DEF d28 := FALSE <BOOL>
  DEF d29 := FALSE <BOOL>
  DEF d30 := FALSE <BOOL>
  DEF d31 := FALSE <BOOL>
  DEF d32 := FALSE <BOOL>
  DEF d33 := 0 <INT>
  DEF d34 := 0 <INT>
  DEF d35 := 0 <INT>
  DEF d36 := 0 <INT>
  CALL RealIsZero([(PARAM a) -> g94]<REAL>)
  CALL RealIsZero([(PARAM a) -> g94]<REAL>)
  DEF d37 := (RETURN g93) <BOOL>
  b61 := d37 <BOOL>
  CALL RealIsZero([(PARAM b) -> g94]<REAL>)
  CALL RealIsZero([(PARAM b) -> g94]<REAL>)
  DEF d38 := (RETURN g93) <BOOL>
  b62 := d38 <BOOL>
  CALL RealIsNegative([(PARAM a) -> i58]<REAL>)
  CALL RealIsNegative([(PARAM a) -> i58]<REAL>)
  DEF d39 := (RETURN i57) <BOOL>
  b63 := d39 <BOOL>
  CALL RealIsNegative([(PARAM b) -> i58]<REAL>)
  CALL RealIsNegative([(PARAM b) -> i58]<REAL>)
  DEF d40 := (RETURN i57) <BOOL>
  b64 := d40 <BOOL>
  CALL RealIsPositive([(PARAM a) -> i74]<REAL>)
  CALL RealIsPositive([(PARAM a) -> i74]<REAL>)
  DEF d41 := (RETURN i73) <BOOL>
  b65 := d41 <BOOL>
  CALL RealIsPositive([(PARAM b) -> i74]<REAL>)
  CALL RealIsPositive([(PARAM b) -> i74]<REAL>)
  DEF d42 := (RETURN i73) <BOOL>
  b66 := d42 <BOOL>
  DEF d43 := b61 LAND b62 <BOOL>
  DEF d44 := TRUE <BOOL>
  IF d43 EQ d44
  THEN IFSTAT_62_SEQ_0_LEVEL_0
  ELSE IFNEXT_62_SEQ_0_LEVEL_0
  LABEL IFSTAT_62_SEQ_0_LEVEL_0
  DEF d45 := FALSE <BOOL>
  h21 := d45 <BOOL>
  GOTO IFEND_62_LEVEL_0
  LABEL IFNEXT_62_SEQ_0_LEVEL_0
  DEF d46 := b63 LAND b62 <BOOL>
  DEF d47 := TRUE <BOOL>
  IF d46 EQ d47
  THEN IFSTAT_62_SEQ_1_LEVEL_0
  ELSE IFNEXT_62_SEQ_1_LEVEL_0
  LABEL IFSTAT_62_SEQ_1_LEVEL_0
  DEF d48 := FALSE <BOOL>
  h21 := d48 <BOOL>
  GOTO IFEND_62_LEVEL_0
  LABEL IFNEXT_62_SEQ_1_LEVEL_0
  DEF d49 := b63 LAND b66 <BOOL>
  DEF d50 := TRUE <BOOL>
  IF d49 EQ d50
  THEN IFSTAT_62_SEQ_2_LEVEL_0
  ELSE IFNEXT_62_SEQ_2_LEVEL_0
  LABEL IFSTAT_62_SEQ_2_LEVEL_0
  DEF d51 := FALSE <BOOL>
  h21 := d51 <BOOL>
  GOTO IFEND_62_LEVEL_0
  LABEL IFNEXT_62_SEQ_2_LEVEL_0
  DEF d52 := b61 LAND b66 <BOOL>
  DEF d53 := TRUE <BOOL>
  IF d52 EQ d53
  THEN IFSTAT_62_SEQ_3_LEVEL_0
  ELSE IFNEXT_62_SEQ_3_LEVEL_0
  LABEL IFSTAT_62_SEQ_3_LEVEL_0
  DEF d54 := FALSE <BOOL>
  h21 := d54 <BOOL>
  GOTO IFEND_62_LEVEL_0
  LABEL IFNEXT_62_SEQ_3_LEVEL_0
  DEF d55 := b65 LAND b64 <BOOL>
  DEF d56 := TRUE <BOOL>
  IF d55 EQ d56
  THEN IFSTAT_62_SEQ_4_LEVEL_0
  ELSE IFNEXT_62_SEQ_4_LEVEL_0
  LABEL IFSTAT_62_SEQ_4_LEVEL_0
  DEF d57 := TRUE <BOOL>
  h21 := d57 <BOOL>
  GOTO IFEND_62_LEVEL_0
  LABEL IFNEXT_62_SEQ_4_LEVEL_0
  DEF d58 := b65 LAND b62 <BOOL>
  DEF d59 := TRUE <BOOL>
  IF d58 EQ d59
  THEN IFSTAT_62_SEQ_5_LEVEL_0
  ELSE IFNEXT_62_SEQ_5_LEVEL_0
  LABEL IFSTAT_62_SEQ_5_LEVEL_0
  DEF d60 := TRUE <BOOL>
  h21 := d60 <BOOL>
  GOTO IFEND_62_LEVEL_0
  LABEL IFNEXT_62_SEQ_5_LEVEL_0
  DEF d61 := b61 LAND b64 <BOOL>
  DEF d62 := TRUE <BOOL>
  IF d61 EQ d62
  THEN IFSTAT_62_SEQ_6_LEVEL_0
  ELSE IFNEXT_62_SEQ_6_LEVEL_0
  LABEL IFSTAT_62_SEQ_6_LEVEL_0
  DEF d63 := TRUE <BOOL>
  h21 := d63 <BOOL>
  GOTO IFEND_62_LEVEL_0
  LABEL IFNEXT_62_SEQ_6_LEVEL_0
  DEF d64 := b63 LAND b64 <BOOL>
  DEF d65 := TRUE <BOOL>
  IF d64 EQ d65
  THEN IFSTAT_62_SEQ_7_LEVEL_0
  ELSE IFNEXT_62_SEQ_7_LEVEL_0
  LABEL IFSTAT_62_SEQ_7_LEVEL_0
  CALL RealExponent([(PARAM a) -> g73]<REAL>)
  CALL RealExponent([(PARAM a) -> g73]<REAL>)
  DEF d66 := (RETURN g72) <INT>
  g74 := d66 <INT>
  CALL RealExponent([(PARAM b) -> g73]<REAL>)
  CALL RealExponent([(PARAM b) -> g73]<REAL>)
  DEF d67 := (RETURN g72) <INT>
  g75 := d67 <INT>
  DEF d68 := g74 LT g75 <BOOL>
  DEF d69 := TRUE <BOOL>
  IF d68 EQ d69
  THEN IFSTAT_63_SEQ_0_LEVEL_1
  ELSE IFNEXT_63_SEQ_0_LEVEL_1
  LABEL IFSTAT_63_SEQ_0_LEVEL_1
  DEF d70 := TRUE <BOOL>
  h21 := d70 <BOOL>
  GOTO IFEND_63_LEVEL_1
  LABEL IFNEXT_63_SEQ_0_LEVEL_1
  DEF d71 := g74 EQ g75 <BOOL>
  DEF d72 := TRUE <BOOL>
  IF d71 EQ d72
  THEN IFSTAT_63_SEQ_1_LEVEL_1
  ELSE IFNEXT_63_SEQ_1_LEVEL_1
  LABEL IFSTAT_63_SEQ_1_LEVEL_1
  CALL RealMantissa([(PARAM a) -> h10]<REAL>)
  CALL RealMantissa([(PARAM a) -> h10]<REAL>)
  DEF d73 := (RETURN g99) <INT>
  b69 := d73 <INT>
  CALL RealMantissa([(PARAM b) -> h10]<REAL>)
  CALL RealMantissa([(PARAM b) -> h10]<REAL>)
  DEF d74 := (RETURN g99) <INT>
  b70 := d74 <INT>
  DEF d75 := b69 LT b70 <BOOL>
  DEF d76 := TRUE <BOOL>
  IF d75 EQ d76
  THEN IFSTAT_64_SEQ_0_LEVEL_2
  ELSE IFNEXT_64_SEQ_0_LEVEL_2
  LABEL IFSTAT_64_SEQ_0_LEVEL_2
  DEF d77 := TRUE <BOOL>
  h21 := d77 <BOOL>
  GOTO IFEND_64_LEVEL_2
  LABEL IFNEXT_64_SEQ_0_LEVEL_2
  DEF d78 := FALSE <BOOL>
  h21 := d78 <BOOL>
  GOTO IFEND_64_LEVEL_2
  LABEL IFNEXT_64_SEQ_1_LEVEL_2
  LABEL IFEND_64_LEVEL_2
  GOTO IFEND_63_LEVEL_1
  LABEL IFNEXT_63_SEQ_1_LEVEL_1
  DEF d79 := FALSE <BOOL>
  h21 := d79 <BOOL>
  GOTO IFEND_63_LEVEL_1
  LABEL IFNEXT_63_SEQ_2_LEVEL_1
  LABEL IFEND_63_LEVEL_1
  GOTO IFEND_62_LEVEL_0
  LABEL IFNEXT_62_SEQ_7_LEVEL_0
  DEF d80 := b65 LAND b66 <BOOL>
  DEF d81 := TRUE <BOOL>
  IF d80 EQ d81
  THEN IFSTAT_62_SEQ_8_LEVEL_0
  ELSE IFNEXT_62_SEQ_8_LEVEL_0
  LABEL IFSTAT_62_SEQ_8_LEVEL_0
  CALL RealExponent([(PARAM a) -> g73]<REAL>)
  CALL RealExponent([(PARAM a) -> g73]<REAL>)
  DEF d82 := (RETURN g72) <INT>
  g74 := d82 <INT>
  CALL RealExponent([(PARAM b) -> g73]<REAL>)
  CALL RealExponent([(PARAM b) -> g73]<REAL>)
  DEF d83 := (RETURN g72) <INT>
  g75 := d83 <INT>
  DEF d84 := g74 GT g75 <BOOL>
  DEF d85 := TRUE <BOOL>
  IF d84 EQ d85
  THEN IFSTAT_68_SEQ_0_LEVEL_1
  ELSE IFNEXT_68_SEQ_0_LEVEL_1
  LABEL IFSTAT_68_SEQ_0_LEVEL_1
  DEF d86 := TRUE <BOOL>
  h21 := d86 <BOOL>
  GOTO IFEND_68_LEVEL_1
  LABEL IFNEXT_68_SEQ_0_LEVEL_1
  DEF d87 := g74 EQ g75 <BOOL>
  DEF d88 := TRUE <BOOL>
  IF d87 EQ d88
  THEN IFSTAT_68_SEQ_1_LEVEL_1
  ELSE IFNEXT_68_SEQ_1_LEVEL_1
  LABEL IFSTAT_68_SEQ_1_LEVEL_1
  CALL RealMantissa([(PARAM a) -> h10]<REAL>)
  CALL RealMantissa([(PARAM a) -> h10]<REAL>)
  DEF d89 := (RETURN g99) <INT>
  b69 := d89 <INT>
  CALL RealMantissa([(PARAM b) -> h10]<REAL>)
  CALL RealMantissa([(PARAM b) -> h10]<REAL>)
  DEF d90 := (RETURN g99) <INT>
  b70 := d90 <INT>
  DEF d91 := b69 GT b70 <BOOL>
  DEF d92 := TRUE <BOOL>
  IF d91 EQ d92
  THEN IFSTAT_69_SEQ_0_LEVEL_2
  ELSE IFNEXT_69_SEQ_0_LEVEL_2
  LABEL IFSTAT_69_SEQ_0_LEVEL_2
  DEF d93 := TRUE <BOOL>
  h21 := d93 <BOOL>
  GOTO IFEND_69_LEVEL_2
  LABEL IFNEXT_69_SEQ_0_LEVEL_2
  DEF d94 := FALSE <BOOL>
  h21 := d94 <BOOL>
  GOTO IFEND_69_LEVEL_2
  LABEL IFNEXT_69_SEQ_1_LEVEL_2
  LABEL IFEND_69_LEVEL_2
  GOTO IFEND_68_LEVEL_1
  LABEL IFNEXT_68_SEQ_1_LEVEL_1
  DEF d95 := FALSE <BOOL>
  h21 := d95 <BOOL>
  GOTO IFEND_68_LEVEL_1
  LABEL IFNEXT_68_SEQ_2_LEVEL_1
  LABEL IFEND_68_LEVEL_1
  GOTO IFEND_62_LEVEL_0
  LABEL IFNEXT_62_SEQ_8_LEVEL_0
  LABEL IFEND_62_LEVEL_0
  DEF RETURN i75 := h21 <BOOL>
 RETURN
 PROC LABEL RealIsNegative
  DEF i43 := FALSE <BOOL>
  DEF i44 := 0 <INT>
  DEF i45 := 0 <INT>
  CALL RealSign([(PARAM g94) -> g58]<REAL>)
  CALL RealSign([(PARAM g94) -> g58]<REAL>)
  DEF a5 := (RETURN g57) <INT>
  f62 := a5 <INT>
  CALL RealBinaryAsInt([(PARAM g94) -> g50]<REAL>)
  CALL RealBinaryAsInt([(PARAM g94) -> g50]<REAL>)
  DEF i46 := (RETURN g49) <INT>
  DEF i47 := 2147483647 <INT>
  DEF i48 := i46 IAND i47 <INT>
  i44 := i48 <INT>
  DEF i49 := 1 <INT>
  DEF i50 := f62 EQ i49 <BOOL>
  CALL IntIsZero([i44 -> f65]<INT>)
  CALL IntIsZero([i44 -> f65]<INT>)
  DEF i51 := (RETURN f83) <BOOL>
  DEF i52 := BNOT i51 <BOOL>
  DEF i53 := i50 LAND i52 <BOOL>
  DEF i54 := TRUE <BOOL>
  IF i53 EQ i54
  THEN IFSTAT_3_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_3_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_3_SEQ_0_LEVEL_0_0
  DEF i55 := TRUE <BOOL>
  f72 := i55 <BOOL>
  GOTO IFEND_3_LEVEL_0_0
  LABEL IFNEXT_3_SEQ_0_LEVEL_0_0
  DEF i56 := FALSE <BOOL>
  f72 := i56 <BOOL>
  GOTO IFEND_3_LEVEL_0_0
  LABEL IFNEXT_3_SEQ_1_LEVEL_0_0
  LABEL IFEND_3_LEVEL_0_0
  DEF RETURN i57 := f72 <BOOL>
 RETURN
 PROC LABEL RealIsPositive
  DEF i59 := FALSE <BOOL>
  DEF g52 := 0 <INT>
  DEF i60 := 0 <INT>
  CALL RealSign([(PARAM g94) -> g58]<REAL>)
  CALL RealSign([(PARAM g94) -> g58]<REAL>)
  DEF i61 := (RETURN g57) <INT>
  f62 := i61 <INT>
  CALL RealBinaryAsInt([(PARAM g94) -> g50]<REAL>)
  CALL RealBinaryAsInt([(PARAM g94) -> g50]<REAL>)
  DEF i62 := (RETURN g49) <INT>
  DEF i63 := 2147483647 <INT>
  DEF i64 := i62 IAND i63 <INT>
  g52 := i64 <INT>
  DEF i65 := 0 <INT>
  DEF i66 := f62 EQ i65 <BOOL>
  CALL IntIsZero([g52 -> f65]<INT>)
  CALL IntIsZero([g52 -> f65]<INT>)
  DEF i67 := (RETURN f83) <BOOL>
  DEF i68 := BNOT i67 <BOOL>
  DEF i69 := i66 LAND i68 <BOOL>
  DEF i70 := TRUE <BOOL>
  IF i69 EQ i70
  THEN IFSTAT_5_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_5_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_5_SEQ_0_LEVEL_0_0
  DEF i71 := TRUE <BOOL>
  f72 := i71 <BOOL>
  GOTO IFEND_5_LEVEL_0_0
  LABEL IFNEXT_5_SEQ_0_LEVEL_0_0
  DEF i72 := FALSE <BOOL>
  f72 := i72 <BOOL>
  GOTO IFEND_5_LEVEL_0_0
  LABEL IFNEXT_5_SEQ_1_LEVEL_0_0
  LABEL IFEND_5_LEVEL_0_0
  DEF RETURN i73 := f72 <BOOL>
 RETURN
 PROC LABEL RSub
  DEF k5 := 0.0 <REAL>
  CALL RNeg([(PARAM b) -> i85]<REAL>)
  DEF k6 := (RETURN i84) <REAL>
  CALL RAdd([(PARAM a) -> a]<REAL>, [k6 -> b]<REAL>)
  DEF k7 := (RETURN j88) <REAL>
  h21 := k7 <REAL>
  DEF RETURN j89 := h21 <REAL>
 RETURN
 PROC LABEL RNeg
  DEF b48 := 0 <INT>
  DEF b49 := 0 <INT>
  DEF b50 := 0.0 <REAL>
  DEF b51 := 0 <INT>
  DEF b52 := 1 <INT>
  DEF b53 := 31 <INT>
  DEF b54 := b52 ILSHIFT b53 <INT>
  i83 := b54 <INT>
  CALL RealBinaryAsInt([(PARAM i85) -> g50]<REAL>)
  DEF b57 := (RETURN g49) <INT>
  b49 := b57 <INT>
  DEF b58 := b49 IXOR i83 <INT>
  h20 := b58 <INT>
  CALL IntBinaryAsReal([h20 -> g40]<INT>)
  CALL IntBinaryAsReal([h20 -> g40]<INT>)
  DEF b59 := (RETURN g39) <REAL>
  h21 := b59 <REAL>
  DEF RETURN i84 := h21 <REAL>
 RETURN
 PROC LABEL RAdd
  DEF h21 := 0.0 <REAL>
  DEF h20 := 0 <INT>
  DEF g59 := 0 <INT>
  DEF g60 := 0 <INT>
  DEF h17 := 0 <INT>
  DEF g74 := 0 <INT>
  DEF g75 := 0 <INT>
  DEF h11 := 0 <INT>
  DEF h12 := 0 <INT>
  DEF h14 := 0 <INT>
  DEF T := 0 <INT>
  DEF h18 := 0 <INT>
  DEF h13 := 0 <INT>
  DEF i86 := 0 <INT>
  DEF h16 := 0 <INT>
  DEF i83 := 0 <INT>
  DEF h15 := 0 <INT>
  CALL RealSign([(PARAM a) -> g58]<REAL>)
  DEF i87 := (RETURN g57) <INT>
  g59 := i87 <INT>
  CALL RealSign([(PARAM b) -> g58]<REAL>)
  CALL RealSign([(PARAM b) -> g58]<REAL>)
  DEF i88 := (RETURN g57) <INT>
  g60 := i88 <INT>
  CALL RealExponent([(PARAM a) -> g73]<REAL>)
  DEF a6 := (RETURN g72) <INT>
  g74 := a6 <INT>
  CALL RealExponent([(PARAM b) -> g73]<REAL>)
  CALL RealExponent([(PARAM b) -> g73]<REAL>)
  DEF a7 := (RETURN g72) <INT>
  g75 := a7 <INT>
  CALL RealMantissa([(PARAM a) -> h10]<REAL>)
  DEF i89 := (RETURN g99) <INT>
  h11 := i89 <INT>
  CALL RealMantissa([(PARAM b) -> h10]<REAL>)
  CALL RealMantissa([(PARAM b) -> h10]<REAL>)
  DEF i90 := (RETURN g99) <INT>
  h12 := i90 <INT>
  DEF i91 := g74 LT g75 <BOOL>
  DEF i92 := TRUE <BOOL>
  IF i91 EQ i92
  THEN IFSTAT_0_SEQ_0_LEVEL_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0
  DEF i93 := g75 IADD (GLOBAL j14) <INT>
  h14 := i93 <INT>
  DEF i95 := g75 ISUB g74 <INT>
  h17 := i95 <INT>
  DEF i96 := h11 IRSHIFT h17 <INT>
  h11 := i96 <INT>
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0
  DEF i97 := g74 GT g75 <BOOL>
  DEF i98 := TRUE <BOOL>
  IF i97 EQ i98
  THEN IFSTAT_0_SEQ_1_LEVEL_0
  ELSE IFNEXT_0_SEQ_1_LEVEL_0_3
  LABEL IFSTAT_0_SEQ_1_LEVEL_0
  DEF i99 := g74 IADD (GLOBAL j14) <INT>
  h14 := i99 <INT>
  DEF j11 := g74 ISUB g75 <INT>
  h17 := j11 <INT>
  DEF j12 := h12 IRSHIFT h17 <INT>
  h12 := j12 <INT>
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_3
  DEF j13 := g74 IADD (GLOBAL j14) <INT>
  h14 := j13 <INT>
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_2_LEVEL_0
  LABEL IFEND_0_LEVEL_0
  DEF j15 := 0 <INT>
  DEF j16 := g59 EQ j15 <BOOL>
  DEF j17 := 1 <INT>
  DEF j18 := g60 EQ j17 <BOOL>
  DEF j19 := j16 LAND j18 <BOOL>
  DEF j20 := TRUE <BOOL>
  IF j19 EQ j20
  THEN IFSTAT_1_SEQ_0_LEVEL_0_3
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_3
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_3
  DEF j21 := h11 GT h12 <BOOL>
  DEF j22 := TRUE <BOOL>
  IF j21 EQ j22
  THEN IFSTAT_2_SEQ_0_LEVEL_1
  ELSE IFNEXT_2_SEQ_0_LEVEL_1
  LABEL IFSTAT_2_SEQ_0_LEVEL_1
  DEF j23 := 0 <INT>
  h13 := j23 <INT>
  DEF j24 := h11 ISUB h12 <INT>
  h18 := j24 <INT>
  GOTO IFEND_2_LEVEL_1
  LABEL IFNEXT_2_SEQ_0_LEVEL_1
  DEF j25 := h11 LT h12 <BOOL>
  DEF j26 := TRUE <BOOL>
  IF j25 EQ j26
  THEN IFSTAT_2_SEQ_1_LEVEL_1
  ELSE IFNEXT_2_SEQ_1_LEVEL_1
  LABEL IFSTAT_2_SEQ_1_LEVEL_1
  DEF j27 := 1 <INT>
  h13 := j27 <INT>
  DEF j28 := h12 ISUB h11 <INT>
  h18 := j28 <INT>
  GOTO IFEND_2_LEVEL_1
  LABEL IFNEXT_2_SEQ_1_LEVEL_1
  DEF j29 := 0 <INT>
  h13 := j29 <INT>
  DEF j30 := 0 <INT>
  h18 := j30 <INT>
  GOTO IFEND_2_LEVEL_1
  LABEL IFNEXT_2_SEQ_2_LEVEL_1
  LABEL IFEND_2_LEVEL_1
  GOTO IFEND_1_LEVEL_0_3
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_3
  DEF j31 := 1 <INT>
  DEF j32 := g59 EQ j31 <BOOL>
  DEF j33 := 0 <INT>
  DEF j34 := g60 EQ j33 <BOOL>
  DEF j35 := j32 LAND j34 <BOOL>
  DEF j36 := TRUE <BOOL>
  IF j35 EQ j36
  THEN IFSTAT_1_SEQ_1_LEVEL_0
  ELSE IFNEXT_1_SEQ_1_LEVEL_0
  LABEL IFSTAT_1_SEQ_1_LEVEL_0
  DEF j37 := h11 GT h12 <BOOL>
  DEF j38 := TRUE <BOOL>
  IF j37 EQ j38
  THEN IFSTAT_4_SEQ_0_LEVEL_1
  ELSE IFNEXT_4_SEQ_0_LEVEL_1
  LABEL IFSTAT_4_SEQ_0_LEVEL_1
  DEF j39 := 1 <INT>
  h13 := j39 <INT>
  DEF j40 := h11 ISUB h12 <INT>
  h18 := j40 <INT>
  GOTO IFEND_4_LEVEL_1
  LABEL IFNEXT_4_SEQ_0_LEVEL_1
  DEF j41 := h11 LT h12 <BOOL>
  DEF j42 := TRUE <BOOL>
  IF j41 EQ j42
  THEN IFSTAT_4_SEQ_1_LEVEL_1
  ELSE IFNEXT_4_SEQ_1_LEVEL_1
  LABEL IFSTAT_4_SEQ_1_LEVEL_1
  DEF j43 := 0 <INT>
  h13 := j43 <INT>
  DEF j44 := h12 ISUB h11 <INT>
  h18 := j44 <INT>
  GOTO IFEND_4_LEVEL_1
  LABEL IFNEXT_4_SEQ_1_LEVEL_1
  DEF j45 := 0 <INT>
  h13 := j45 <INT>
  DEF j46 := 0 <INT>
  h18 := j46 <INT>
  GOTO IFEND_4_LEVEL_1
  LABEL IFNEXT_4_SEQ_2_LEVEL_1
  LABEL IFEND_4_LEVEL_1
  GOTO IFEND_1_LEVEL_0_3
  LABEL IFNEXT_1_SEQ_1_LEVEL_0
  h13 := g59 <INT>
  DEF j47 := h11 IADD h12 <INT>
  h18 := j47 <INT>
  GOTO IFEND_1_LEVEL_0_3
  LABEL IFNEXT_1_SEQ_2_LEVEL_0
  LABEL IFEND_1_LEVEL_0_3
  DEF j48 := 24 <INT>
  DEF j49 := h18 IRSHIFT j48 <INT>
  DEF j50 := 1 <INT>
  DEF j51 := j49 IAND j50 <INT>
  T := j51 <INT>
  DEF j52 := 1 <INT>
  DEF j53 := T EQ j52 <BOOL>
  DEF j54 := TRUE <BOOL>
  IF j53 EQ j54
  THEN IFSTAT_7_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_7_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_7_SEQ_0_LEVEL_0_0
  DEF j55 := 1 <INT>
  DEF j56 := h18 IRSHIFT j55 <INT>
  h18 := j56 <INT>
  DEF j57 := 1 <INT>
  DEF j58 := h14 IADD j57 <INT>
  h14 := j58 <INT>
  GOTO IFEND_7_LEVEL_0_0
  LABEL IFNEXT_7_SEQ_0_LEVEL_0_0
  LABEL IFEND_7_LEVEL_0_0
  i86 := h18 <INT>
  DEF j59 := 0 <INT>
  h15 := j59 <INT>
  CALL IntIsZero([i86 -> f65]<INT>)
  DEF j60 := (RETURN f83) <BOOL>
  DEF j61 := BNOT j60 <BOOL>
  DEF j62 := TRUE <BOOL>
  IF j61 EQ j62
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_3
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_3
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_3
  IF j61 EQ j62
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_3
  ELSE WHILEEND_0_LEVEL_0_3
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_3
  DEF j63 := 1 <INT>
  DEF j64 := i86 IAND j63 <INT>
  i83 := j64 <INT>
  DEF j65 := 1 <INT>
  DEF j66 := i83 EQ j65 <BOOL>
  DEF j67 := TRUE <BOOL>
  IF j66 EQ j67
  THEN IFSTAT_8_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_8_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_8_SEQ_0_LEVEL_0_0
  h16 := h15 <INT>
  GOTO IFEND_8_LEVEL_0_0
  LABEL IFNEXT_8_SEQ_0_LEVEL_0_0
  LABEL IFEND_8_LEVEL_0_0
  DEF j68 := 1 <INT>
  DEF j69 := h15 IADD j68 <INT>
  h15 := j69 <INT>
  DEF j70 := 1 <INT>
  DEF j71 := i86 IRSHIFT j70 <INT>
  i86 := j71 <INT>
  CALL IntIsZero([i86 -> f65]<INT>)
  CALL IntIsZero([i86 -> f65]<INT>)
  DEF j72 := (RETURN f83) <BOOL>
  DEF j73 := BNOT j72 <BOOL>
  j61 := j73 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_3
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_3
  LABEL WHILEEND_0_LEVEL_0_3
  DEF j74 := 23 <INT>
  DEF j75 := h16 LT j74 <BOOL>
  DEF j76 := TRUE <BOOL>
  IF j75 EQ j76
  THEN IFSTAT_9_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_9_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_9_SEQ_0_LEVEL_0_0
  DEF j77 := 23 <INT>
  DEF j78 := j77 ISUB h16 <INT>
  h17 := j78 <INT>
  DEF j79 := h18 ILSHIFT h17 <INT>
  h18 := j79 <INT>
  DEF j1 := h14 ISUB h17 <INT>
  h14 := j1 <INT>
  GOTO IFEND_9_LEVEL_0_0
  LABEL IFNEXT_9_SEQ_0_LEVEL_0_0
  LABEL IFEND_9_LEVEL_0_0
  DEF j80 := 255 <INT>
  DEF j81 := h14 IAND j80 <INT>
  DEF j82 := 23 <INT>
  DEF j83 := j81 ILSHIFT j82 <INT>
  h20 := j83 <INT>
  DEF j84 := 8388607 <INT>
  DEF j85 := h18 IAND j84 <INT>
  DEF j86 := h20 IOR j85 <INT>
  h20 := j86 <INT>
  DEF j87 := 31 <INT>
  DEF k0 := h13 ILSHIFT j87 <INT>
  DEF k1 := h20 IOR k0 <INT>
  h20 := k1 <INT>
  CALL IntBinaryAsReal([h20 -> g40]<INT>)
  DEF k4 := (RETURN g39) <REAL>
  h21 := k4 <REAL>
  DEF RETURN j88 := h21 <REAL>
 RETURN
 PROC LABEL WriteReal
  DEF j93 := 0 <INT>
  IPARAM i34
  IASM "MOV %r, R0"
  IPARAM (PARAM j94)
  IASM "LDR R0, %a"
  IASM "SWI 2"
  IPARAM i34
  IASM "MOV R0, %r"
 RETURN
