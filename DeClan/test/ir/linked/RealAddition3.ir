SYMBOL SECTION
 f49 CONST INTERNAL realBias
DATA SECTION
 d86 := 50.0 [REAL]
 GLOBAL d87 := d86 [REAL]
 d88 := 92.0 [REAL]
 GLOBAL d89 := d88 [REAL]
 GLOBAL d90 := 0.0 [REAL]
 e64 := 127 [INT]
 GLOBAL f49 := e64 [INT]
CODE SECTION
 CALL RSub((d87 -> d91)[REAL], (d89 -> d93)[REAL])
 EXTERNAL RETURN g26 := d95 [REAL]
 d90 := g26 [REAL]
 CALL WriteReal((d90 -> g27)[REAL])
END
PROC SECTION
 PROC LABEL RSub
  PARAM d92 := d91 [REAL]
  PARAM k2 := d93 [REAL]
  d94 := 0.0 [REAL]
  CALL RNeg((k2 -> d96)[REAL])
  EXTERNAL RETURN k3 := d97 [REAL]
  CALL RAdd((d92 -> e18)[REAL], (k3 -> e20)[REAL])
  EXTERNAL RETURN k4 := e23 [REAL]
  d94 := k4 [REAL]
  INTERNAL RETURN d95 := d94 [REAL]
 RETURN
 PROC LABEL RNeg
  PARAM b12 := d96 [REAL]
  a95 := 0 [INT]
  a96 := 0 [INT]
  a97 := 0.0 [REAL]
  a98 := 0 [INT]
  a99 := 1 [INT]
  b10 := 31 [INT]
  b11 := a99 ILSHIFT b10 [INT]
  a95 := b11 [INT]
  CALL RealBinaryAsInt((b12 -> d98)[REAL])
  EXTERNAL RETURN b15 := e11 [INT]
  a96 := b15 [INT]
  b16 := a96 IXOR a95 [INT]
  a98 := b16 [INT]
  CALL IntBinaryAsReal((a98 -> e13)[INT])
  EXTERNAL RETURN b17 := e16 [REAL]
  a97 := b17 [REAL]
  INTERNAL RETURN d97 := a97 [REAL]
 RETURN
 PROC LABEL RealBinaryAsInt
  PARAM d99 := d98 [REAL]
  e10 := 0 [INT]
  e12 := 0.0 [REAL]
  IPARAM e12
  IPARAM d99
  IASM "LDR %r, %a"
  IPARAM e12
  IPARAM e10
  IASM "STR %r, %a"
  INTERNAL RETURN e11 := e10 [INT]
 RETURN
 PROC LABEL IntBinaryAsReal
  PARAM e14 := e13 [INT]
  e15 := 0.0 [REAL]
  e17 := 0 [INT]
  IPARAM e17
  IPARAM e14
  IASM "LDR %r, %a"
  IPARAM e17
  IPARAM e15
  IASM "STR %r, %a"
  INTERNAL RETURN e16 := e15 [REAL]
 RETURN
 PROC LABEL RAdd
  PARAM e19 := e18 [REAL]
  PARAM e21 := e20 [REAL]
  e22 := 0.0 [REAL]
  e24 := 0 [INT]
  e25 := 0 [INT]
  e26 := 0 [INT]
  e27 := 0 [INT]
  e28 := 0 [INT]
  e29 := 0 [INT]
  e30 := 0 [INT]
  e31 := 0 [INT]
  e32 := 0 [INT]
  e33 := 0 [INT]
  e34 := 0 [INT]
  e35 := 0 [INT]
  e36 := 0 [INT]
  e37 := 0 [INT]
  e38 := 0 [INT]
  e39 := 0 [INT]
  CALL RealSign((e19 -> e40)[REAL])
  EXTERNAL RETURN e50 := e43 [INT]
  e25 := e50 [INT]
  CALL RealSign((e21 -> e40)[REAL])
  EXTERNAL RETURN e51 := e43 [INT]
  e26 := e51 [INT]
  CALL RealExponent((e19 -> e52)[REAL])
  EXTERNAL RETURN e67 := e55 [INT]
  e28 := e67 [INT]
  CALL RealExponent((e21 -> e52)[REAL])
  EXTERNAL RETURN e68 := e55 [INT]
  e29 := e68 [INT]
  CALL RealMantissa((e19 -> e69)[REAL])
  EXTERNAL RETURN e95 := e72 [INT]
  e30 := e95 [INT]
  CALL RealMantissa((e21 -> e69)[REAL])
  EXTERNAL RETURN e96 := e72 [INT]
  e31 := e96 [INT]
  e97 := "N1 base is " [STRING]
  CALL WriteString((e97 -> e98)[STRING])
  CALL WriteInt((e30 -> f33)[INT])
  CALL WriteLn()
  f36 := "N2 base is " [STRING]
  CALL WriteString((f36 -> e98)[STRING])
  CALL WriteInt((e31 -> f33)[INT])
  CALL WriteLn()
  f37 := e28 LT e29 [BOOL]
  IF f37 EQ TRUE THEN IFSTAT_0_SEQ_0_LEVEL_0_1 ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  f38 := e29 IADD f49 [INT]
  e32 := f38 [INT]
  f41 := e29 ISUB e28 [INT]
  e27 := f41 [INT]
  f42 := e30 IRSHIFT e27 [INT]
  e30 := f42 [INT]
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  f43 := e28 GT e29 [BOOL]
  IF f43 EQ TRUE THEN IFSTAT_0_SEQ_1_LEVEL_0 ELSE IFNEXT_0_SEQ_1_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_1_LEVEL_0
  f44 := e28 IADD f49 [INT]
  e32 := f44 [INT]
  f46 := e28 ISUB e29 [INT]
  e27 := f46 [INT]
  f47 := e31 IRSHIFT e27 [INT]
  e31 := f47 [INT]
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_1
  f48 := e28 IADD f49 [INT]
  e32 := f48 [INT]
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_2_LEVEL_0
  LABEL IFEND_0_LEVEL_0_1
  f50 := 0 [INT]
  f51 := e25 EQ f50 [BOOL]
  f52 := 1 [INT]
  f53 := e26 EQ f52 [BOOL]
  f54 := f51 LAND f53 [BOOL]
  IF f54 EQ TRUE THEN IFSTAT_1_SEQ_0_LEVEL_0_1 ELSE IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_1
  f55 := e30 GT e31 [BOOL]
  IF f55 EQ TRUE THEN IFSTAT_2_SEQ_0_LEVEL_1_0 ELSE IFNEXT_2_SEQ_0_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_1_0
  f56 := 0 [INT]
  e35 := f56 [INT]
  f57 := e30 ISUB e31 [INT]
  e34 := f57 [INT]
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_1_0
  f58 := e30 LT e31 [BOOL]
  IF f58 EQ TRUE THEN IFSTAT_2_SEQ_1_LEVEL_1_0 ELSE IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_1_LEVEL_1_0
  f59 := 1 [INT]
  e35 := f59 [INT]
  f60 := e31 ISUB e30 [INT]
  e34 := f60 [INT]
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_1_0
  f61 := 0 [INT]
  e35 := f61 [INT]
  f62 := 0 [INT]
  e34 := f62 [INT]
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_2_LEVEL_1
  LABEL IFEND_2_LEVEL_1_0
  GOTO IFEND_1_LEVEL_0_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_1
  f63 := 1 [INT]
  f64 := e25 EQ f63 [BOOL]
  f65 := 0 [INT]
  f66 := e26 EQ f65 [BOOL]
  f67 := f64 LAND f66 [BOOL]
  IF f67 EQ TRUE THEN IFSTAT_1_SEQ_1_LEVEL_0 ELSE IFNEXT_1_SEQ_1_LEVEL_0
  LABEL IFSTAT_1_SEQ_1_LEVEL_0
  e6 := e30 GT e31 [BOOL]
  IF e6 EQ TRUE THEN IFSTAT_4_SEQ_0_LEVEL_1 ELSE IFNEXT_4_SEQ_0_LEVEL_1
  LABEL IFSTAT_4_SEQ_0_LEVEL_1
  f68 := 1 [INT]
  e35 := f68 [INT]
  f69 := e30 ISUB e31 [INT]
  e34 := f69 [INT]
  GOTO IFEND_4_LEVEL_1
  LABEL IFNEXT_4_SEQ_0_LEVEL_1
  f70 := e30 LT e31 [BOOL]
  IF f70 EQ TRUE THEN IFSTAT_4_SEQ_1_LEVEL_1 ELSE IFNEXT_4_SEQ_1_LEVEL_1
  LABEL IFSTAT_4_SEQ_1_LEVEL_1
  f71 := 0 [INT]
  e35 := f71 [INT]
  f72 := e31 ISUB e30 [INT]
  e34 := f72 [INT]
  GOTO IFEND_4_LEVEL_1
  LABEL IFNEXT_4_SEQ_1_LEVEL_1
  f73 := 0 [INT]
  e35 := f73 [INT]
  f74 := 0 [INT]
  e34 := f74 [INT]
  GOTO IFEND_4_LEVEL_1
  LABEL IFNEXT_4_SEQ_2_LEVEL_1
  LABEL IFEND_4_LEVEL_1
  GOTO IFEND_1_LEVEL_0_1
  LABEL IFNEXT_1_SEQ_1_LEVEL_0
  e35 := e25 [INT]
  f75 := e30 IADD e31 [INT]
  e34 := f75 [INT]
  GOTO IFEND_1_LEVEL_0_1
  LABEL IFNEXT_1_SEQ_2_LEVEL_0
  LABEL IFEND_1_LEVEL_0_1
  f76 := "Result Base is " [STRING]
  CALL WriteString((f76 -> e98)[STRING])
  CALL WriteInt((e34 -> f33)[INT])
  CALL WriteLn()
  f77 := 24 [INT]
  f78 := e34 IRSHIFT f77 [INT]
  f79 := 1 [INT]
  f80 := f78 IAND f79 [INT]
  e33 := f80 [INT]
  f81 := 1 [INT]
  f82 := e33 EQ f81 [BOOL]
  IF f82 EQ TRUE THEN IFSTAT_7_SEQ_0_LEVEL_0_0 ELSE IFNEXT_7_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_7_SEQ_0_LEVEL_0_0
  f83 := 1 [INT]
  f84 := e34 IRSHIFT f83 [INT]
  e34 := f84 [INT]
  f85 := 1 [INT]
  f86 := e32 IADD f85 [INT]
  e32 := f86 [INT]
  GOTO IFEND_7_LEVEL_0_0
  LABEL IFNEXT_7_SEQ_0_LEVEL_0_0
  LABEL IFEND_7_LEVEL_0_0
  e36 := e34 [INT]
  f87 := 0 [INT]
  e39 := f87 [INT]
  CALL IntIsZero((e36 -> f19)[INT])
  EXTERNAL RETURN f88 := f22 [BOOL]
  f89 := BNOT f88 [BOOL]
  IF f89 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_1 ELSE WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_1
  IF f89 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_1 ELSE WHILEEND_0_LEVEL_0_1
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_1
  f90 := 1 [INT]
  f91 := e36 IAND f90 [INT]
  e38 := f91 [INT]
  f92 := 1 [INT]
  f93 := e38 EQ f92 [BOOL]
  IF f93 EQ TRUE THEN IFSTAT_8_SEQ_0_LEVEL_0_0 ELSE IFNEXT_8_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_8_SEQ_0_LEVEL_0_0
  e37 := e39 [INT]
  GOTO IFEND_8_LEVEL_0_0
  LABEL IFNEXT_8_SEQ_0_LEVEL_0_0
  LABEL IFEND_8_LEVEL_0_0
  f94 := 1 [INT]
  f95 := e39 IADD f94 [INT]
  e39 := f95 [INT]
  f96 := 1 [INT]
  f97 := e36 IRSHIFT f96 [INT]
  e36 := f97 [INT]
  CALL IntIsZero((e36 -> f19)[INT])
  EXTERNAL RETURN f98 := f22 [BOOL]
  f99 := BNOT f98 [BOOL]
  f89 := f99 [BOOL]
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_1
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILEEND_0_LEVEL_0_1
  g10 := 23 [INT]
  g11 := e37 LT g10 [BOOL]
  IF g11 EQ TRUE THEN IFSTAT_9_SEQ_0_LEVEL_0_0 ELSE IFNEXT_9_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_9_SEQ_0_LEVEL_0_0
  g12 := 23 [INT]
  g13 := g12 ISUB e37 [INT]
  e27 := g13 [INT]
  g14 := e34 ILSHIFT e27 [INT]
  e34 := g14 [INT]
  g15 := e32 ISUB e27 [INT]
  e32 := g15 [INT]
  GOTO IFEND_9_LEVEL_0_0
  LABEL IFNEXT_9_SEQ_0_LEVEL_0_0
  LABEL IFEND_9_LEVEL_0_0
  g16 := 255 [INT]
  g17 := e32 IAND g16 [INT]
  g18 := 23 [INT]
  g19 := g17 ILSHIFT g18 [INT]
  e24 := g19 [INT]
  g20 := 8388607 [INT]
  g21 := e34 IAND g20 [INT]
  g22 := e24 IOR g21 [INT]
  e24 := g22 [INT]
  g23 := 31 [INT]
  g24 := e35 ILSHIFT g23 [INT]
  g25 := e24 IOR g24 [INT]
  e24 := g25 [INT]
  CALL IntBinaryAsReal((e24 -> e13)[INT])
  EXTERNAL RETURN j9 := e16 [REAL]
  e22 := j9 [REAL]
  INTERNAL RETURN e23 := e22 [REAL]
 RETURN
 PROC LABEL RealSign
  PARAM e41 := e40 [REAL]
  e42 := 0 [INT]
  e44 := 0 [INT]
  CALL RealBinaryAsInt((e41 -> d98)[REAL])
  EXTERNAL RETURN e45 := e11 [INT]
  e44 := e45 [INT]
  e46 := 31 [INT]
  e47 := e44 IRSHIFT e46 [INT]
  e48 := 1 [INT]
  e49 := e47 IAND e48 [INT]
  e42 := e49 [INT]
  INTERNAL RETURN e43 := e42 [INT]
 RETURN
 PROC LABEL RealExponent
  PARAM e53 := e52 [REAL]
  e54 := 0 [INT]
  e56 := 0 [INT]
  e57 := 0 [INT]
  CALL RealBinaryAsInt((e53 -> d98)[REAL])
  EXTERNAL RETURN e58 := e11 [INT]
  e56 := e58 [INT]
  e59 := 23 [INT]
  e60 := e56 IRSHIFT e59 [INT]
  e61 := 255 [INT]
  e62 := e60 IAND e61 [INT]
  e57 := e62 [INT]
  e63 := e57 ISUB f49 [INT]
  e54 := e63 [INT]
  INTERNAL RETURN e55 := e54 [INT]
 RETURN
 PROC LABEL RealMantissa
  PARAM e70 := e69 [REAL]
  e71 := 0 [INT]
  e73 := 0 [INT]
  e74 := 0 [INT]
  e75 := 0 [INT]
  CALL RealBinaryAsInt((e70 -> d98)[REAL])
  EXTERNAL RETURN e76 := e11 [INT]
  e73 := e76 [INT]
  e77 := 8388607 [INT]
  e78 := e73 IAND e77 [INT]
  e74 := e78 [INT]
  CALL RealIsZero((e70 -> e79)[REAL])
  EXTERNAL RETURN e92 := e82 [BOOL]
  IF e92 EQ TRUE THEN IFSTAT_6_SEQ_0_LEVEL_0_0 ELSE IFNEXT_6_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0_0
  e71 := e74 [INT]
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_0_LEVEL_0_0
  e93 := 8388608 [INT]
  e94 := e74 IOR e93 [INT]
  e71 := e94 [INT]
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_1_LEVEL_0
  LABEL IFEND_6_LEVEL_0_0
  INTERNAL RETURN e72 := e71 [INT]
 RETURN
 PROC LABEL RealIsZero
  PARAM e80 := e79 [REAL]
  e81 := FALSE [BOOL]
  e83 := 0 [INT]
  e84 := 0 [INT]
  CALL RealBinaryAsInt((e80 -> d98)[REAL])
  EXTERNAL RETURN e85 := e11 [INT]
  e84 := e85 [INT]
  e86 := 134217727 [INT]
  e87 := e84 IAND e86 [INT]
  e83 := e87 [INT]
  e88 := 0 [INT]
  e89 := e83 EQ e88 [BOOL]
  IF e89 EQ TRUE THEN IFSTAT_0_SEQ_0_LEVEL_0_0 ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  e90 := TRUE [BOOL]
  e81 := e90 [BOOL]
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  e91 := FALSE [BOOL]
  e81 := e91 [BOOL]
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  INTERNAL RETURN e82 := e81 [BOOL]
 RETURN
 PROC LABEL WriteString
  PARAM e99 := e98 [STRING]
  f10 := 0 [INT]
  f11 := 0 [INT]
  f12 := 0 [INT]
  f13 := 0 [INT]
  CALL StringAsAddress((e99 -> f14)[STRING])
  EXTERNAL RETURN f17 := f16 [INT]
  f10 := f17 [INT]
  f18 := 0 [INT]
  f11 := f18 [INT]
  IPARAM f12
  IPARAM f10
  IPARAM f11
  IASM "LDRB %r, [%r, +%r]"
  IPARAM f12
  IPARAM f12
  IASM "STR %r, %a"
  CALL IntIsZero((f12 -> f19)[INT])
  EXTERNAL RETURN f27 := f22 [BOOL]
  f28 := BNOT f27 [BOOL]
  IF f28 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_0 ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF f28 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_0 ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  IPARAM f13
  IASM "MOV %r, R0"
  IPARAM f12
  IASM "MOV R0, %r"
  IASM "SWI 6"
  f29 := 1 [INT]
  f30 := f11 IADD f29 [INT]
  f11 := f30 [INT]
  IPARAM f12
  IPARAM f10
  IPARAM f11
  IASM "LDRB %r, [%r, +%r]"
  IPARAM f12
  IPARAM f12
  IASM "STR %r, %a"
  IPARAM f13
  IASM "MOV R0, %r"
  CALL IntIsZero((f12 -> f19)[INT])
  EXTERNAL RETURN f31 := f22 [BOOL]
  f32 := BNOT f31 [BOOL]
  f28 := f32 [BOOL]
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
 RETURN
 PROC LABEL StringAsAddress
  PARAM k1 := f14 [STRING]
  f15 := 0 [INT]
  k0 := 0 [INT]
  IPARAM k0
  IPARAM k1
  IASM "LDR %r, %a"
  IPARAM k0
  IPARAM f15
  IASM "STR %r, %a"
  INTERNAL RETURN f16 := f15 [INT]
 RETURN
 PROC LABEL IntIsZero
  PARAM f20 := f19 [INT]
  f21 := FALSE [BOOL]
  f23 := 0 [INT]
  f24 := f20 EQ f23 [BOOL]
  IF f24 EQ TRUE THEN IFSTAT_1_SEQ_0_LEVEL_0_0 ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  f25 := TRUE [BOOL]
  f21 := f25 [BOOL]
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  f26 := FALSE [BOOL]
  f21 := f26 [BOOL]
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  INTERNAL RETURN f22 := f21 [BOOL]
 RETURN
 PROC LABEL WriteInt
  PARAM f34 := f33 [INT]
  f35 := 0 [INT]
  IPARAM f35
  IASM "MOV %r, R0"
  IPARAM f34
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM f35
  IASM "MOV R0, %r"
 RETURN
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN
 PROC LABEL WriteReal
  PARAM g28 := g27 [REAL]
  g29 := 0 [INT]
  IPARAM g29
  IASM "MOV %r, R0"
  IPARAM g28
  IASM "LDR R0, %a"
  IASM "SWI 2"
  IPARAM g29
  IASM "MOV R0, %r"
 RETURN
