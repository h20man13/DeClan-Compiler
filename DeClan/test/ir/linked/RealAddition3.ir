SYMBOL SECTION
 ENTRY f25 CONST INTERNAL GLOBAL v1 
 ENTRY f27 CONST INTERNAL GLOBAL v2 
 ENTRY f32 INTERNAL RETURN RealBinaryAsInt
 ENTRY f38 INTERNAL RETURN IntBinaryAsReal
 ENTRY f41 INTERNAL RETURN RNeg
 ENTRY f66 INTERNAL RETURN RealSign
 ENTRY g36 CONST INTERNAL GLOBAL realBias 
 ENTRY f82 INTERNAL RETURN RealExponent
 ENTRY g13 INTERNAL RETURN RealIsZero
 ENTRY g19 INTERNAL RETURN RealMantissa
 ENTRY g85 INTERNAL PARAM n IntIsZero 0
 ENTRY g89 INTERNAL RETURN IntIsZero
 ENTRY h30 INTERNAL RETURN RAdd
 ENTRY h33 INTERNAL RETURN RSub
DATA SECTION
 DEF f24 := 50.0 <REAL>
 DEF GLOBAL f25 := f24 <REAL>
 DEF f26 := 92.0 <REAL>
 DEF GLOBAL f27 := f26 <REAL>
 DEF f80 := 127 <INT>
 DEF GLOBAL g36 := f80 <INT>
BSS SECTION
 DEF GLOBAL f28 := 0.0 <REAL>
CODE SECTION
 CALL RSub([(GLOBAL f25) -> h34]<REAL>, [(GLOBAL f27) -> h35]<REAL>)
 DEF h36 := (RETURN h33) <REAL>
 GLOBAL f28 := h36 <REAL>
 CALL WriteReal([(GLOBAL f28) -> h38]<REAL>)
END
PROC SECTION
 PROC LABEL RSub
  DEF k5 := 0.0 <REAL>
  CALL RNeg([(PARAM h32) -> f42]<REAL>)
  DEF k6 := (RETURN f41) <REAL>
  CALL RAdd([(PARAM h31) -> h31]<REAL>, [k6 -> h32]<REAL>)
  DEF k7 := (RETURN h30) <REAL>
  f40 := k7 <REAL>
  DEF RETURN h33 := f40 <REAL>
 RETURN
 PROC LABEL RNeg
  DEF b48 := 0 <INT>
  DEF b49 := 0 <INT>
  DEF b50 := 0.0 <REAL>
  DEF b51 := 0 <INT>
  DEF b52 := 1 <INT>
  DEF b53 := 31 <INT>
  DEF b54 := b52 ILSHIFT b53 <INT>
  f29 := b54 <INT>
  CALL RealBinaryAsInt([(PARAM f42) -> f34]<REAL>)
  DEF b57 := (RETURN f32) <INT>
  b49 := b57 <INT>
  DEF b58 := b49 IXOR f29 <INT>
  f35 := b58 <INT>
  CALL IntBinaryAsReal([f35 -> f39]<INT>)
  CALL IntBinaryAsReal([f35 -> f39]<INT>)
  DEF b59 := (RETURN f38) <REAL>
  f40 := b59 <REAL>
  DEF RETURN f41 := f40 <REAL>
 RETURN
 PROC LABEL RealBinaryAsInt
  DEF f30 := 0 <INT>
  DEF f31 := 0.0 <REAL>
  IPARAM f31
  IPARAM (PARAM k)
  IASM "LDR %r, %a"
  IPARAM f31
  IPARAM f33
  IASM "STR %r, %a"
  DEF RETURN f32 := f33 <INT>
 RETURN
 PROC LABEL IntBinaryAsReal
  DEF f36 := 0.0 <REAL>
  DEF f37 := 0 <INT>
  IPARAM f31
  IPARAM (PARAM a)
  IASM "LDR %r, %a"
  IPARAM f31
  IPARAM f33
  IASM "STR %r, %a"
  DEF RETURN f38 := f33 <REAL>
 RETURN
 PROC LABEL RAdd
  DEF f40 := 0.0 <REAL>
  DEF f35 := 0 <INT>
  DEF f43 := 0 <INT>
  DEF f44 := 0 <INT>
  DEF f45 := 0 <INT>
  DEF f46 := 0 <INT>
  DEF f47 := 0 <INT>
  DEF f48 := 0 <INT>
  DEF f49 := 0 <INT>
  DEF f50 := 0 <INT>
  DEF f51 := 0 <INT>
  DEF f52 := 0 <INT>
  DEF f53 := 0 <INT>
  DEF f54 := 0 <INT>
  DEF f55 := 0 <INT>
  DEF f29 := 0 <INT>
  DEF f56 := 0 <INT>
  CALL RealSign([(PARAM h31) -> f67]<REAL>)
  DEF f68 := (RETURN f66) <INT>
  f43 := f68 <INT>
  CALL RealSign([(PARAM h32) -> f67]<REAL>)
  CALL RealSign([(PARAM h32) -> f67]<REAL>)
  DEF f69 := (RETURN f66) <INT>
  f44 := f69 <INT>
  CALL RealExponent([(PARAM h31) -> f83]<REAL>)
  DEF f84 := (RETURN f82) <INT>
  f46 := f84 <INT>
  CALL RealExponent([(PARAM h32) -> f83]<REAL>)
  CALL RealExponent([(PARAM h32) -> f83]<REAL>)
  DEF f85 := (RETURN f82) <INT>
  f47 := f85 <INT>
  CALL RealMantissa([(PARAM h31) -> g20]<REAL>)
  DEF g21 := (RETURN g19) <INT>
  f48 := g21 <INT>
  CALL RealMantissa([(PARAM h32) -> g20]<REAL>)
  CALL RealMantissa([(PARAM h32) -> g20]<REAL>)
  DEF g22 := (RETURN g19) <INT>
  f49 := g22 <INT>
  DEF g23 := f46 LT f47 <BOOL>
  DEF g24 := TRUE <BOOL>
  IF g23 EQ g24
  THEN IFSTAT_0_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  DEF g25 := f47 IADD (GLOBAL g36) <INT>
  f50 := g25 <INT>
  DEF g27 := f47 ISUB f46 <INT>
  f45 := g27 <INT>
  DEF g28 := f48 IRSHIFT f45 <INT>
  f48 := g28 <INT>
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  DEF g29 := f46 GT f47 <BOOL>
  DEF g30 := TRUE <BOOL>
  IF g29 EQ g30
  THEN IFSTAT_0_SEQ_1_LEVEL_0
  ELSE IFNEXT_0_SEQ_1_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_1_LEVEL_0
  DEF g31 := f46 IADD (GLOBAL g36) <INT>
  f50 := g31 <INT>
  DEF g33 := f46 ISUB f47 <INT>
  f45 := g33 <INT>
  DEF g34 := f49 IRSHIFT f45 <INT>
  f49 := g34 <INT>
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_1
  DEF g35 := f46 IADD (GLOBAL g36) <INT>
  f50 := g35 <INT>
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_2_LEVEL_0
  LABEL IFEND_0_LEVEL_0_1
  DEF g37 := 0 <INT>
  DEF g38 := f43 EQ g37 <BOOL>
  DEF g39 := 1 <INT>
  DEF g40 := f44 EQ g39 <BOOL>
  DEF g41 := g38 LAND g40 <BOOL>
  DEF g42 := TRUE <BOOL>
  IF g41 EQ g42
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF g43 := f48 GT f49 <BOOL>
  DEF g44 := TRUE <BOOL>
  IF g43 EQ g44
  THEN IFSTAT_2_SEQ_0_LEVEL_1_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_1_0
  DEF g45 := 0 <INT>
  f53 := g45 <INT>
  DEF g46 := f48 ISUB f49 <INT>
  f52 := g46 <INT>
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_1_0
  DEF g47 := f48 LT f49 <BOOL>
  DEF g48 := TRUE <BOOL>
  IF g47 EQ g48
  THEN IFSTAT_2_SEQ_1_LEVEL_1_0
  ELSE IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_1_LEVEL_1_0
  DEF g49 := 1 <INT>
  f53 := g49 <INT>
  DEF g50 := f49 ISUB f48 <INT>
  f52 := g50 <INT>
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_1_0
  DEF g51 := 0 <INT>
  f53 := g51 <INT>
  DEF g52 := 0 <INT>
  f52 := g52 <INT>
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_2_LEVEL_1
  LABEL IFEND_2_LEVEL_1_0
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF g53 := 1 <INT>
  DEF g54 := f43 EQ g53 <BOOL>
  DEF g55 := 0 <INT>
  DEF g56 := f44 EQ g55 <BOOL>
  DEF g57 := g54 LAND g56 <BOOL>
  DEF g58 := TRUE <BOOL>
  IF g57 EQ g58
  THEN IFSTAT_1_SEQ_1_LEVEL_0
  ELSE IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_1_LEVEL_0
  DEF g59 := f48 GT f49 <BOOL>
  DEF g60 := TRUE <BOOL>
  IF g59 EQ g60
  THEN IFSTAT_4_SEQ_0_LEVEL_1
  ELSE IFNEXT_4_SEQ_0_LEVEL_1
  LABEL IFSTAT_4_SEQ_0_LEVEL_1
  DEF g61 := 1 <INT>
  f53 := g61 <INT>
  DEF g62 := f48 ISUB f49 <INT>
  f52 := g62 <INT>
  GOTO IFEND_4_LEVEL_1
  LABEL IFNEXT_4_SEQ_0_LEVEL_1
  DEF g63 := f48 LT f49 <BOOL>
  DEF g64 := TRUE <BOOL>
  IF g63 EQ g64
  THEN IFSTAT_4_SEQ_1_LEVEL_1
  ELSE IFNEXT_4_SEQ_1_LEVEL_1
  LABEL IFSTAT_4_SEQ_1_LEVEL_1
  DEF g65 := 0 <INT>
  f53 := g65 <INT>
  DEF g66 := f49 ISUB f48 <INT>
  f52 := g66 <INT>
  GOTO IFEND_4_LEVEL_1
  LABEL IFNEXT_4_SEQ_1_LEVEL_1
  DEF g67 := 0 <INT>
  f53 := g67 <INT>
  DEF g68 := 0 <INT>
  f52 := g68 <INT>
  GOTO IFEND_4_LEVEL_1
  LABEL IFNEXT_4_SEQ_2_LEVEL_1
  LABEL IFEND_4_LEVEL_1
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  f53 := f43 <INT>
  DEF g69 := f48 IADD f49 <INT>
  f52 := g69 <INT>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_2_LEVEL_0
  LABEL IFEND_1_LEVEL_0_0
  DEF g70 := 24 <INT>
  DEF g71 := f52 IRSHIFT g70 <INT>
  DEF g72 := 1 <INT>
  DEF g73 := g71 IAND g72 <INT>
  f51 := g73 <INT>
  DEF g74 := 1 <INT>
  DEF g75 := f51 EQ g74 <BOOL>
  DEF g76 := TRUE <BOOL>
  IF g75 EQ g76
  THEN IFSTAT_7_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_7_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_7_SEQ_0_LEVEL_0_0
  DEF g77 := 1 <INT>
  DEF g78 := f52 IRSHIFT g77 <INT>
  f52 := g78 <INT>
  DEF g79 := 1 <INT>
  DEF g80 := f50 IADD g79 <INT>
  f50 := g80 <INT>
  GOTO IFEND_7_LEVEL_0_0
  LABEL IFNEXT_7_SEQ_0_LEVEL_0_0
  LABEL IFEND_7_LEVEL_0_0
  f54 := f52 <INT>
  DEF g81 := 0 <INT>
  f56 := g81 <INT>
  CALL IntIsZero([f54 -> g85]<INT>)
  DEF g90 := (RETURN g89) <BOOL>
  DEF g91 := BNOT g90 <BOOL>
  DEF g92 := TRUE <BOOL>
  IF g91 EQ g92
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF g91 EQ g92
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  DEF g93 := 1 <INT>
  DEF g94 := f54 IAND g93 <INT>
  f29 := g94 <INT>
  DEF g95 := 1 <INT>
  DEF g96 := f29 EQ g95 <BOOL>
  DEF g97 := TRUE <BOOL>
  IF g96 EQ g97
  THEN IFSTAT_8_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_8_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_8_SEQ_0_LEVEL_0_0
  f55 := f56 <INT>
  GOTO IFEND_8_LEVEL_0_0
  LABEL IFNEXT_8_SEQ_0_LEVEL_0_0
  LABEL IFEND_8_LEVEL_0_0
  DEF g98 := 1 <INT>
  DEF g99 := f56 IADD g98 <INT>
  f56 := g99 <INT>
  DEF h10 := 1 <INT>
  DEF h11 := f54 IRSHIFT h10 <INT>
  f54 := h11 <INT>
  CALL IntIsZero([f54 -> g85]<INT>)
  CALL IntIsZero([f54 -> g85]<INT>)
  DEF h12 := (RETURN g89) <BOOL>
  DEF h13 := BNOT h12 <BOOL>
  g91 := h13 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
  DEF h14 := 23 <INT>
  DEF h15 := f55 LT h14 <BOOL>
  DEF h16 := TRUE <BOOL>
  IF h15 EQ h16
  THEN IFSTAT_9_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_9_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_9_SEQ_0_LEVEL_0_0
  DEF h17 := 23 <INT>
  DEF h18 := h17 ISUB f55 <INT>
  f45 := h18 <INT>
  DEF h19 := f52 ILSHIFT f45 <INT>
  f52 := h19 <INT>
  DEF j1 := f50 ISUB f45 <INT>
  f50 := j1 <INT>
  GOTO IFEND_9_LEVEL_0_0
  LABEL IFNEXT_9_SEQ_0_LEVEL_0_0
  LABEL IFEND_9_LEVEL_0_0
  DEF h20 := 255 <INT>
  DEF h21 := f50 IAND h20 <INT>
  DEF h22 := 23 <INT>
  DEF h23 := h21 ILSHIFT h22 <INT>
  f35 := h23 <INT>
  DEF h24 := 8388607 <INT>
  DEF h25 := f52 IAND h24 <INT>
  DEF h26 := f35 IOR h25 <INT>
  f35 := h26 <INT>
  DEF h27 := 31 <INT>
  DEF h28 := f53 ILSHIFT h27 <INT>
  DEF h29 := f35 IOR h28 <INT>
  f35 := h29 <INT>
  CALL IntBinaryAsReal([f35 -> f39]<INT>)
  DEF k4 := (RETURN f38) <REAL>
  f40 := k4 <REAL>
  DEF RETURN h30 := f40 <REAL>
 RETURN
 PROC LABEL RealSign
  DEF f57 := 0 <INT>
  DEF f58 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g14) -> f34]<REAL>)
  CALL RealBinaryAsInt([(PARAM g14) -> f34]<REAL>)
  DEF f59 := (RETURN f32) <INT>
  f60 := f59 <INT>
  DEF f61 := 31 <INT>
  DEF f62 := f60 IRSHIFT f61 <INT>
  DEF f63 := 1 <INT>
  DEF f64 := f62 IAND f63 <INT>
  f65 := f64 <INT>
  DEF RETURN f66 := f65 <INT>
 RETURN
 PROC LABEL RealExponent
  DEF f70 := 0 <INT>
  DEF f71 := 0 <INT>
  DEF f72 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g14) -> f34]<REAL>)
  CALL RealBinaryAsInt([(PARAM g14) -> f34]<REAL>)
  DEF f73 := (RETURN f32) <INT>
  f60 := f73 <INT>
  DEF f74 := 23 <INT>
  DEF f75 := f60 IRSHIFT f74 <INT>
  DEF f76 := 255 <INT>
  DEF f77 := f75 IAND f76 <INT>
  f72 := f77 <INT>
  DEF f78 := f72 ISUB (GLOBAL g36) <INT>
  f65 := f78 <INT>
  DEF RETURN f82 := f65 <INT>
 RETURN
 PROC LABEL RealMantissa
  DEF f86 := 0 <INT>
  DEF f87 := 0 <INT>
  DEF f88 := 0 <INT>
  DEF f89 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g14) -> f34]<REAL>)
  CALL RealBinaryAsInt([(PARAM g14) -> f34]<REAL>)
  DEF f90 := (RETURN f32) <INT>
  f87 := f90 <INT>
  DEF f91 := 8388607 <INT>
  DEF f92 := f87 IAND f91 <INT>
  f88 := f92 <INT>
  CALL RealIsZero([(PARAM g14) -> g14]<REAL>)
  CALL RealIsZero([(PARAM g14) -> g14]<REAL>)
  DEF g15 := (RETURN g13) <BOOL>
  DEF g16 := TRUE <BOOL>
  IF g15 EQ g16
  THEN IFSTAT_6_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_6_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0_0
  f65 := f88 <INT>
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_0_LEVEL_0_0
  DEF g17 := 8388608 <INT>
  DEF g18 := f88 IOR g17 <INT>
  f65 := g18 <INT>
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_1_LEVEL_0
  LABEL IFEND_6_LEVEL_0_0
  DEF RETURN g19 := f65 <INT>
 RETURN
 PROC LABEL RealIsZero
  DEF f65 := FALSE <BOOL>
  DEF f93 := 0 <INT>
  DEF f94 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g14) -> f34]<REAL>)
  DEF f95 := (RETURN f32) <INT>
  f94 := f95 <INT>
  DEF f96 := 2147483647 <INT>
  DEF f97 := f94 IAND f96 <INT>
  f93 := f97 <INT>
  DEF f98 := 0 <INT>
  DEF f99 := f93 EQ f98 <BOOL>
  DEF g10 := TRUE <BOOL>
  IF f99 EQ g10
  THEN IFSTAT_0_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  DEF g11 := TRUE <BOOL>
  f65 := g11 <BOOL>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  DEF g12 := FALSE <BOOL>
  f65 := g12 <BOOL>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  DEF RETURN g13 := f65 <BOOL>
 RETURN
 PROC LABEL IntIsZero
  DEF g82 := FALSE <BOOL>
  DEF g83 := 0 <INT>
  DEF g84 := (PARAM g85) EQ g83 <BOOL>
  DEF g86 := TRUE <BOOL>
  IF g84 EQ g86
  THEN IFSTAT_1_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_1
  DEF g87 := TRUE <BOOL>
  f65 := g87 <BOOL>
  GOTO IFEND_1_LEVEL_0_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_1
  DEF g88 := FALSE <BOOL>
  f65 := g88 <BOOL>
  GOTO IFEND_1_LEVEL_0_1
  LABEL IFNEXT_1_SEQ_1_LEVEL_0
  LABEL IFEND_1_LEVEL_0_1
  DEF RETURN g89 := f65 <BOOL>
 RETURN
 PROC LABEL WriteReal
  DEF h37 := 0 <INT>
  IPARAM y
  IASM "MOV %r, R0"
  IPARAM (PARAM h38)
  IASM "LDR R0, %a"
  IASM "SWI 2"
  IPARAM y
  IASM "MOV R0, %r"
 RETURN
