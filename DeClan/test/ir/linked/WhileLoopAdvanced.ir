SYMBOL SECTION
 ENTRY f25 CONST INTERNAL MAX
 ENTRY f27 CONST INTERNAL MIN
DATA SECTION
 DEF f24 := 10 [INT]
 DEF GLOBAL f25 := f24 [INT]
 DEF f26 := 0 [INT]
 DEF GLOBAL f27 := f26 [INT]
 DEF GLOBAL f28 := 0 [INT]
 DEF GLOBAL f29 := 0 [INT]
BSS SECTION
CODE SECTION
 f28 := (GLOBAL f27) [INT]
 DEF f30 := (GLOBAL f28) GT (GLOBAL f25) [BOOL]
 DEF f31 := TRUE [BOOL]
 IF f30 EQ f31
 THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
 ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
 LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
 IF f30 EQ f31
 THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
 ELSE WHILEEND_0_LEVEL_0_0
 LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
 CALL WriteInt(((GLOBAL f28) -> f33)[INT])
 DEF f34 := 1 [INT]
 DEF f35 := (GLOBAL f28) IADD f34 [INT]
 f28 := f35 [INT]
 DEF f36 := (GLOBAL f28) GT (GLOBAL f25) [BOOL]
 f30 := f36 [BOOL]
 GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
 LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
 DEF f37 := (GLOBAL f28) LT (GLOBAL f25) [BOOL]
 DEF f38 := TRUE [BOOL]
 IF f37 EQ f38
 THEN WHILESTAT_0_SEQ_1_LEVEL_0
 ELSE WHILENEXT_0_SEQ_1_LEVEL_0
 LABEL WHILECOND_0_SEQ_1_LEVEL_0
 IF f37 EQ f38
 THEN WHILESTAT_0_SEQ_1_LEVEL_0
 ELSE WHILEEND_0_LEVEL_0_0
 LABEL WHILESTAT_0_SEQ_1_LEVEL_0
 f29 := (GLOBAL f27) [INT]
 DEF f39 := (GLOBAL f29) LT (GLOBAL f25) [BOOL]
 DEF f40 := TRUE [BOOL]
 IF f39 EQ f40
 THEN WHILESTAT_2_SEQ_0_LEVEL_1
 ELSE WHILENEXT_2_SEQ_0_LEVEL_1
 LABEL WHILECOND_2_SEQ_0_LEVEL_1
 IF f39 EQ f40
 THEN WHILESTAT_2_SEQ_0_LEVEL_1
 ELSE WHILEEND_2_LEVEL_1
 LABEL WHILESTAT_2_SEQ_0_LEVEL_1
 CALL WriteInt(((GLOBAL f29) -> f33)[INT])
 DEF f41 := 1 [INT]
 DEF f42 := (GLOBAL f29) IADD f41 [INT]
 f29 := f42 [INT]
 DEF f43 := (GLOBAL f29) LT (GLOBAL f25) [BOOL]
 f39 := f43 [BOOL]
 GOTO WHILECOND_2_SEQ_0_LEVEL_1
 LABEL WHILENEXT_2_SEQ_0_LEVEL_1
 LABEL WHILEEND_2_LEVEL_1
 CALL WriteLn()
 CALL WriteInt(((GLOBAL f28) -> f33)[INT])
 CALL WriteLn()
 DEF f44 := 1 [INT]
 DEF f45 := (GLOBAL f28) IADD f44 [INT]
 f28 := f45 [INT]
 DEF f46 := (GLOBAL f28) LT (GLOBAL f25) [BOOL]
 f37 := f46 [BOOL]
 GOTO WHILECOND_0_SEQ_1_LEVEL_0
 LABEL WHILENEXT_0_SEQ_1_LEVEL_0
 LABEL WHILEEND_0_LEVEL_0_0
END
PROC SECTION
 PROC LABEL WriteInt
  DEF f32 := 0 [INT]
  IPARAM f32
  IASM "MOV %r, R0"
  IPARAM (PARAM f33)
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM f32
  IASM "MOV R0, %r"
 RETURN
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN
