SYMBOL SECTION
DATA SECTION
 d62 := 10 [INT]
 GLOBAL d63 := d62 [INT]
 d64 := 0 [INT]
 GLOBAL d65 := d64 [INT]
 GLOBAL d66 := 0 [INT]
 GLOBAL d67 := 0 [INT]
CODE SECTION
 d66 := d65 [INT]
 d68 := d66 GT d63 [BOOL]
 IF d68 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_0 ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
 LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
 IF d68 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0_0 ELSE WHILEEND_0_LEVEL_0_0
 LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
 CALL WriteInt((d66 -> d69)[INT])
 d72 := 1 [INT]
 d73 := d66 IADD d72 [INT]
 d66 := d73 [INT]
 d74 := d66 GT d63 [BOOL]
 d68 := d74 [BOOL]
 GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
 LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
 d75 := d66 LT d63 [BOOL]
 IF d75 EQ TRUE THEN WHILESTAT_0_SEQ_1_LEVEL_0 ELSE WHILENEXT_0_SEQ_1_LEVEL_0
 LABEL WHILECOND_0_SEQ_1_LEVEL_0
 IF d75 EQ TRUE THEN WHILESTAT_0_SEQ_1_LEVEL_0 ELSE WHILEEND_0_LEVEL_0_0
 LABEL WHILESTAT_0_SEQ_1_LEVEL_0
 d67 := d65 [INT]
 d76 := d67 LT d63 [BOOL]
 IF d76 EQ TRUE THEN WHILESTAT_2_SEQ_0_LEVEL_1 ELSE WHILENEXT_2_SEQ_0_LEVEL_1
 LABEL WHILECOND_2_SEQ_0_LEVEL_1
 IF d76 EQ TRUE THEN WHILESTAT_2_SEQ_0_LEVEL_1 ELSE WHILEEND_2_LEVEL_1
 LABEL WHILESTAT_2_SEQ_0_LEVEL_1
 CALL WriteInt((d67 -> d69)[INT])
 d77 := 1 [INT]
 d78 := d67 IADD d77 [INT]
 d67 := d78 [INT]
 d79 := d67 LT d63 [BOOL]
 d76 := d79 [BOOL]
 GOTO WHILECOND_2_SEQ_0_LEVEL_1
 LABEL WHILENEXT_2_SEQ_0_LEVEL_1
 LABEL WHILEEND_2_LEVEL_1
 CALL WriteLn()
 CALL WriteInt((d66 -> d69)[INT])
 CALL WriteLn()
 d80 := 1 [INT]
 d81 := d66 IADD d80 [INT]
 d66 := d81 [INT]
 d82 := d66 LT d63 [BOOL]
 d75 := d82 [BOOL]
 GOTO WHILECOND_0_SEQ_1_LEVEL_0
 LABEL WHILENEXT_0_SEQ_1_LEVEL_0
 LABEL WHILEEND_0_LEVEL_0_0
END
PROC SECTION
 PROC LABEL WriteInt
  PARAM d70 := d69 [INT]
  d71 := 0 [INT]
  IPARAM d71
  IASM "MOV %r, R0"
  IPARAM d70
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM d71
  IASM "MOV R0, %r"
 RETURN
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN
