SYMBOL SECTION
 ENTRY f27 INTERNAL PARAM n INeg 0
 ENTRY f30 INTERNAL RETURN INeg
 ENTRY f32 CONST INTERNAL GLOBAL answer 
 ENTRY f48 INTERNAL PARAM dividend Div 0
 ENTRY f50 INTERNAL PARAM divisor Div 1
 ENTRY f58 INTERNAL RETURN Mod
 ENTRY f85 INTERNAL PARAM n IntIsZero 0
 ENTRY f90 INTERNAL RETURN IntIsZero
 ENTRY g36 INTERNAL RETURN Div
DATA SECTION
 DEF f24 := 42 <INT>
 CALL INeg([f24 -> f27]<INT>)
 DEF f31 := (RETURN f30) <INT>
 DEF GLOBAL f32 := f31 <INT>
BSS SECTION
 DEF GLOBAL f33 := 0 <INT>
CODE SECTION
 GLOBAL f33 := (GLOBAL f32) <INT>
 DEF f34 := 0 <INT>
 DEF f35 := (GLOBAL f33) LT f34 <BOOL>
 DEF f36 := TRUE <BOOL>
 IF f35 EQ f36
 THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
 ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
 LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
 IF f35 EQ f36
 THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
 ELSE WHILEEND_0_LEVEL_0_0
 LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
 CALL INeg([(GLOBAL f33) -> f27]<INT>)
 DEF f37 := (RETURN f30) <INT>
 GLOBAL f33 := f37 <INT>
 DEF f38 := 0 <INT>
 DEF f39 := (GLOBAL f33) LT f38 <BOOL>
 f35 := f39 <BOOL>
 GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
 LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
 DEF f40 := 0 <INT>
 DEF f41 := (GLOBAL f33) GT f40 <BOOL>
 DEF f42 := TRUE <BOOL>
 IF f41 EQ f42
 THEN WHILESTAT_0_SEQ_1_LEVEL_0
 ELSE WHILENEXT_0_SEQ_1_LEVEL_0
 LABEL WHILECOND_0_SEQ_1_LEVEL_0
 IF f41 EQ f42
 THEN WHILESTAT_0_SEQ_1_LEVEL_0
 ELSE WHILEEND_0_LEVEL_0_0
 LABEL WHILESTAT_0_SEQ_1_LEVEL_0
 CALL Display([(GLOBAL f33) -> g55]<INT>)
 DEF g47 := 0 <INT>
 DEF g48 := (GLOBAL f33) GT g47 <BOOL>
 f41 := g48 <BOOL>
 GOTO WHILECOND_0_SEQ_1_LEVEL_0
 LABEL WHILENEXT_0_SEQ_1_LEVEL_0
 LABEL WHILEEND_0_LEVEL_0_0
 DEF g49 := 10 <INT>
 GLOBAL f33 := g49 <INT>
 DEF g50 := 2 <INT>
 LABEL FORBEG_0_LEVEL_0
 IF (GLOBAL f33) GT g50
 THEN FORLOOP_0_LEVEL_0
 ELSE FOREND_0_LEVEL_0
 LABEL FORLOOP_0_LEVEL_0
 CALL WriteInt([(GLOBAL f33) -> f67]<INT>)
 DEF g51 := 1 <INT>
 CALL INeg([g51 -> f27]<INT>)
 DEF g52 := (RETURN f30) <INT>
 GLOBAL f33 := (GLOBAL f33) IADD g52 <INT>
 GOTO FORBEG_0_LEVEL_0
 LABEL FOREND_0_LEVEL_0
 DEF g53 := TRUE <BOOL>
 DEF g54 := TRUE <BOOL>
 LABEL REPEATBEG_0_LEVEL_0
 IF g53 EQ g54
 THEN REPEATEND_0_LEVEL_0
 ELSE REPEATLOOP_0_LEVEL_0
 LABEL REPEATLOOP_0_LEVEL_0
 CALL Display([(GLOBAL f33) -> g55]<INT>)
 DEF g56 := TRUE <BOOL>
 g53 := g56 <BOOL>
 GOTO REPEATBEG_0_LEVEL_0
 LABEL REPEATEND_0_LEVEL_0
END
PROC SECTION
 PROC LABEL INeg
  DEF f25 := 0 <INT>
  DEF f26 := INOT (PARAM f27) <INT>
  DEF f28 := 1 <INT>
  DEF f29 := f26 IADD f28 <INT>
  f25 := f29 <INT>
  DEF RETURN f30 := f25 <INT>
 RETURN
 PROC LABEL Display
  DEF f43 := FALSE <BOOL>
  DEF f44 := 2 <INT>
  CALL Mod([(PARAM f70) -> f59]<INT>, [f44 -> f60]<INT>)
  DEF f61 := (RETURN f58) <INT>
  DEF f62 := 0 <INT>
  DEF f63 := f61 NE f62 <BOOL>
  GLOBAL f32 := f63 <BOOL>
  DEF f64 := TRUE <BOOL>
  IF (GLOBAL f32) EQ f64
  THEN IFSTAT_0_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  DEF f65 := 1 <INT>
  CALL WriteInt([f65 -> f67]<INT>)
  DEF f68 := 1 <INT>
  DEF f69 := (PARAM f70) ISUB f68 <INT>
  DEF f71 := 2 <INT>
  CALL Div([f69 -> f48]<INT>, [f71 -> f50]<INT>)
  DEF g37 := (RETURN g36) <INT>
  PARAM f70 := g37 <INT>
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  DEF g38 := 0 <INT>
  DEF g39 := (PARAM f70) EQ g38 <BOOL>
  DEF g40 := TRUE <BOOL>
  IF g39 EQ g40
  THEN IFSTAT_0_SEQ_1_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_1_LEVEL_0_0
  DEF g41 := 1 <INT>
  CALL INeg([g41 -> f27]<INT>)
  DEF g42 := (RETURN f30) <INT>
  CALL WriteInt([g42 -> f67]<INT>)
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  DEF g43 := 0 <INT>
  CALL WriteInt([g43 -> f67]<INT>)
  DEF g44 := 2 <INT>
  CALL Div([(PARAM f70) -> f48]<INT>, [g44 -> f50]<INT>)
  DEF g45 := (RETURN g36) <INT>
  PARAM f70 := g45 <INT>
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_2_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_1
 RETURN
 PROC LABEL Mod
  DEF f45 := 0 <INT>
  DEF f46 := 0 <INT>
  f47 := (PARAM f48) <INT>
  DEF f49 := f47 ISUB (PARAM f50) <INT>
  DEF f51 := 0 <INT>
  DEF f52 := f49 GE f51 <BOOL>
  DEF f53 := TRUE <BOOL>
  IF f52 EQ f53
  THEN WHILESTAT_4_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_4_SEQ_0_LEVEL_0_0
  IF f52 EQ f53
  THEN WHILESTAT_4_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_4_LEVEL_0_0
  LABEL WHILESTAT_4_SEQ_0_LEVEL_0_0
  DEF f54 := f47 ISUB (PARAM f50) <INT>
  f47 := f54 <INT>
  DEF f55 := f47 ISUB (PARAM f50) <INT>
  DEF f56 := 0 <INT>
  DEF f57 := f55 GE f56 <BOOL>
  f52 := f57 <BOOL>
  GOTO WHILECOND_4_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_4_LEVEL_0_0
  DEF RETURN f58 := f47 <INT>
 RETURN
 PROC LABEL WriteInt
  DEF f66 := 0 <INT>
  IPARAM f66
  IASM "MOV %r, R0"
  IPARAM (PARAM f67)
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM f66
  IASM "MOV R0, %r"
 RETURN
 PROC LABEL Div
  DEF f47 := 0 <INT>
  DEF f72 := 0 <INT>
  DEF f73 := 0 <INT>
  DEF f74 := 0 <INT>
  DEF f75 := 0 <INT>
  DEF f76 := 0 <INT>
  DEF f77 := 0 <INT>
  DEF f78 := 0 <INT>
  DEF f79 := 0 <INT>
  f73 := (PARAM f48) <INT>
  DEF f80 := 0 <INT>
  f76 := f80 <INT>
  DEF f81 := 0 <INT>
  f74 := f81 <INT>
  CALL IntIsZero([f73 -> f85]<INT>)
  DEF f91 := (RETURN f90) <BOOL>
  DEF f92 := BNOT f91 <BOOL>
  DEF f93 := TRUE <BOOL>
  IF f92 EQ f93
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_1
  IF f92 EQ f93
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILEEND_0_LEVEL_0_1
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_1
  DEF f94 := 1 <INT>
  DEF f95 := f73 IAND f94 <INT>
  f75 := f95 <INT>
  DEF f96 := 1 <INT>
  DEF f97 := f75 EQ f96 <BOOL>
  DEF f98 := TRUE <BOOL>
  IF f97 EQ f98
  THEN IFSTAT_0_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  f74 := f76 <INT>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFEND_0_LEVEL_0_0
  DEF f99 := 1 <INT>
  DEF g10 := f76 IADD f99 <INT>
  f76 := g10 <INT>
  DEF g11 := 1 <INT>
  DEF g12 := f73 IRSHIFT g11 <INT>
  f73 := g12 <INT>
  CALL IntIsZero([f73 -> f85]<INT>)
  CALL IntIsZero([f73 -> f85]<INT>)
  DEF g13 := (RETURN f90) <BOOL>
  DEF g14 := BNOT g13 <BOOL>
  f92 := g14 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_1
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILEEND_0_LEVEL_0_1
  f77 := f74 <INT>
  f73 := (PARAM f48) <INT>
  DEF g15 := 0 <INT>
  f79 := g15 <INT>
  DEF g16 := 0 <INT>
  f25 := g16 <INT>
  DEF g17 := 0 <INT>
  DEF g18 := f77 GE g17 <BOOL>
  DEF g19 := TRUE <BOOL>
  IF g18 EQ g19
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_2_SEQ_0_LEVEL_0_0
  IF g18 EQ g19
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_2_LEVEL_0_0
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0_0
  DEF g20 := f73 IRSHIFT f77 <INT>
  DEF g21 := 1 <INT>
  DEF g22 := g20 IAND g21 <INT>
  f78 := g22 <INT>
  DEF g23 := 1 <INT>
  DEF g24 := f79 ILSHIFT g23 <INT>
  DEF g25 := g24 IOR f78 <INT>
  f79 := g25 <INT>
  DEF g26 := f79 GE (PARAM f50) <BOOL>
  DEF g27 := TRUE <BOOL>
  IF g26 EQ g27
  THEN IFSTAT_1_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_1
  DEF g28 := 1 <INT>
  DEF g29 := g28 ILSHIFT f77 <INT>
  DEF g30 := f25 IOR g29 <INT>
  f25 := g30 <INT>
  DEF g31 := f79 ISUB (PARAM f50) <INT>
  f79 := g31 <INT>
  GOTO IFEND_1_LEVEL_0_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFEND_1_LEVEL_0_1
  DEF g32 := 1 <INT>
  DEF g33 := f77 ISUB g32 <INT>
  f77 := g33 <INT>
  DEF g34 := 0 <INT>
  DEF g35 := f77 GE g34 <BOOL>
  g18 := g35 <BOOL>
  GOTO WHILECOND_2_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_2_LEVEL_0_0
  DEF RETURN g36 := f25 <INT>
 RETURN
 PROC LABEL IntIsZero
  DEF f82 := FALSE <BOOL>
  DEF f83 := 0 <INT>
  DEF f84 := (PARAM f85) EQ f83 <BOOL>
  DEF f86 := TRUE <BOOL>
  IF f84 EQ f86
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF f87 := TRUE <BOOL>
  f88 := f87 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF f89 := FALSE <BOOL>
  f88 := f89 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN f90 := f88 <BOOL>
 RETURN
