SYMBOL SECTION
 ENTRY a INTERNAL PARAM n INeg 0
 ENTRY b INTERNAL RETURN INeg
 ENTRY c INTERNAL PARAM dividend Div 0
 ENTRY d INTERNAL PARAM divisor Div 1
 ENTRY e INTERNAL RETURN Div
 ENTRY f INTERNAL PARAM dividend Divide 0
 ENTRY g INTERNAL PARAM divisor Divide 1
 ENTRY h INTERNAL RETURN Divide
 ENTRY i INTERNAL PARAM dividend Mod 0
 ENTRY j INTERNAL PARAM divisor Mod 1
 ENTRY k INTERNAL RETURN Mod
 ENTRY l INTERNAL PARAM a Multiply 0
 ENTRY m INTERNAL PARAM b Multiply 1
 ENTRY n INTERNAL result INeg
 ENTRY r INTERNAL total Div
 ENTRY s INTERNAL result Div
 ENTRY t INTERNAL tempDividend Div
 ENTRY u INTERNAL dividendLastOne Div
 ENTRY v INTERNAL dividendLastDigit Div
 ENTRY w INTERNAL dividendCount Div
 ENTRY x INTERNAL dividendIndex Div
 ENTRY y INTERNAL bitAtIndex Div
 ENTRY z INTERNAL remainder Div
 ENTRY C EXTERNAL PARAM IntIsZero 0
 ENTRY D EXTERNAL RETURN IntIsZero
 ENTRY b3 INTERNAL divResult Divide
 ENTRY b4 INTERNAL realDividend Divide
 ENTRY b5 INTERNAL realDivisor Divide
 ENTRY b6 EXTERNAL PARAM IntToReal 0
 ENTRY b7 EXTERNAL RETURN IntToReal
 ENTRY c0 EXTERNAL PARAM RDivide 0
 ENTRY c1 EXTERNAL PARAM RDivide 1
 ENTRY c2 EXTERNAL RETURN RDivide
 ENTRY c4 INTERNAL total Mod
 ENTRY c5 INTERNAL result Mod
 ENTRY d4 INTERNAL result Multiply
DATA SECTION
PROC SECTION
 PROC LABEL INeg
  DEF n := 0 <INT>
  DEF o := INOT (PARAM a) <INT>
  DEF p := 1 <INT>
  DEF q := o IADD p <INT>
  n := q <INT>
  DEF RETURN b := n <INT>
 RETURN
 PROC LABEL Div
  DEF r := 0 <INT>
  DEF s := 0 <INT>
  DEF t := 0 <INT>
  DEF u := 0 <INT>
  DEF v := 0 <INT>
  DEF w := 0 <INT>
  DEF x := 0 <INT>
  DEF y := 0 <INT>
  DEF z := 0 <INT>
  t := (PARAM c) <INT>
  DEF A := 0 <INT>
  w := A <INT>
  DEF B := 0 <INT>
  u := B <INT>
  CALL IntIsZero([t -> C]<INT>)
  DEF E := (RETURN D) <BOOL>
  DEF F := BNOT E <BOOL>
  DEF G := TRUE <BOOL>
  IF F EQ G
  THEN WHILESTAT_0_SEQ_0_LEVEL_0
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0
  IF F EQ G
  THEN WHILESTAT_0_SEQ_0_LEVEL_0
  ELSE WHILEEND_0_LEVEL_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0
  DEF H := 1 <INT>
  DEF I := t IAND H <INT>
  v := I <INT>
  DEF J := 1 <INT>
  DEF K := v EQ J <BOOL>
  DEF L := TRUE <BOOL>
  IF K EQ L
  THEN IFSTAT_0_SEQ_0_LEVEL_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0
  u := w <INT>
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0
  LABEL IFEND_0_LEVEL_0
  DEF M := 1 <INT>
  DEF N := w IADD M <INT>
  w := N <INT>
  DEF O := 1 <INT>
  DEF P := t IRSHIFT O <INT>
  t := P <INT>
  CALL IntIsZero([t -> C]<INT>)
  CALL IntIsZero([t -> C]<INT>)
  DEF Q := (RETURN D) <BOOL>
  DEF R := BNOT Q <BOOL>
  F := R <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0
  LABEL WHILEEND_0_LEVEL_0
  x := u <INT>
  t := (PARAM c) <INT>
  DEF S := 0 <INT>
  z := S <INT>
  DEF T := 0 <INT>
  n := T <INT>
  DEF U := 0 <INT>
  DEF V := x GE U <BOOL>
  DEF W := TRUE <BOOL>
  IF V EQ W
  THEN WHILESTAT_2_SEQ_0_LEVEL_0
  ELSE WHILENEXT_2_SEQ_0_LEVEL_0
  LABEL WHILECOND_2_SEQ_0_LEVEL_0
  IF V EQ W
  THEN WHILESTAT_2_SEQ_0_LEVEL_0
  ELSE WHILEEND_2_LEVEL_0
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0
  DEF X := t IRSHIFT x <INT>
  DEF Y := 1 <INT>
  DEF Z := X IAND Y <INT>
  y := Z <INT>
  DEF a0 := 1 <INT>
  DEF a1 := z ILSHIFT a0 <INT>
  DEF a2 := a1 IOR y <INT>
  z := a2 <INT>
  DEF a3 := z GE (PARAM d) <BOOL>
  DEF a4 := TRUE <BOOL>
  IF a3 EQ a4
  THEN IFSTAT_1_SEQ_0_LEVEL_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0
  DEF a5 := 1 <INT>
  DEF a6 := a5 ILSHIFT x <INT>
  DEF a7 := n IOR a6 <INT>
  n := a7 <INT>
  DEF a8 := z ISUB (PARAM d) <INT>
  z := a8 <INT>
  GOTO IFEND_1_LEVEL_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0
  LABEL IFEND_1_LEVEL_0
  DEF a9 := 1 <INT>
  DEF b0 := x ISUB a9 <INT>
  x := b0 <INT>
  DEF b1 := 0 <INT>
  DEF b2 := x GE b1 <BOOL>
  V := b2 <BOOL>
  GOTO WHILECOND_2_SEQ_0_LEVEL_0
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0
  LABEL WHILEEND_2_LEVEL_0
  DEF RETURN e := n <INT>
 RETURN
 PROC LABEL Divide
  DEF b3 := 0.0 <REAL>
  DEF b4 := 0.0 <REAL>
  DEF b5 := 0.0 <REAL>
  CALL IntToReal([(PARAM c) -> b6]<INT>)
  DEF b8 := (RETURN b7) <REAL>
  b4 := b8 <REAL>
  CALL IntToReal([(PARAM d) -> b6]<INT>)
  CALL IntToReal([(PARAM d) -> b6]<INT>)
  DEF b9 := (RETURN b7) <REAL>
  b5 := b9 <REAL>
  CALL RDivide([b4 -> c0]<REAL>, [b5 -> c1]<REAL>)
  DEF c3 := (RETURN c2) <REAL>
  b3 := c3 <REAL>
  DEF RETURN h := b3 <REAL>
 RETURN
 PROC LABEL Mod
  DEF c4 := 0 <INT>
  DEF c5 := 0 <INT>
  r := (PARAM c) <INT>
  DEF c6 := r ISUB (PARAM d) <INT>
  DEF c7 := 0 <INT>
  DEF c8 := c6 GE c7 <BOOL>
  DEF c9 := TRUE <BOOL>
  IF c8 EQ c9
  THEN WHILESTAT_4_SEQ_0_LEVEL_0
  ELSE WHILENEXT_4_SEQ_0_LEVEL_0
  LABEL WHILECOND_4_SEQ_0_LEVEL_0
  IF c8 EQ c9
  THEN WHILESTAT_4_SEQ_0_LEVEL_0
  ELSE WHILEEND_4_LEVEL_0
  LABEL WHILESTAT_4_SEQ_0_LEVEL_0
  DEF d0 := r ISUB (PARAM d) <INT>
  r := d0 <INT>
  DEF d1 := r ISUB (PARAM d) <INT>
  DEF d2 := 0 <INT>
  DEF d3 := d1 GE d2 <BOOL>
  c8 := d3 <BOOL>
  GOTO WHILECOND_4_SEQ_0_LEVEL_0
  LABEL WHILENEXT_4_SEQ_0_LEVEL_0
  LABEL WHILEEND_4_LEVEL_0
  DEF RETURN k := r <INT>
 RETURN
 PROC LABEL Multiply
  DEF d4 := 0 <INT>
 RETURN
