SYMBOL SECTION
 a INTERNAL PARAM IntToReal 0
 c5 EXTERNAL realBias
 b INTERNAL RETURN IntToReal
 c INTERNAL PARAM RealToInt 0
 d INTERNAL RETURN RealToInt
 e INTERNAL PARAM BoolToInt 0
 f INTERNAL RETURN BoolToInt
 g INTERNAL PARAM BoolToReal 0
 h INTERNAL RETURN BoolToReal
 i INTERNAL PARAM IntToBool 0
 j INTERNAL RETURN IntToBool
 k INTERNAL PARAM RealToBool 0
 l INTERNAL RETURN RealToBool
 m INTERNAL PARAM RealBinaryAsInt 0
 n INTERNAL RETURN RealBinaryAsInt
 o INTERNAL PARAM IntBinaryAsReal 0
 p INTERNAL RETURN IntBinaryAsReal
 q INTERNAL PARAM BoolBinaryAsReal 0
 r INTERNAL RETURN BoolBinaryAsReal
 s INTERNAL PARAM RealBinaryAsBool 0
 t INTERNAL RETURN RealBinaryAsBool
 u INTERNAL PARAM BoolBinaryAsInt 0
 v INTERNAL RETURN BoolBinaryAsInt
 w INTERNAL PARAM IntBinaryAsBool 0
 x INTERNAL RETURN IntBinaryAsBool
 y INTERNAL PARAM StringAsAddress 0
 z INTERNAL RETURN StringAsAddress
DATA SECTION
PROC SECTION
 PROC LABEL IntToReal
  PARAM N := a [INT]
  A := 0.0 [REAL]
  B := 0 [INT]
  C := FALSE [BOOL]
  D := 0 [INT]
  E := 0 [INT]
  F := 0 [INT]
  G := 0 [INT]
  H := 0 [INT]
  I := 0 [INT]
  J := 0 [INT]
  K := 0 [INT]
  L := 0 [INT]
  M := 0 [INT]
  CALL Abs((N -> O)[INT])
  EXTERNAL RETURN Q := P [INT]
  B := Q [INT]
  G := B [INT]
  R := 0 [INT]
  F := R [INT]
  CALL IntIsNegative((N -> S)[INT])
  EXTERNAL RETURN U := T [BOOL]
  C := U [BOOL]
  CALL IntIsZero((G -> V)[INT])
  EXTERNAL RETURN X := W [BOOL]
  IF X EQ TRUE THEN IFSTAT_0_SEQ_0_LEVEL_0 ELSE IFNEXT_0_SEQ_0_LEVEL_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0
  Y := 0 [INT]
  D := Y [INT]
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0
  CALL IntIsZero((G -> Z)[INT])
  EXTERNAL RETURN a1 := a0 [BOOL]
  a2 := BNOT a1 [BOOL]
  IF a2 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0 ELSE WHILENEXT_0_SEQ_0_LEVEL_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0
  IF a2 EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0 ELSE WHILEEND_0_LEVEL_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0
  a3 := 1 [INT]
  a4 := G IAND a3 [INT]
  H := a4 [INT]
  a5 := 1 [INT]
  a6 := H EQ a5 [BOOL]
  IF a6 EQ TRUE THEN IFSTAT_1_SEQ_0_LEVEL_1 ELSE IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_1
  E := F [INT]
  GOTO IFEND_1_LEVEL_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFEND_1_LEVEL_1
  a7 := 1 [INT]
  a8 := F IADD a7 [INT]
  F := a8 [INT]
  a9 := 1 [INT]
  b0 := G IRSHIFT a9 [INT]
  G := b0 [INT]
  CALL IntIsZero((G -> b1)[INT])
  EXTERNAL RETURN b3 := b2 [BOOL]
  b4 := BNOT b3 [BOOL]
  a2 := b4 [BOOL]
  GOTO WHILECOND_0_SEQ_0_LEVEL_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0
  LABEL WHILEEND_0_LEVEL_0
  b5 := 23 [INT]
  b6 := E GT b5 [BOOL]
  IF b6 EQ TRUE THEN IFSTAT_2_SEQ_0_LEVEL_1 ELSE IFNEXT_2_SEQ_0_LEVEL_1
  LABEL IFSTAT_2_SEQ_0_LEVEL_1
  b7 := 23 [INT]
  b8 := E ISUB b7 [INT]
  b9 := B IRSHIFT b8 [INT]
  B := b9 [INT]
  GOTO IFEND_2_LEVEL_1
  LABEL IFNEXT_2_SEQ_0_LEVEL_1
  c0 := 23 [INT]
  c1 := E LT c0 [BOOL]
  IF c1 EQ TRUE THEN IFSTAT_2_SEQ_1_LEVEL_1 ELSE IFNEXT_2_SEQ_1_LEVEL_1
  LABEL IFSTAT_2_SEQ_1_LEVEL_1
  c2 := 23 [INT]
  c3 := c2 ISUB E [INT]
  c4 := B ILSHIFT c3 [INT]
  B := c4 [INT]
  GOTO IFEND_2_LEVEL_1
  LABEL IFNEXT_2_SEQ_1_LEVEL_1
  LABEL IFEND_2_LEVEL_1
  c6 := E IADD c5 [INT]
  J := c6 [INT]
  c7 := 8388607 [INT]
  L := c7 [INT]
  c8 := B IAND L [INT]
  K := c8 [INT]
  D := K [INT]
  c9 := 23 [INT]
  d0 := J ILSHIFT c9 [INT]
  d1 := D IOR d0 [INT]
  D := d1 [INT]
  IF C EQ TRUE THEN IFSTAT_3_SEQ_0_LEVEL_1 ELSE IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFSTAT_3_SEQ_0_LEVEL_1
  d2 := 1 [INT]
  d3 := 31 [INT]
  d4 := d2 ILSHIFT d3 [INT]
  d5 := D IOR d4 [INT]
  D := d5 [INT]
  GOTO IFEND_3_LEVEL_1
  LABEL IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFEND_3_LEVEL_1
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0
  LABEL IFEND_0_LEVEL_0
  CALL IntBinaryAsReal((D -> o)[INT])
  EXTERNAL RETURN d6 := p [REAL]
  A := d6 [REAL]
  INTERNAL RETURN b := A [REAL]
 RETURN
 PROC LABEL RealToInt
  PARAM e2 := c [REAL]
  d7 := 0 [INT]
  d8 := 0 [INT]
  d9 := 0 [INT]
  e0 := 0 [INT]
  e1 := 0 [INT]
  CALL RealExponent((e2 -> e3)[REAL])
  EXTERNAL RETURN e5 := e4 [INT]
  d8 := e5 [INT]
  CALL RealMantissa((e2 -> e6)[REAL])
  EXTERNAL RETURN e8 := e7 [INT]
  d9 := e8 [INT]
  CALL RealSign((e2 -> e9)[REAL])
  EXTERNAL RETURN f1 := f0 [INT]
  e0 := f1 [INT]
  f2 := 0 [INT]
  f3 := d8 GT f2 [BOOL]
  IF f3 EQ TRUE THEN IFSTAT_5_SEQ_0_LEVEL_0 ELSE IFNEXT_5_SEQ_0_LEVEL_0
  LABEL IFSTAT_5_SEQ_0_LEVEL_0
  f4 := d9 ILSHIFT d8 [INT]
  e1 := f4 [INT]
  GOTO IFEND_5_LEVEL_0
  LABEL IFNEXT_5_SEQ_0_LEVEL_0
  f5 := 0 [INT]
  f6 := d8 LT f5 [BOOL]
  IF f6 EQ TRUE THEN IFSTAT_5_SEQ_1_LEVEL_0 ELSE IFNEXT_5_SEQ_1_LEVEL_0
  LABEL IFSTAT_5_SEQ_1_LEVEL_0
  f7 := d9 IRSHIFT d8 [INT]
  e1 := f7 [INT]
  GOTO IFEND_5_LEVEL_0
  LABEL IFNEXT_5_SEQ_1_LEVEL_0
  e1 := d9 [INT]
  GOTO IFEND_5_LEVEL_0
  LABEL IFNEXT_5_SEQ_2_LEVEL_0
  LABEL IFEND_5_LEVEL_0
  f8 := 23 [INT]
  f9 := e1 IRSHIFT f8 [INT]
  d7 := f9 [INT]
  g0 := 1 [INT]
  g1 := e0 EQ g0 [BOOL]
  IF g1 EQ TRUE THEN IFSTAT_6_SEQ_0_LEVEL_0 ELSE IFNEXT_6_SEQ_0_LEVEL_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0
  g2 := INOT d7 [INT]
  d7 := g2 [INT]
  g3 := 1 [INT]
  g4 := d7 IADD g3 [INT]
  d7 := g4 [INT]
  GOTO IFEND_6_LEVEL_0
  LABEL IFNEXT_6_SEQ_0_LEVEL_0
  LABEL IFEND_6_LEVEL_0
  INTERNAL RETURN d := d7 [INT]
 RETURN
 PROC LABEL BoolToInt
  PARAM g6 := e [BOOL]
  g5 := 0 [INT]
  IF g6 EQ TRUE THEN IFSTAT_7_SEQ_0_LEVEL_0 ELSE IFNEXT_7_SEQ_0_LEVEL_0
  LABEL IFSTAT_7_SEQ_0_LEVEL_0
  g7 := 1 [INT]
  g5 := g7 [INT]
  GOTO IFEND_7_LEVEL_0
  LABEL IFNEXT_7_SEQ_0_LEVEL_0
  g8 := 0 [INT]
  g5 := g8 [INT]
  GOTO IFEND_7_LEVEL_0
  LABEL IFNEXT_7_SEQ_1_LEVEL_0
  LABEL IFEND_7_LEVEL_0
  INTERNAL RETURN f := g5 [INT]
 RETURN
 PROC LABEL BoolToReal
  PARAM h0 := g [BOOL]
  g9 := 0.0 [REAL]
  IF h0 EQ TRUE THEN IFSTAT_8_SEQ_0_LEVEL_0 ELSE IFNEXT_8_SEQ_0_LEVEL_0
  LABEL IFSTAT_8_SEQ_0_LEVEL_0
  h1 := 1.0 [REAL]
  g9 := h1 [REAL]
  GOTO IFEND_8_LEVEL_0
  LABEL IFNEXT_8_SEQ_0_LEVEL_0
  h2 := 2.0 [REAL]
  g9 := h2 [REAL]
  GOTO IFEND_8_LEVEL_0
  LABEL IFNEXT_8_SEQ_1_LEVEL_0
  LABEL IFEND_8_LEVEL_0
  INTERNAL RETURN h := g9 [REAL]
 RETURN
 PROC LABEL IntToBool
  PARAM h4 := i [INT]
  h3 := FALSE [BOOL]
  CALL IntIsZero((h4 -> h5)[INT])
  EXTERNAL RETURN h7 := h6 [BOOL]
  IF h7 EQ TRUE THEN IFSTAT_9_SEQ_0_LEVEL_0 ELSE IFNEXT_9_SEQ_0_LEVEL_0
  LABEL IFSTAT_9_SEQ_0_LEVEL_0
  h8 := FALSE [BOOL]
  h3 := h8 [BOOL]
  GOTO IFEND_9_LEVEL_0
  LABEL IFNEXT_9_SEQ_0_LEVEL_0
  h9 := TRUE [BOOL]
  h3 := h9 [BOOL]
  GOTO IFEND_9_LEVEL_0
  LABEL IFNEXT_9_SEQ_1_LEVEL_0
  LABEL IFEND_9_LEVEL_0
  INTERNAL RETURN j := h3 [BOOL]
 RETURN
 PROC LABEL RealToBool
  PARAM i1 := k [REAL]
  i0 := FALSE [BOOL]
  CALL RealIsZero((i1 -> i2)[REAL])
  EXTERNAL RETURN i4 := i3 [BOOL]
  IF i4 EQ TRUE THEN IFSTAT_10_SEQ_0_LEVEL_0 ELSE IFNEXT_10_SEQ_0_LEVEL_0
  LABEL IFSTAT_10_SEQ_0_LEVEL_0
  i5 := FALSE [BOOL]
  i0 := i5 [BOOL]
  GOTO IFEND_10_LEVEL_0
  LABEL IFNEXT_10_SEQ_0_LEVEL_0
  i6 := TRUE [BOOL]
  i0 := i6 [BOOL]
  GOTO IFEND_10_LEVEL_0
  LABEL IFNEXT_10_SEQ_1_LEVEL_0
  LABEL IFEND_10_LEVEL_0
  INTERNAL RETURN l := i0 [BOOL]
 RETURN
 PROC LABEL RealBinaryAsInt
  PARAM i9 := m [REAL]
  i7 := 0 [INT]
  i8 := 0.0 [REAL]
  IPARAM i8
  IPARAM i9
  IASM "LDR %r, %a"
  IPARAM i8
  IPARAM i7
  IASM "STR %r, %a"
  INTERNAL RETURN n := i7 [INT]
 RETURN
 PROC LABEL IntBinaryAsReal
  PARAM j2 := o [INT]
  j0 := 0.0 [REAL]
  j1 := 0 [INT]
  IPARAM j1
  IPARAM j2
  IASM "LDR %r, %a"
  IPARAM j1
  IPARAM j0
  IASM "STR %r, %a"
  INTERNAL RETURN p := j0 [REAL]
 RETURN
 PROC LABEL BoolBinaryAsReal
  PARAM j5 := q [BOOL]
  j3 := 0.0 [REAL]
  j4 := 0 [INT]
  IPARAM j4
  IPARAM j5
  IASM "LDRB %r, %a"
  IPARAM j4
  IPARAM j3
  IASM "STR %r, %a"
  INTERNAL RETURN r := j3 [REAL]
 RETURN
 PROC LABEL RealBinaryAsBool
  PARAM j8 := s [REAL]
  j6 := FALSE [BOOL]
  j7 := 0 [INT]
  IPARAM j7
  IPARAM j8
  IASM "LDR %r, %a"
  IPARAM j7
  IPARAM j6
  IASM "STRB %r, %a"
  INTERNAL RETURN t := j6 [BOOL]
 RETURN
 PROC LABEL BoolBinaryAsInt
  PARAM k1 := u [BOOL]
  j9 := 0 [INT]
  k0 := 0 [INT]
  IPARAM k0
  IPARAM k1
  IASM "LDRB %r, %a"
  IPARAM k0
  IPARAM j9
  IASM "STR %r, %a"
  INTERNAL RETURN v := j9 [INT]
 RETURN
 PROC LABEL IntBinaryAsBool
  PARAM k4 := w [INT]
  k2 := FALSE [BOOL]
  k3 := 0 [INT]
  IPARAM k3
  IPARAM k4
  IASM "LDR %r, %a"
  IPARAM k3
  IPARAM k2
  IASM "STRB %r, %a"
  INTERNAL RETURN x := k2 [BOOL]
 RETURN
 PROC LABEL StringAsAddress
  PARAM k7 := y [STRING]
  k5 := 0 [INT]
  k6 := 0 [INT]
  IPARAM k6
  IPARAM k7
  IASM "LDR %r, %a"
  IPARAM k6
  IPARAM k5
  IASM "STR %r, %a"
  INTERNAL RETURN z := k5 [INT]
 RETURN
