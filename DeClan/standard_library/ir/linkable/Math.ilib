SYMBOL SECTION

 ENTRY u EXTERNAL PARAM INeg 0
 ENTRY v EXTERNAL RETURN INeg
 ENTRY A EXTERNAL PARAM RealIsNegative 0
 ENTRY B EXTERNAL RETURN RealIsNegative
 ENTRY E EXTERNAL PARAM RNeg 0
 ENTRY F EXTERNAL RETURN RNeg
 ENTRY K EXTERNAL PARAM IntToReal 0
 ENTRY L EXTERNAL RETURN IntToReal
 ENTRY T EXTERNAL PARAM RMul 0
 ENTRY U EXTERNAL PARAM RMul 1
 ENTRY V EXTERNAL RETURN RMul
 ENTRY a5 EXTERNAL PARAM RDivide 0
 ENTRY a6 EXTERNAL PARAM RDivide 1
 ENTRY a7 EXTERNAL RETURN RDivide
 ENTRY b8 EXTERNAL PARAM RLessThan 0
 ENTRY b9 EXTERNAL PARAM RLessThan 1
 ENTRY c0 EXTERNAL RETURN RLessThan
 ENTRY c6 EXTERNAL PARAM RAdd 0
 ENTRY c7 EXTERNAL PARAM RAdd 1
 ENTRY c8 EXTERNAL RETURN RAdd
 ENTRY d3 EXTERNAL PARAM RealToInt 0
 ENTRY d4 EXTERNAL RETURN RealToInt
 ENTRY e1 EXTERNAL PARAM RSub 0
 ENTRY e2 EXTERNAL PARAM RSub 1
 ENTRY e3 EXTERNAL RETURN RSub
DATA SECTION

PROC SECTION

 PROC LABEL Abs
  DEF LOCAL q := 0 [INT]
  DEF LOCAL r := 0 [INT]
  DEF LOCAL s := (PARAM a) GE r [BOOL]
  DEF LOCAL t := TRUE [BOOL]
  IF s EQ t THEN IFSTAT_0_SEQ_0_LEVEL_0 ELSE IFNEXT_0_SEQ_0_LEVEL_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0
  q := (PARAM a) [INT]
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0
  CALL INeg(((PARAM a) -> u)[INT])
  DEF LOCAL w := (RETURN v) [INT]
  q := w [INT]
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0
  LABEL IFEND_0_LEVEL_0
  DEF RETURN b := q [INT]
 RETURN
 PROC LABEL RAbs
  DEF LOCAL x := 0.0 [REAL]
  DEF LOCAL y := 0 [INT]
  DEF LOCAL z := FALSE [BOOL]
  CALL RealIsNegative(((PARAM c) -> A)[REAL])
  DEF LOCAL C := (RETURN B) [BOOL]
  z := C [BOOL]
  DEF LOCAL D := TRUE [BOOL]
  IF z EQ D THEN IFSTAT_1_SEQ_0_LEVEL_0 ELSE IFNEXT_1_SEQ_0_LEVEL_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0
  CALL RNeg(((PARAM c) -> E)[REAL])
  DEF LOCAL G := (RETURN F) [REAL]
  x := G [REAL]
  GOTO IFEND_1_LEVEL_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0
  LABEL IFEND_1_LEVEL_0
  DEF RETURN d := x [REAL]
 RETURN
 PROC LABEL RealExp
  DEF LOCAL H := 0.0 [REAL]
  DEF LOCAL I := 0 [INT]
  DEF LOCAL J := 1 [INT]
  CALL IntToReal((J -> K)[INT])
  DEF LOCAL M := (RETURN L) [REAL]
  H := M [REAL]
  DEF LOCAL N := 0 [INT]
  I := N [INT]
  DEF LOCAL O := 0 [INT]
  DEF LOCAL P := (PARAM f) GT O [BOOL]
  DEF LOCAL Q := TRUE [BOOL]
  IF P EQ Q THEN IFSTAT_2_SEQ_0_LEVEL_0 ELSE IFNEXT_2_SEQ_0_LEVEL_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_0
  DEF LOCAL R := I LT (PARAM f) [BOOL]
  DEF LOCAL S := TRUE [BOOL]
  IF R EQ S THEN WHILESTAT_0_SEQ_0_LEVEL_0 ELSE WHILENEXT_0_SEQ_0_LEVEL_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0
  IF R EQ S THEN WHILESTAT_0_SEQ_0_LEVEL_0 ELSE WHILEEND_0_LEVEL_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0
  CALL RMul((H -> T)[REAL], ((PARAM e) -> U)[REAL])
  DEF LOCAL W := (RETURN V) [REAL]
  H := W [REAL]
  DEF LOCAL X := 1 [INT]
  DEF LOCAL Y := I IADD X [INT]
  I := Y [INT]
  DEF LOCAL Z := I LT (PARAM f) [BOOL]
  R := Z [BOOL]
  GOTO WHILECOND_0_SEQ_0_LEVEL_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0
  LABEL WHILEEND_0_LEVEL_0
  GOTO IFEND_2_LEVEL_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_0
  DEF LOCAL a0 := 0 [INT]
  DEF LOCAL a1 := (PARAM f) LT a0 [BOOL]
  DEF LOCAL a2 := TRUE [BOOL]
  IF a1 EQ a2 THEN IFSTAT_2_SEQ_1_LEVEL_0 ELSE IFNEXT_2_SEQ_1_LEVEL_0
  LABEL IFSTAT_2_SEQ_1_LEVEL_0
  DEF LOCAL a3 := I GT (PARAM f) [BOOL]
  DEF LOCAL a4 := TRUE [BOOL]
  IF a3 EQ a4 THEN WHILESTAT_2_SEQ_0_LEVEL_0 ELSE WHILENEXT_2_SEQ_0_LEVEL_0
  LABEL WHILECOND_2_SEQ_0_LEVEL_0
  IF a3 EQ a4 THEN WHILESTAT_2_SEQ_0_LEVEL_0 ELSE WHILEEND_2_LEVEL_0
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0
  CALL RDivide((H -> a5)[REAL], ((PARAM e) -> a6)[REAL])
  DEF LOCAL a8 := (RETURN a7) [REAL]
  H := a8 [REAL]
  DEF LOCAL a9 := 1 [INT]
  DEF LOCAL b0 := I ISUB a9 [INT]
  I := b0 [INT]
  DEF LOCAL b1 := I GT (PARAM f) [BOOL]
  a3 := b1 [BOOL]
  GOTO WHILECOND_2_SEQ_0_LEVEL_0
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0
  LABEL WHILEEND_2_LEVEL_0
  GOTO IFEND_2_LEVEL_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_0
  LABEL IFEND_2_LEVEL_0
  DEF RETURN g := H [REAL]
 RETURN
 PROC LABEL IntExp
  DEF LOCAL b2 := 0 [INT]
  DEF LOCAL b3 := 0.0 [REAL]
  DEF LOCAL b4 := 1 [INT]
  b2 := b4 [INT]
  DEF LOCAL b5 := 0 [INT]
  CALL IntToReal((b5 -> K)[INT])
  DEF LOCAL b6 := (RETURN L) [REAL]
  b3 := b6 [REAL]
  CALL IntToReal(((PARAM i) -> K)[INT])
  DEF LOCAL b7 := (RETURN L) [REAL]
  CALL RLessThan((b3 -> b8)[REAL], (b7 -> b9)[REAL])
  DEF LOCAL c1 := (RETURN c0) [BOOL]
  DEF LOCAL c2 := TRUE [BOOL]
  IF c1 EQ c2 THEN WHILESTAT_4_SEQ_0_LEVEL_0 ELSE WHILENEXT_4_SEQ_0_LEVEL_0
  LABEL WHILECOND_4_SEQ_0_LEVEL_0
  IF c1 EQ c2 THEN WHILESTAT_4_SEQ_0_LEVEL_0 ELSE WHILEEND_4_LEVEL_0
  LABEL WHILESTAT_4_SEQ_0_LEVEL_0
  DEF LOCAL c3 := b2 IMUL (PARAM h) [INT]
  b2 := c3 [INT]
  DEF LOCAL c4 := 1 [INT]
  CALL IntToReal((c4 -> K)[INT])
  DEF LOCAL c5 := (RETURN L) [REAL]
  CALL RAdd((b3 -> c6)[REAL], (c5 -> c7)[REAL])
  DEF LOCAL c9 := (RETURN c8) [REAL]
  b3 := c9 [REAL]
  CALL IntToReal(((PARAM i) -> K)[INT])
  DEF LOCAL d0 := (RETURN L) [REAL]
  CALL RLessThan((b3 -> b8)[REAL], (d0 -> b9)[REAL])
  DEF LOCAL d1 := (RETURN c0) [BOOL]
  c1 := d1 [BOOL]
  GOTO WHILECOND_4_SEQ_0_LEVEL_0
  LABEL WHILENEXT_4_SEQ_0_LEVEL_0
  LABEL WHILEEND_4_LEVEL_0
  DEF RETURN j := b2 [INT]
 RETURN
 PROC LABEL Floor
  DEF LOCAL d2 := 0 [INT]
  CALL RealToInt(((PARAM k) -> d3)[REAL])
  DEF LOCAL d5 := (RETURN d4) [INT]
  d2 := d5 [INT]
  DEF RETURN l := d2 [INT]
 RETURN
 PROC LABEL Round
  DEF LOCAL d6 := 0 [INT]
  DEF LOCAL d7 := 0.0 [REAL]
  CALL RealIsNegative(((PARAM m) -> A)[REAL])
  DEF LOCAL d8 := (RETURN B) [BOOL]
  DEF LOCAL d9 := TRUE [BOOL]
  IF d8 EQ d9 THEN IFSTAT_3_SEQ_0_LEVEL_0 ELSE IFNEXT_3_SEQ_0_LEVEL_0
  LABEL IFSTAT_3_SEQ_0_LEVEL_0
  DEF LOCAL e0 := 0.5 [REAL]
  CALL RSub(((PARAM m) -> e1)[REAL], (e0 -> e2)[REAL])
  DEF LOCAL e4 := (RETURN e3) [REAL]
  d7 := e4 [REAL]
  GOTO IFEND_3_LEVEL_0
  LABEL IFNEXT_3_SEQ_0_LEVEL_0
  DEF LOCAL e5 := 0.5 [REAL]
  CALL RAdd(((PARAM m) -> c6)[REAL], (e5 -> c7)[REAL])
  DEF LOCAL e6 := (RETURN c8) [REAL]
  d7 := e6 [REAL]
  GOTO IFEND_3_LEVEL_0
  LABEL IFNEXT_3_SEQ_1_LEVEL_0
  LABEL IFEND_3_LEVEL_0
  CALL Floor((d7 -> k)[REAL])
  DEF LOCAL e7 := (RETURN l) [INT]
  d6 := e7 [INT]
  DEF RETURN n := d6 [INT]
 RETURN
 PROC LABEL Ceil
  DEF LOCAL e8 := 0 [INT]
  CALL Floor(((PARAM o) -> k)[REAL])
  DEF LOCAL e9 := (RETURN l) [INT]
  DEF LOCAL f0 := 1 [INT]
  DEF LOCAL f1 := e9 IADD f0 [INT]
  e8 := f1 [INT]
  DEF RETURN p := e8 [INT]
 RETURN
