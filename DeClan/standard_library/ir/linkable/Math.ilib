SYMBOL SECTION
 a INTERNAL PARAM Abs 0
 b INTERNAL RETURN Abs
 c INTERNAL PARAM RAbs 0
 d INTERNAL RETURN RAbs
 f INTERNAL PARAM RealExp 0
 e INTERNAL PARAM RealExp 0
 g INTERNAL RETURN RealExp
 i INTERNAL PARAM IntExp 0
 h INTERNAL PARAM IntExp 0
 j INTERNAL RETURN IntExp
 k INTERNAL PARAM Floor 0
 l INTERNAL RETURN Floor
 m INTERNAL PARAM Round 0
 n INTERNAL RETURN Round
 o INTERNAL PARAM Ceil 0
 p INTERNAL RETURN Ceil
DATA SECTION
PROC SECTION
 PROC LABEL Abs
  PARAM r := a [INT]
  q := 0 [INT]
  s := 0 [INT]
  t := r GE s [BOOL]
  IF t EQ TRUE THEN IFSTAT_0_SEQ_0_LEVEL_0 ELSE IFNEXT_0_SEQ_0_LEVEL_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0
  q := r [INT]
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0
  CALL INeg((r -> u)[INT])
  EXTERNAL RETURN w := v [INT]
  q := w [INT]
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0
  LABEL IFEND_0_LEVEL_0
  INTERNAL RETURN b := q [INT]
 RETURN
 PROC LABEL RAbs
  PARAM A := c [REAL]
  x := 0.0 [REAL]
  y := 0 [INT]
  z := FALSE [BOOL]
  CALL RealIsNegative((A -> B)[REAL])
  EXTERNAL RETURN D := C [BOOL]
  z := D [BOOL]
  IF z EQ TRUE THEN IFSTAT_1_SEQ_0_LEVEL_0 ELSE IFNEXT_1_SEQ_0_LEVEL_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0
  CALL RNeg((A -> E)[REAL])
  EXTERNAL RETURN G := F [REAL]
  x := G [REAL]
  GOTO IFEND_1_LEVEL_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0
  LABEL IFEND_1_LEVEL_0
  INTERNAL RETURN d := x [REAL]
 RETURN
 PROC LABEL RealExp
  PARAM O := f [INT]
  PARAM S := e [REAL]
  H := 0.0 [REAL]
  I := 0 [INT]
  J := 1 [INT]
  CALL IntToReal((J -> K)[INT])
  EXTERNAL RETURN M := L [REAL]
  H := M [REAL]
  N := 0 [INT]
  I := N [INT]
  P := 0 [INT]
  Q := O GT P [BOOL]
  IF Q EQ TRUE THEN IFSTAT_2_SEQ_0_LEVEL_0 ELSE IFNEXT_2_SEQ_0_LEVEL_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_0
  R := I LT O [BOOL]
  IF R EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0 ELSE WHILENEXT_0_SEQ_0_LEVEL_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0
  IF R EQ TRUE THEN WHILESTAT_0_SEQ_0_LEVEL_0 ELSE WHILEEND_0_LEVEL_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0
  CALL RMul((H -> T)[REAL], (S -> U)[REAL])
  EXTERNAL RETURN W := V [REAL]
  H := W [REAL]
  X := 1 [INT]
  Y := I IADD X [INT]
  I := Y [INT]
  Z := I LT O [BOOL]
  R := Z [BOOL]
  GOTO WHILECOND_0_SEQ_0_LEVEL_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0
  LABEL WHILEEND_0_LEVEL_0
  GOTO IFEND_2_LEVEL_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_0
  a0 := 0 [INT]
  a1 := O LT a0 [BOOL]
  IF a1 EQ TRUE THEN IFSTAT_2_SEQ_1_LEVEL_0 ELSE IFNEXT_2_SEQ_1_LEVEL_0
  LABEL IFSTAT_2_SEQ_1_LEVEL_0
  a2 := I GT O [BOOL]
  IF a2 EQ TRUE THEN WHILESTAT_2_SEQ_0_LEVEL_0 ELSE WHILENEXT_2_SEQ_0_LEVEL_0
  LABEL WHILECOND_2_SEQ_0_LEVEL_0
  IF a2 EQ TRUE THEN WHILESTAT_2_SEQ_0_LEVEL_0 ELSE WHILEEND_2_LEVEL_0
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0
  CALL RDivide((H -> a3)[REAL], (S -> a4)[REAL])
  EXTERNAL RETURN a6 := a5 [REAL]
  H := a6 [REAL]
  a7 := 1 [INT]
  a8 := I ISUB a7 [INT]
  I := a8 [INT]
  a9 := I GT O [BOOL]
  a2 := a9 [BOOL]
  GOTO WHILECOND_2_SEQ_0_LEVEL_0
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0
  LABEL WHILEEND_2_LEVEL_0
  GOTO IFEND_2_LEVEL_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_0
  LABEL IFEND_2_LEVEL_0
  INTERNAL RETURN g := H [REAL]
 RETURN
 PROC LABEL IntExp
  PARAM b7 := i [INT]
  PARAM c5 := h [INT]
  b0 := 0 [INT]
  b1 := 0.0 [REAL]
  b2 := 1 [INT]
  b0 := b2 [INT]
  b3 := 0 [INT]
  CALL IntToReal((b3 -> b4)[INT])
  EXTERNAL RETURN b6 := b5 [REAL]
  b1 := b6 [REAL]
  CALL IntToReal((b7 -> b8)[INT])
  EXTERNAL RETURN c0 := b9 [REAL]
  CALL RLessThan((b1 -> c1)[REAL], (c0 -> c2)[REAL])
  EXTERNAL RETURN c4 := c3 [BOOL]
  IF c4 EQ TRUE THEN WHILESTAT_4_SEQ_0_LEVEL_0 ELSE WHILENEXT_4_SEQ_0_LEVEL_0
  LABEL WHILECOND_4_SEQ_0_LEVEL_0
  IF c4 EQ TRUE THEN WHILESTAT_4_SEQ_0_LEVEL_0 ELSE WHILEEND_4_LEVEL_0
  LABEL WHILESTAT_4_SEQ_0_LEVEL_0
  c6 := b0 IMUL c5 [INT]
  b0 := c6 [INT]
  c7 := 1 [INT]
  CALL IntToReal((c7 -> c8)[INT])
  EXTERNAL RETURN d0 := c9 [REAL]
  CALL RAdd((b1 -> d1)[REAL], (d0 -> d2)[REAL])
  EXTERNAL RETURN d4 := d3 [REAL]
  b1 := d4 [REAL]
  CALL IntToReal((b7 -> d5)[INT])
  EXTERNAL RETURN d7 := d6 [REAL]
  CALL RLessThan((b1 -> d8)[REAL], (d7 -> d9)[REAL])
  EXTERNAL RETURN e1 := e0 [BOOL]
  c4 := e1 [BOOL]
  GOTO WHILECOND_4_SEQ_0_LEVEL_0
  LABEL WHILENEXT_4_SEQ_0_LEVEL_0
  LABEL WHILEEND_4_LEVEL_0
  INTERNAL RETURN j := b0 [INT]
 RETURN
 PROC LABEL Floor
  PARAM e3 := k [REAL]
  e2 := 0 [INT]
  CALL RealToInt((e3 -> e4)[REAL])
  EXTERNAL RETURN e6 := e5 [INT]
  e2 := e6 [INT]
  INTERNAL RETURN l := e2 [INT]
 RETURN
 PROC LABEL Round
  PARAM e8 := m [REAL]
  e7 := 0 [INT]
  e9 := 0.5 [REAL]
  CALL RAdd((e8 -> f0)[REAL], (e9 -> f1)[REAL])
  EXTERNAL RETURN f3 := f2 [REAL]
  CALL Floor((f3 -> k)[REAL])
  EXTERNAL RETURN f4 := l [INT]
  e7 := f4 [INT]
  INTERNAL RETURN n := e7 [INT]
 RETURN
 PROC LABEL Ceil
  PARAM f6 := o [REAL]
  f5 := 0 [INT]
  CALL Floor((f6 -> k)[REAL])
  EXTERNAL RETURN f7 := l [INT]
  f8 := 1 [INT]
  f9 := f7 IADD f8 [INT]
  f5 := f9 [INT]
  INTERNAL RETURN p := f5 [INT]
 RETURN
